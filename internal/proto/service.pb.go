// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package proto

import (
	bytes "bytes"
	compress_gzip "compress/gzip"
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_protoc_gen_gogo_descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	io_ioutil "io/ioutil"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ControlResponse_ControlCmd int32

const (
	INSTALL_AGENT         ControlResponse_ControlCmd = 0
	UNINSTALL_AGENT       ControlResponse_ControlCmd = 1
	UPDATE_AGENT          ControlResponse_ControlCmd = 2
	START_AGENT           ControlResponse_ControlCmd = 3
	STOP_AGENT            ControlResponse_ControlCmd = 4
	UPDATE_AGENT_CONFIG   ControlResponse_ControlCmd = 5
	UPDATE_SIDECAR        ControlResponse_ControlCmd = 6
	UPDATE_SIDECAR_CONFIG ControlResponse_ControlCmd = 7
	EXEC_SCRIPT           ControlResponse_ControlCmd = 8
	CANCEL_AGENTS         ControlResponse_ControlCmd = 9
	EXEC_REST             ControlResponse_ControlCmd = 10
)

var ControlResponse_ControlCmd_name = map[int32]string{
	0:  "INSTALL_AGENT",
	1:  "UNINSTALL_AGENT",
	2:  "UPDATE_AGENT",
	3:  "START_AGENT",
	4:  "STOP_AGENT",
	5:  "UPDATE_AGENT_CONFIG",
	6:  "UPDATE_SIDECAR",
	7:  "UPDATE_SIDECAR_CONFIG",
	8:  "EXEC_SCRIPT",
	9:  "CANCEL_AGENTS",
	10: "EXEC_REST",
}

var ControlResponse_ControlCmd_value = map[string]int32{
	"INSTALL_AGENT":         0,
	"UNINSTALL_AGENT":       1,
	"UPDATE_AGENT":          2,
	"START_AGENT":           3,
	"STOP_AGENT":            4,
	"UPDATE_AGENT_CONFIG":   5,
	"UPDATE_SIDECAR":        6,
	"UPDATE_SIDECAR_CONFIG": 7,
	"EXEC_SCRIPT":           8,
	"CANCEL_AGENTS":         9,
	"EXEC_REST":             10,
}

func (ControlResponse_ControlCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 0}
}

type ControlResponse_StopAgentOptions_StopAgentOptionsType int32

const (
	STOP_UNRECOVER ControlResponse_StopAgentOptions_StopAgentOptionsType = 0
	STOP_RECOVER   ControlResponse_StopAgentOptions_StopAgentOptionsType = 1
)

var ControlResponse_StopAgentOptions_StopAgentOptionsType_name = map[int32]string{
	0: "STOP_UNRECOVER",
	1: "STOP_RECOVER",
}

var ControlResponse_StopAgentOptions_StopAgentOptionsType_value = map[string]int32{
	"STOP_UNRECOVER": 0,
	"STOP_RECOVER":   1,
}

func (ControlResponse_StopAgentOptions_StopAgentOptionsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 4, 0}
}

type Event_EventType int32

const (
	EVT_OP_PROGRESS          Event_EventType = 0
	EVT_AGENT_ERR            Event_EventType = 1
	EVT_OS_RESOURCE_USAGES   Event_EventType = 2
	EVT_PROC_RESOURCE_USAGES Event_EventType = 3
	EVT_EXEC_SCRIPT          Event_EventType = 4
	EVT_AGENT_HEALTH_CHECK   Event_EventType = 5
	EVT_REST_SCRIPT          Event_EventType = 6
)

var Event_EventType_name = map[int32]string{
	0: "EVT_OP_PROGRESS",
	1: "EVT_AGENT_ERR",
	2: "EVT_OS_RESOURCE_USAGES",
	3: "EVT_PROC_RESOURCE_USAGES",
	4: "EVT_EXEC_SCRIPT",
	5: "EVT_AGENT_HEALTH_CHECK",
	6: "EVT_REST_SCRIPT",
}

var Event_EventType_value = map[string]int32{
	"EVT_OP_PROGRESS":          0,
	"EVT_AGENT_ERR":            1,
	"EVT_OS_RESOURCE_USAGES":   2,
	"EVT_PROC_RESOURCE_USAGES": 3,
	"EVT_EXEC_SCRIPT":          4,
	"EVT_AGENT_HEALTH_CHECK":   5,
	"EVT_REST_SCRIPT":          6,
}

func (Event_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 0}
}

type Msg struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index                string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Typ                  string   `protobuf:"bytes,3,opt,name=typ,proto3" json:"typ,omitempty"`
	JsonBytes            []byte   `protobuf:"bytes,4,opt,name=jsonBytes,proto3" json:"jsonBytes,omitempty"`
	Key                  []byte   `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()      { *m = Msg{} }
func (*Msg) ProtoMessage() {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}
func (m *Msg) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return m.Size()
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()      { *m = EmptyResponse{} }
func (*EmptyResponse) ProtoMessage() {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}
func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return m.Size()
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type SidecarRequestHeader struct {
	Id                   Uuid      `protobuf:"bytes,1,opt,name=id,proto3,customtype=Uuid" json:"id"`
	Systime              time.Time `protobuf:"bytes,2,opt,name=systime,proto3,stdtime" json:"systime"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SidecarRequestHeader) Reset()      { *m = SidecarRequestHeader{} }
func (*SidecarRequestHeader) ProtoMessage() {}
func (*SidecarRequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}
func (m *SidecarRequestHeader) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SidecarRequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SidecarRequestHeader.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SidecarRequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarRequestHeader.Merge(m, src)
}
func (m *SidecarRequestHeader) XXX_Size() int {
	return m.Size()
}
func (m *SidecarRequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarRequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarRequestHeader proto.InternalMessageInfo

type RegisterRequest struct {
	SidecarRequestHeader `protobuf:"bytes,1,opt,name=H,proto3,embedded=H" json:"H"`
	OsType               string   `protobuf:"bytes,2,opt,name=osType,proto3" json:"osType,omitempty"`
	OsPlatform           string   `protobuf:"bytes,3,opt,name=osPlatform,proto3" json:"osPlatform,omitempty"`
	OsVersion            string   `protobuf:"bytes,4,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	CpuSerial            string   `protobuf:"bytes,5,opt,name=cpuSerial,proto3" json:"cpuSerial,omitempty"`
	CpuCores             uint32   `protobuf:"varint,6,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MemSize              uint64   `protobuf:"varint,7,opt,name=memSize,proto3" json:"memSize,omitempty"`
	SwapSize             uint64   `protobuf:"varint,8,opt,name=swapSize,proto3" json:"swapSize,omitempty"`
	Host                 string   `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`
	LocalIp              string   `protobuf:"bytes,10,opt,name=localIp,proto3" json:"localIp,omitempty"`
	CallBack             []string `protobuf:"bytes,11,rep,name=callBack,proto3" json:"callBack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()      { *m = RegisterRequest{} }
func (*RegisterRequest) ProtoMessage() {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return m.Size()
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

type RegisterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()      { *m = RegisterResponse{} }
func (*RegisterResponse) ProtoMessage() {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}
func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

// Controlling
type ControlRequest struct {
	SidecarRequestHeader `protobuf:"bytes,1,opt,name=H,proto3,embedded=H" json:"H"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlRequest) Reset()      { *m = ControlRequest{} }
func (*ControlRequest) ProtoMessage() {}
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}
func (m *ControlRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlRequest.Merge(m, src)
}
func (m *ControlRequest) XXX_Size() int {
	return m.Size()
}
func (m *ControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControlRequest proto.InternalMessageInfo

type ControlResponse struct {
	Cmd   ControlResponse_ControlCmd `protobuf:"varint,1,opt,name=cmd,proto3,enum=proto.ControlResponse_ControlCmd" json:"cmd,omitempty"`
	Seqno uint32                     `protobuf:"varint,2,opt,name=seqno,proto3" json:"seqno,omitempty"`
	// Types that are valid to be assigned to Options:
	//	*ControlResponse_InstallAgentOptions_
	//	*ControlResponse_UninstallAgentOptions_
	//	*ControlResponse_UpdateAgentOptions_
	//	*ControlResponse_StartAgentOptions_
	//	*ControlResponse_StopAgentOptions_
	//	*ControlResponse_UpdateAgentConfigOptions_
	//	*ControlResponse_UpdateSidecarOptions_
	//	*ControlResponse_UpdateSidecarConfigOptions_
	//	*ControlResponse_ExecScriptOptions_
	//	*ControlResponse_CancelOptions_
	//	*ControlResponse_ExecRestOptions_
	Options              isControlResponse_Options `protobuf_oneof:"options"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ControlResponse) Reset()      { *m = ControlResponse{} }
func (*ControlResponse) ProtoMessage() {}
func (*ControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}
func (m *ControlResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse.Merge(m, src)
}
func (m *ControlResponse) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse proto.InternalMessageInfo

type isControlResponse_Options interface {
	isControlResponse_Options()
	Equal(interface{}) bool
	VerboseEqual(interface{}) error
	MarshalTo([]byte) (int, error)
	Size() int
}

type ControlResponse_InstallAgentOptions_ struct {
	InstallAgentOptions *ControlResponse_InstallAgentOptions `protobuf:"bytes,100,opt,name=installAgentOptions,proto3,oneof" json:"installAgentOptions,omitempty"`
}
type ControlResponse_UninstallAgentOptions_ struct {
	UninstallAgentOptions *ControlResponse_UninstallAgentOptions `protobuf:"bytes,101,opt,name=uninstallAgentOptions,proto3,oneof" json:"uninstallAgentOptions,omitempty"`
}
type ControlResponse_UpdateAgentOptions_ struct {
	UpdateAgentOptions *ControlResponse_UpdateAgentOptions `protobuf:"bytes,102,opt,name=updateAgentOptions,proto3,oneof" json:"updateAgentOptions,omitempty"`
}
type ControlResponse_StartAgentOptions_ struct {
	StartAgentOptions *ControlResponse_StartAgentOptions `protobuf:"bytes,103,opt,name=startAgentOptions,proto3,oneof" json:"startAgentOptions,omitempty"`
}
type ControlResponse_StopAgentOptions_ struct {
	StopAgentOptions *ControlResponse_StopAgentOptions `protobuf:"bytes,104,opt,name=stopAgentOptions,proto3,oneof" json:"stopAgentOptions,omitempty"`
}
type ControlResponse_UpdateAgentConfigOptions_ struct {
	UpdateAgentConfigOptions *ControlResponse_UpdateAgentConfigOptions `protobuf:"bytes,105,opt,name=updateAgentConfigOptions,proto3,oneof" json:"updateAgentConfigOptions,omitempty"`
}
type ControlResponse_UpdateSidecarOptions_ struct {
	UpdateSidecarOptions *ControlResponse_UpdateSidecarOptions `protobuf:"bytes,106,opt,name=updateSidecarOptions,proto3,oneof" json:"updateSidecarOptions,omitempty"`
}
type ControlResponse_UpdateSidecarConfigOptions_ struct {
	UpdateSidecarConfigOptions *ControlResponse_UpdateSidecarConfigOptions `protobuf:"bytes,107,opt,name=updateSidecarConfigOptions,proto3,oneof" json:"updateSidecarConfigOptions,omitempty"`
}
type ControlResponse_ExecScriptOptions_ struct {
	ExecScriptOptions *ControlResponse_ExecScriptOptions `protobuf:"bytes,108,opt,name=execScriptOptions,proto3,oneof" json:"execScriptOptions,omitempty"`
}
type ControlResponse_CancelOptions_ struct {
	CancelOptions *ControlResponse_CancelOptions `protobuf:"bytes,109,opt,name=cancelOptions,proto3,oneof" json:"cancelOptions,omitempty"`
}
type ControlResponse_ExecRestOptions_ struct {
	ExecRestOptions *ControlResponse_ExecRestOptions `protobuf:"bytes,110,opt,name=execRestOptions,proto3,oneof" json:"execRestOptions,omitempty"`
}

func (*ControlResponse_InstallAgentOptions_) isControlResponse_Options()        {}
func (*ControlResponse_UninstallAgentOptions_) isControlResponse_Options()      {}
func (*ControlResponse_UpdateAgentOptions_) isControlResponse_Options()         {}
func (*ControlResponse_StartAgentOptions_) isControlResponse_Options()          {}
func (*ControlResponse_StopAgentOptions_) isControlResponse_Options()           {}
func (*ControlResponse_UpdateAgentConfigOptions_) isControlResponse_Options()   {}
func (*ControlResponse_UpdateSidecarOptions_) isControlResponse_Options()       {}
func (*ControlResponse_UpdateSidecarConfigOptions_) isControlResponse_Options() {}
func (*ControlResponse_ExecScriptOptions_) isControlResponse_Options()          {}
func (*ControlResponse_CancelOptions_) isControlResponse_Options()              {}
func (*ControlResponse_ExecRestOptions_) isControlResponse_Options()            {}

func (m *ControlResponse) GetOptions() isControlResponse_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ControlResponse) GetInstallAgentOptions() *ControlResponse_InstallAgentOptions {
	if x, ok := m.GetOptions().(*ControlResponse_InstallAgentOptions_); ok {
		return x.InstallAgentOptions
	}
	return nil
}

func (m *ControlResponse) GetUninstallAgentOptions() *ControlResponse_UninstallAgentOptions {
	if x, ok := m.GetOptions().(*ControlResponse_UninstallAgentOptions_); ok {
		return x.UninstallAgentOptions
	}
	return nil
}

func (m *ControlResponse) GetUpdateAgentOptions() *ControlResponse_UpdateAgentOptions {
	if x, ok := m.GetOptions().(*ControlResponse_UpdateAgentOptions_); ok {
		return x.UpdateAgentOptions
	}
	return nil
}

func (m *ControlResponse) GetStartAgentOptions() *ControlResponse_StartAgentOptions {
	if x, ok := m.GetOptions().(*ControlResponse_StartAgentOptions_); ok {
		return x.StartAgentOptions
	}
	return nil
}

func (m *ControlResponse) GetStopAgentOptions() *ControlResponse_StopAgentOptions {
	if x, ok := m.GetOptions().(*ControlResponse_StopAgentOptions_); ok {
		return x.StopAgentOptions
	}
	return nil
}

func (m *ControlResponse) GetUpdateAgentConfigOptions() *ControlResponse_UpdateAgentConfigOptions {
	if x, ok := m.GetOptions().(*ControlResponse_UpdateAgentConfigOptions_); ok {
		return x.UpdateAgentConfigOptions
	}
	return nil
}

func (m *ControlResponse) GetUpdateSidecarOptions() *ControlResponse_UpdateSidecarOptions {
	if x, ok := m.GetOptions().(*ControlResponse_UpdateSidecarOptions_); ok {
		return x.UpdateSidecarOptions
	}
	return nil
}

func (m *ControlResponse) GetUpdateSidecarConfigOptions() *ControlResponse_UpdateSidecarConfigOptions {
	if x, ok := m.GetOptions().(*ControlResponse_UpdateSidecarConfigOptions_); ok {
		return x.UpdateSidecarConfigOptions
	}
	return nil
}

func (m *ControlResponse) GetExecScriptOptions() *ControlResponse_ExecScriptOptions {
	if x, ok := m.GetOptions().(*ControlResponse_ExecScriptOptions_); ok {
		return x.ExecScriptOptions
	}
	return nil
}

func (m *ControlResponse) GetCancelOptions() *ControlResponse_CancelOptions {
	if x, ok := m.GetOptions().(*ControlResponse_CancelOptions_); ok {
		return x.CancelOptions
	}
	return nil
}

func (m *ControlResponse) GetExecRestOptions() *ControlResponse_ExecRestOptions {
	if x, ok := m.GetOptions().(*ControlResponse_ExecRestOptions_); ok {
		return x.ExecRestOptions
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ControlResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ControlResponse_InstallAgentOptions_)(nil),
		(*ControlResponse_UninstallAgentOptions_)(nil),
		(*ControlResponse_UpdateAgentOptions_)(nil),
		(*ControlResponse_StartAgentOptions_)(nil),
		(*ControlResponse_StopAgentOptions_)(nil),
		(*ControlResponse_UpdateAgentConfigOptions_)(nil),
		(*ControlResponse_UpdateSidecarOptions_)(nil),
		(*ControlResponse_UpdateSidecarConfigOptions_)(nil),
		(*ControlResponse_ExecScriptOptions_)(nil),
		(*ControlResponse_CancelOptions_)(nil),
		(*ControlResponse_ExecRestOptions_)(nil),
	}
}

type ControlResponse_InstallAgentOptions struct {
	AgentId              Uuid          `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	ConfigurationPath    string        `protobuf:"bytes,2,opt,name=configurationPath,proto3" json:"configurationPath,omitempty"`
	BinaryPath           string        `protobuf:"bytes,3,opt,name=binaryPath,proto3" json:"binaryPath,omitempty"`
	Parameter            []string      `protobuf:"bytes,4,rep,name=parameter,proto3" json:"parameter,omitempty"`
	Name                 string        `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	InstallParameter     []string      `protobuf:"bytes,6,rep,name=installParameter,proto3" json:"installParameter,omitempty"`
	InstallScript        string        `protobuf:"bytes,7,opt,name=installScript,proto3" json:"installScript,omitempty"`
	Workdir              string        `protobuf:"bytes,8,opt,name=workdir,proto3" json:"workdir,omitempty"`
	HealthShell          string        `protobuf:"bytes,9,opt,name=healthShell,proto3" json:"healthShell,omitempty"`
	HealthPeriod         time.Duration `protobuf:"bytes,10,opt,name=healthPeriod,proto3,stdduration" json:"healthPeriod"`
	Timeout              time.Duration `protobuf:"bytes,11,opt,name=timeout,proto3,stdduration" json:"timeout"`
	HealthStartPeriod    time.Duration `protobuf:"bytes,12,opt,name=healthStartPeriod,proto3,stdduration" json:"healthStartPeriod"`
	HealthTimeout        time.Duration `protobuf:"bytes,13,opt,name=healthTimeout,proto3,stdduration" json:"healthTimeout"`
	HealthRetries        uint64        `protobuf:"varint,14,opt,name=healthRetries,proto3" json:"healthRetries,omitempty"`
	RunUser              string        `protobuf:"bytes,15,opt,name=runUser,proto3" json:"runUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ControlResponse_InstallAgentOptions) Reset()      { *m = ControlResponse_InstallAgentOptions{} }
func (*ControlResponse_InstallAgentOptions) ProtoMessage() {}
func (*ControlResponse_InstallAgentOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 0}
}
func (m *ControlResponse_InstallAgentOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_InstallAgentOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_InstallAgentOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_InstallAgentOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_InstallAgentOptions.Merge(m, src)
}
func (m *ControlResponse_InstallAgentOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_InstallAgentOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_InstallAgentOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_InstallAgentOptions proto.InternalMessageInfo

type ControlResponse_UninstallAgentOptions struct {
	AgentId              Uuid          `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	Parameter            []string      `protobuf:"bytes,2,rep,name=parameter,proto3" json:"parameter,omitempty"`
	UninstallScript      string        `protobuf:"bytes,3,opt,name=uninstallScript,proto3" json:"uninstallScript,omitempty"`
	Timeout              time.Duration `protobuf:"bytes,4,opt,name=timeout,proto3,stdduration" json:"timeout"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ControlResponse_UninstallAgentOptions) Reset()      { *m = ControlResponse_UninstallAgentOptions{} }
func (*ControlResponse_UninstallAgentOptions) ProtoMessage() {}
func (*ControlResponse_UninstallAgentOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 1}
}
func (m *ControlResponse_UninstallAgentOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_UninstallAgentOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_UninstallAgentOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_UninstallAgentOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_UninstallAgentOptions.Merge(m, src)
}
func (m *ControlResponse_UninstallAgentOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_UninstallAgentOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_UninstallAgentOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_UninstallAgentOptions proto.InternalMessageInfo

type ControlResponse_UpdateAgentOptions struct {
	AgentId              Uuid          `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	Parameter            []string      `protobuf:"bytes,2,rep,name=parameter,proto3" json:"parameter,omitempty"`
	UpdateScript         string        `protobuf:"bytes,3,opt,name=updateScript,proto3" json:"updateScript,omitempty"`
	Timeout              time.Duration `protobuf:"bytes,4,opt,name=timeout,proto3,stdduration" json:"timeout"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ControlResponse_UpdateAgentOptions) Reset()      { *m = ControlResponse_UpdateAgentOptions{} }
func (*ControlResponse_UpdateAgentOptions) ProtoMessage() {}
func (*ControlResponse_UpdateAgentOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 2}
}
func (m *ControlResponse_UpdateAgentOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_UpdateAgentOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_UpdateAgentOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_UpdateAgentOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_UpdateAgentOptions.Merge(m, src)
}
func (m *ControlResponse_UpdateAgentOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_UpdateAgentOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_UpdateAgentOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_UpdateAgentOptions proto.InternalMessageInfo

type ControlResponse_StartAgentOptions struct {
	AgentId              Uuid              `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	CpuLimit             float32           `protobuf:"fixed32,2,opt,name=cpuLimit,proto3" json:"cpuLimit,omitempty"`
	MemLimit             uint64            `protobuf:"varint,3,opt,name=memLimit,proto3" json:"memLimit,omitempty"`
	NetLimit             uint64            `protobuf:"varint,4,opt,name=netLimit,proto3" json:"netLimit,omitempty"`
	Environment          map[string]string `protobuf:"bytes,5,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ControlResponse_StartAgentOptions) Reset()      { *m = ControlResponse_StartAgentOptions{} }
func (*ControlResponse_StartAgentOptions) ProtoMessage() {}
func (*ControlResponse_StartAgentOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 3}
}
func (m *ControlResponse_StartAgentOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_StartAgentOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_StartAgentOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_StartAgentOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_StartAgentOptions.Merge(m, src)
}
func (m *ControlResponse_StartAgentOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_StartAgentOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_StartAgentOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_StartAgentOptions proto.InternalMessageInfo

type ControlResponse_StopAgentOptions struct {
	AgentId              Uuid                                                  `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	StopAgentOptionsType ControlResponse_StopAgentOptions_StopAgentOptionsType `protobuf:"varint,2,opt,name=stopAgentOptionsType,proto3,enum=proto.ControlResponse_StopAgentOptions_StopAgentOptionsType" json:"stopAgentOptionsType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *ControlResponse_StopAgentOptions) Reset()      { *m = ControlResponse_StopAgentOptions{} }
func (*ControlResponse_StopAgentOptions) ProtoMessage() {}
func (*ControlResponse_StopAgentOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 4}
}
func (m *ControlResponse_StopAgentOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_StopAgentOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_StopAgentOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_StopAgentOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_StopAgentOptions.Merge(m, src)
}
func (m *ControlResponse_StopAgentOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_StopAgentOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_StopAgentOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_StopAgentOptions proto.InternalMessageInfo

type ControlResponse_UpdateAgentConfigOptions struct {
	AgentId              Uuid     `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	ConfigContent        string   `protobuf:"bytes,2,opt,name=configContent,proto3" json:"configContent,omitempty"`
	ConfigPath           string   `protobuf:"bytes,3,opt,name=configPath,proto3" json:"configPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlResponse_UpdateAgentConfigOptions) Reset() {
	*m = ControlResponse_UpdateAgentConfigOptions{}
}
func (*ControlResponse_UpdateAgentConfigOptions) ProtoMessage() {}
func (*ControlResponse_UpdateAgentConfigOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 5}
}
func (m *ControlResponse_UpdateAgentConfigOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_UpdateAgentConfigOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_UpdateAgentConfigOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_UpdateAgentConfigOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_UpdateAgentConfigOptions.Merge(m, src)
}
func (m *ControlResponse_UpdateAgentConfigOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_UpdateAgentConfigOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_UpdateAgentConfigOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_UpdateAgentConfigOptions proto.InternalMessageInfo

type ControlResponse_UpdateSidecarOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlResponse_UpdateSidecarOptions) Reset()      { *m = ControlResponse_UpdateSidecarOptions{} }
func (*ControlResponse_UpdateSidecarOptions) ProtoMessage() {}
func (*ControlResponse_UpdateSidecarOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 6}
}
func (m *ControlResponse_UpdateSidecarOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_UpdateSidecarOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_UpdateSidecarOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_UpdateSidecarOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_UpdateSidecarOptions.Merge(m, src)
}
func (m *ControlResponse_UpdateSidecarOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_UpdateSidecarOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_UpdateSidecarOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_UpdateSidecarOptions proto.InternalMessageInfo

type ControlResponse_UpdateSidecarConfigOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlResponse_UpdateSidecarConfigOptions) Reset() {
	*m = ControlResponse_UpdateSidecarConfigOptions{}
}
func (*ControlResponse_UpdateSidecarConfigOptions) ProtoMessage() {}
func (*ControlResponse_UpdateSidecarConfigOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 7}
}
func (m *ControlResponse_UpdateSidecarConfigOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_UpdateSidecarConfigOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_UpdateSidecarConfigOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_UpdateSidecarConfigOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_UpdateSidecarConfigOptions.Merge(m, src)
}
func (m *ControlResponse_UpdateSidecarConfigOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_UpdateSidecarConfigOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_UpdateSidecarConfigOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_UpdateSidecarConfigOptions proto.InternalMessageInfo

type ControlResponse_ExecScriptOptions struct {
	Parameter            []string      `protobuf:"bytes,1,rep,name=parameter,proto3" json:"parameter,omitempty"`
	ExecScript           string        `protobuf:"bytes,2,opt,name=execScript,proto3" json:"execScript,omitempty"`
	Timeout              time.Duration `protobuf:"bytes,3,opt,name=timeout,proto3,stdduration" json:"timeout"`
	AgentId              Uuid          `protobuf:"bytes,4,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ControlResponse_ExecScriptOptions) Reset()      { *m = ControlResponse_ExecScriptOptions{} }
func (*ControlResponse_ExecScriptOptions) ProtoMessage() {}
func (*ControlResponse_ExecScriptOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 8}
}
func (m *ControlResponse_ExecScriptOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_ExecScriptOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_ExecScriptOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_ExecScriptOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_ExecScriptOptions.Merge(m, src)
}
func (m *ControlResponse_ExecScriptOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_ExecScriptOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_ExecScriptOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_ExecScriptOptions proto.InternalMessageInfo

type ControlResponse_CancelOptions struct {
	AgentId              Uuid     `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlResponse_CancelOptions) Reset()      { *m = ControlResponse_CancelOptions{} }
func (*ControlResponse_CancelOptions) ProtoMessage() {}
func (*ControlResponse_CancelOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 9}
}
func (m *ControlResponse_CancelOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_CancelOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_CancelOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_CancelOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_CancelOptions.Merge(m, src)
}
func (m *ControlResponse_CancelOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_CancelOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_CancelOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_CancelOptions proto.InternalMessageInfo

type ControlResponse_ExecRestOptions struct {
	Method               string        `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path                 string        `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Query                string        `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Body                 []byte        `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Timeout              time.Duration `protobuf:"bytes,5,opt,name=timeout,proto3,stdduration" json:"timeout"`
	AgentId              Uuid          `protobuf:"bytes,6,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ControlResponse_ExecRestOptions) Reset()      { *m = ControlResponse_ExecRestOptions{} }
func (*ControlResponse_ExecRestOptions) ProtoMessage() {}
func (*ControlResponse_ExecRestOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6, 10}
}
func (m *ControlResponse_ExecRestOptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControlResponse_ExecRestOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ControlResponse_ExecRestOptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ControlResponse_ExecRestOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse_ExecRestOptions.Merge(m, src)
}
func (m *ControlResponse_ExecRestOptions) XXX_Size() int {
	return m.Size()
}
func (m *ControlResponse_ExecRestOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse_ExecRestOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse_ExecRestOptions proto.InternalMessageInfo

type Event struct {
	SidecarRequestHeader `protobuf:"bytes,1,opt,name=H,proto3,embedded=H" json:"H"`
	EventType            Event_EventType `protobuf:"varint,2,opt,name=eventType,proto3,enum=proto.Event_EventType" json:"eventType,omitempty"`
	// Types that are valid to be assigned to Details:
	//	*Event_OpProgress
	//	*Event_AgentError_
	//	*Event_OsResourceUsages_
	//	*Event_ProcResourceUsages
	//	*Event_ExecScriptResponse_
	//	*Event_AgentHealthCheck_
	//	*Event_ExecRestResponse_
	Details              isEvent_Details `protobuf_oneof:"details"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Event) Reset()      { *m = Event{} }
func (*Event) ProtoMessage() {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return m.Size()
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Details interface {
	isEvent_Details()
	Equal(interface{}) bool
	VerboseEqual(interface{}) error
	MarshalTo([]byte) (int, error)
	Size() int
}

type Event_OpProgress struct {
	OpProgress *Event_OperationProgress `protobuf:"bytes,100,opt,name=opProgress,proto3,oneof" json:"opProgress,omitempty"`
}
type Event_AgentError_ struct {
	AgentError *Event_AgentError `protobuf:"bytes,101,opt,name=agentError,proto3,oneof" json:"agentError,omitempty"`
}
type Event_OsResourceUsages_ struct {
	OsResourceUsages *Event_OsResourceUsages `protobuf:"bytes,102,opt,name=osResourceUsages,proto3,oneof" json:"osResourceUsages,omitempty"`
}
type Event_ProcResourceUsages struct {
	ProcResourceUsages *Event_ProcessResourceUsages `protobuf:"bytes,103,opt,name=procResourceUsages,proto3,oneof" json:"procResourceUsages,omitempty"`
}
type Event_ExecScriptResponse_ struct {
	ExecScriptResponse *Event_ExecScriptResponse `protobuf:"bytes,104,opt,name=execScriptResponse,proto3,oneof" json:"execScriptResponse,omitempty"`
}
type Event_AgentHealthCheck_ struct {
	AgentHealthCheck *Event_AgentHealthCheck `protobuf:"bytes,105,opt,name=agentHealthCheck,proto3,oneof" json:"agentHealthCheck,omitempty"`
}
type Event_ExecRestResponse_ struct {
	ExecRestResponse *Event_ExecRestResponse `protobuf:"bytes,106,opt,name=execRestResponse,proto3,oneof" json:"execRestResponse,omitempty"`
}

func (*Event_OpProgress) isEvent_Details()          {}
func (*Event_AgentError_) isEvent_Details()         {}
func (*Event_OsResourceUsages_) isEvent_Details()   {}
func (*Event_ProcResourceUsages) isEvent_Details()  {}
func (*Event_ExecScriptResponse_) isEvent_Details() {}
func (*Event_AgentHealthCheck_) isEvent_Details()   {}
func (*Event_ExecRestResponse_) isEvent_Details()   {}

func (m *Event) GetDetails() isEvent_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *Event) GetOpProgress() *Event_OperationProgress {
	if x, ok := m.GetDetails().(*Event_OpProgress); ok {
		return x.OpProgress
	}
	return nil
}

func (m *Event) GetAgentError() *Event_AgentError {
	if x, ok := m.GetDetails().(*Event_AgentError_); ok {
		return x.AgentError
	}
	return nil
}

func (m *Event) GetOsResourceUsages() *Event_OsResourceUsages {
	if x, ok := m.GetDetails().(*Event_OsResourceUsages_); ok {
		return x.OsResourceUsages
	}
	return nil
}

func (m *Event) GetProcResourceUsages() *Event_ProcessResourceUsages {
	if x, ok := m.GetDetails().(*Event_ProcResourceUsages); ok {
		return x.ProcResourceUsages
	}
	return nil
}

func (m *Event) GetExecScriptResponse() *Event_ExecScriptResponse {
	if x, ok := m.GetDetails().(*Event_ExecScriptResponse_); ok {
		return x.ExecScriptResponse
	}
	return nil
}

func (m *Event) GetAgentHealthCheck() *Event_AgentHealthCheck {
	if x, ok := m.GetDetails().(*Event_AgentHealthCheck_); ok {
		return x.AgentHealthCheck
	}
	return nil
}

func (m *Event) GetExecRestResponse() *Event_ExecRestResponse {
	if x, ok := m.GetDetails().(*Event_ExecRestResponse_); ok {
		return x.ExecRestResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_OpProgress)(nil),
		(*Event_AgentError_)(nil),
		(*Event_OsResourceUsages_)(nil),
		(*Event_ProcResourceUsages)(nil),
		(*Event_ExecScriptResponse_)(nil),
		(*Event_AgentHealthCheck_)(nil),
		(*Event_ExecRestResponse_)(nil),
	}
}

type Event_OperationProgress struct {
	Seqno                uint32   `protobuf:"varint,1,opt,name=seqno,proto3" json:"seqno,omitempty"`
	AgentId              Uuid     `protobuf:"bytes,2,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	Progress             float32  `protobuf:"fixed32,3,opt,name=progress,proto3" json:"progress,omitempty"`
	Failed               bool     `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
	Message              string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_OperationProgress) Reset()      { *m = Event_OperationProgress{} }
func (*Event_OperationProgress) ProtoMessage() {}
func (*Event_OperationProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 0}
}
func (m *Event_OperationProgress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_OperationProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_OperationProgress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_OperationProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_OperationProgress.Merge(m, src)
}
func (m *Event_OperationProgress) XXX_Size() int {
	return m.Size()
}
func (m *Event_OperationProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_OperationProgress.DiscardUnknown(m)
}

var xxx_messageInfo_Event_OperationProgress proto.InternalMessageInfo

type Event_AgentError struct {
	AgentId              Uuid     `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	Errstr               string   `protobuf:"bytes,2,opt,name=errstr,proto3" json:"errstr,omitempty"`
	Seqno                uint32   `protobuf:"varint,3,opt,name=seqno,proto3" json:"seqno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_AgentError) Reset()      { *m = Event_AgentError{} }
func (*Event_AgentError) ProtoMessage() {}
func (*Event_AgentError) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 1}
}
func (m *Event_AgentError) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_AgentError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_AgentError.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_AgentError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_AgentError.Merge(m, src)
}
func (m *Event_AgentError) XXX_Size() int {
	return m.Size()
}
func (m *Event_AgentError) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_AgentError.DiscardUnknown(m)
}

var xxx_messageInfo_Event_AgentError proto.InternalMessageInfo

type Event_OsResourceUsages struct {
	CpuUsage             float32           `protobuf:"fixed32,1,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	MemUsage             uint64            `protobuf:"varint,2,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
	SwapUsage            uint64            `protobuf:"varint,3,opt,name=swapUsage,proto3" json:"swapUsage,omitempty"`
	Load1                float32           `protobuf:"fixed32,4,opt,name=load1,proto3" json:"load1,omitempty"`
	Uptime               float64           `protobuf:"fixed64,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	DiskUsage            []Event_DiskUsage `protobuf:"bytes,6,rep,name=diskUsage,proto3" json:"diskUsage"`
	NetStats             []Event_NetStat   `protobuf:"bytes,7,rep,name=netStats,proto3" json:"netStats"`
	CpuCores             uint32            `protobuf:"varint,8,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MemSize              uint64            `protobuf:"varint,9,opt,name=memSize,proto3" json:"memSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Event_OsResourceUsages) Reset()      { *m = Event_OsResourceUsages{} }
func (*Event_OsResourceUsages) ProtoMessage() {}
func (*Event_OsResourceUsages) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 2}
}
func (m *Event_OsResourceUsages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_OsResourceUsages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_OsResourceUsages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_OsResourceUsages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_OsResourceUsages.Merge(m, src)
}
func (m *Event_OsResourceUsages) XXX_Size() int {
	return m.Size()
}
func (m *Event_OsResourceUsages) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_OsResourceUsages.DiscardUnknown(m)
}

var xxx_messageInfo_Event_OsResourceUsages proto.InternalMessageInfo

type Event_DiskUsage struct {
	MountPoint           string   `protobuf:"bytes,1,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	UsedSpace            uint64   `protobuf:"varint,2,opt,name=usedSpace,proto3" json:"usedSpace,omitempty"`
	TotalSpace           uint64   `protobuf:"varint,3,opt,name=totalSpace,proto3" json:"totalSpace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_DiskUsage) Reset()      { *m = Event_DiskUsage{} }
func (*Event_DiskUsage) ProtoMessage() {}
func (*Event_DiskUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 3}
}
func (m *Event_DiskUsage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_DiskUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_DiskUsage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_DiskUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_DiskUsage.Merge(m, src)
}
func (m *Event_DiskUsage) XXX_Size() int {
	return m.Size()
}
func (m *Event_DiskUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_DiskUsage.DiscardUnknown(m)
}

var xxx_messageInfo_Event_DiskUsage proto.InternalMessageInfo

type Event_NetStat struct {
	IfName               string   `protobuf:"bytes,1,opt,name=ifName,proto3" json:"ifName,omitempty"`
	IfIp                 []string `protobuf:"bytes,2,rep,name=ifIp,proto3" json:"ifIp,omitempty"`
	BytesSent            uint64   `protobuf:"varint,3,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	BytesRecv            uint64   `protobuf:"varint,4,opt,name=bytesRecv,proto3" json:"bytesRecv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_NetStat) Reset()      { *m = Event_NetStat{} }
func (*Event_NetStat) ProtoMessage() {}
func (*Event_NetStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 4}
}
func (m *Event_NetStat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_NetStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_NetStat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_NetStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_NetStat.Merge(m, src)
}
func (m *Event_NetStat) XXX_Size() int {
	return m.Size()
}
func (m *Event_NetStat) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_NetStat.DiscardUnknown(m)
}

var xxx_messageInfo_Event_NetStat proto.InternalMessageInfo

type Event_ProcessResourceUsages struct {
	AgentId              Uuid     `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	CpuUsage             float32  `protobuf:"fixed32,2,opt,name=cpuUsage,proto3" json:"cpuUsage,omitempty"`
	Memory               uint64   `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Cmd                  string   `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	BytesSent            uint64   `protobuf:"varint,5,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	BytesRecv            uint64   `protobuf:"varint,6,opt,name=bytesRecv,proto3" json:"bytesRecv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_ProcessResourceUsages) Reset()      { *m = Event_ProcessResourceUsages{} }
func (*Event_ProcessResourceUsages) ProtoMessage() {}
func (*Event_ProcessResourceUsages) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 5}
}
func (m *Event_ProcessResourceUsages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_ProcessResourceUsages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_ProcessResourceUsages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_ProcessResourceUsages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_ProcessResourceUsages.Merge(m, src)
}
func (m *Event_ProcessResourceUsages) XXX_Size() int {
	return m.Size()
}
func (m *Event_ProcessResourceUsages) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_ProcessResourceUsages.DiscardUnknown(m)
}

var xxx_messageInfo_Event_ProcessResourceUsages proto.InternalMessageInfo

type Event_ExecScriptResponse struct {
	Seqno                uint32   `protobuf:"varint,1,opt,name=seqno,proto3" json:"seqno,omitempty"`
	Failed               bool     `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	Response             string   `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	AgentId              Uuid     `protobuf:"bytes,4,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_ExecScriptResponse) Reset()      { *m = Event_ExecScriptResponse{} }
func (*Event_ExecScriptResponse) ProtoMessage() {}
func (*Event_ExecScriptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 6}
}
func (m *Event_ExecScriptResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_ExecScriptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_ExecScriptResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_ExecScriptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_ExecScriptResponse.Merge(m, src)
}
func (m *Event_ExecScriptResponse) XXX_Size() int {
	return m.Size()
}
func (m *Event_ExecScriptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_ExecScriptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Event_ExecScriptResponse proto.InternalMessageInfo

type Event_AgentHealthCheck struct {
	AgentId              Uuid     `protobuf:"bytes,1,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	Failed               bool     `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	Seqno                uint32   `protobuf:"varint,3,opt,name=seqno,proto3" json:"seqno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_AgentHealthCheck) Reset()      { *m = Event_AgentHealthCheck{} }
func (*Event_AgentHealthCheck) ProtoMessage() {}
func (*Event_AgentHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 7}
}
func (m *Event_AgentHealthCheck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_AgentHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_AgentHealthCheck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_AgentHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_AgentHealthCheck.Merge(m, src)
}
func (m *Event_AgentHealthCheck) XXX_Size() int {
	return m.Size()
}
func (m *Event_AgentHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_AgentHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_Event_AgentHealthCheck proto.InternalMessageInfo

type Event_ExecRestResponse struct {
	Seqno                uint32   `protobuf:"varint,1,opt,name=seqno,proto3" json:"seqno,omitempty"`
	Failed               bool     `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	Response             []byte   `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	AgentId              Uuid     `protobuf:"bytes,4,opt,name=agentId,proto3,customtype=Uuid" json:"agentId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event_ExecRestResponse) Reset()      { *m = Event_ExecRestResponse{} }
func (*Event_ExecRestResponse) ProtoMessage() {}
func (*Event_ExecRestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7, 8}
}
func (m *Event_ExecRestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event_ExecRestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event_ExecRestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event_ExecRestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_ExecRestResponse.Merge(m, src)
}
func (m *Event_ExecRestResponse) XXX_Size() int {
	return m.Size()
}
func (m *Event_ExecRestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_ExecRestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Event_ExecRestResponse proto.InternalMessageInfo

type ShellReport struct {
	SidecarRequestHeader `protobuf:"bytes,1,opt,name=H,proto3,embedded=H" json:"H"`
	Seqno                uint32   `protobuf:"varint,2,opt,name=seqno,proto3" json:"seqno,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellReport) Reset()      { *m = ShellReport{} }
func (*ShellReport) ProtoMessage() {}
func (*ShellReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}
func (m *ShellReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShellReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShellReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShellReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellReport.Merge(m, src)
}
func (m *ShellReport) XXX_Size() int {
	return m.Size()
}
func (m *ShellReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellReport.DiscardUnknown(m)
}

var xxx_messageInfo_ShellReport proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("proto.ControlResponse_ControlCmd", ControlResponse_ControlCmd_name, ControlResponse_ControlCmd_value)
	proto.RegisterEnum("proto.ControlResponse_StopAgentOptions_StopAgentOptionsType", ControlResponse_StopAgentOptions_StopAgentOptionsType_name, ControlResponse_StopAgentOptions_StopAgentOptionsType_value)
	proto.RegisterEnum("proto.Event_EventType", Event_EventType_name, Event_EventType_value)
	proto.RegisterType((*Msg)(nil), "proto.Msg")
	proto.RegisterType((*EmptyResponse)(nil), "proto.EmptyResponse")
	proto.RegisterType((*SidecarRequestHeader)(nil), "proto.SidecarRequestHeader")
	proto.RegisterType((*RegisterRequest)(nil), "proto.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "proto.RegisterResponse")
	proto.RegisterType((*ControlRequest)(nil), "proto.ControlRequest")
	proto.RegisterType((*ControlResponse)(nil), "proto.ControlResponse")
	proto.RegisterType((*ControlResponse_InstallAgentOptions)(nil), "proto.ControlResponse.InstallAgentOptions")
	proto.RegisterType((*ControlResponse_UninstallAgentOptions)(nil), "proto.ControlResponse.UninstallAgentOptions")
	proto.RegisterType((*ControlResponse_UpdateAgentOptions)(nil), "proto.ControlResponse.UpdateAgentOptions")
	proto.RegisterType((*ControlResponse_StartAgentOptions)(nil), "proto.ControlResponse.StartAgentOptions")
	proto.RegisterMapType((map[string]string)(nil), "proto.ControlResponse.StartAgentOptions.EnvironmentEntry")
	proto.RegisterType((*ControlResponse_StopAgentOptions)(nil), "proto.ControlResponse.StopAgentOptions")
	proto.RegisterType((*ControlResponse_UpdateAgentConfigOptions)(nil), "proto.ControlResponse.UpdateAgentConfigOptions")
	proto.RegisterType((*ControlResponse_UpdateSidecarOptions)(nil), "proto.ControlResponse.UpdateSidecarOptions")
	proto.RegisterType((*ControlResponse_UpdateSidecarConfigOptions)(nil), "proto.ControlResponse.UpdateSidecarConfigOptions")
	proto.RegisterType((*ControlResponse_ExecScriptOptions)(nil), "proto.ControlResponse.ExecScriptOptions")
	proto.RegisterType((*ControlResponse_CancelOptions)(nil), "proto.ControlResponse.CancelOptions")
	proto.RegisterType((*ControlResponse_ExecRestOptions)(nil), "proto.ControlResponse.ExecRestOptions")
	proto.RegisterType((*Event)(nil), "proto.Event")
	proto.RegisterType((*Event_OperationProgress)(nil), "proto.Event.OperationProgress")
	proto.RegisterType((*Event_AgentError)(nil), "proto.Event.AgentError")
	proto.RegisterType((*Event_OsResourceUsages)(nil), "proto.Event.OsResourceUsages")
	proto.RegisterType((*Event_DiskUsage)(nil), "proto.Event.DiskUsage")
	proto.RegisterType((*Event_NetStat)(nil), "proto.Event.NetStat")
	proto.RegisterType((*Event_ProcessResourceUsages)(nil), "proto.Event.ProcessResourceUsages")
	proto.RegisterType((*Event_ExecScriptResponse)(nil), "proto.Event.ExecScriptResponse")
	proto.RegisterType((*Event_AgentHealthCheck)(nil), "proto.Event.AgentHealthCheck")
	proto.RegisterType((*Event_ExecRestResponse)(nil), "proto.Event.ExecRestResponse")
	proto.RegisterType((*ShellReport)(nil), "proto.ShellReport")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 2396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x4d, 0x6c, 0x23, 0x49,
	0x15, 0x76, 0xdb, 0xce, 0x8f, 0x5f, 0xe2, 0xb8, 0x53, 0x93, 0xc9, 0x7a, 0x9b, 0xac, 0x13, 0xac,
	0xd5, 0x12, 0x96, 0x25, 0xc3, 0x64, 0x10, 0xb0, 0xcb, 0x30, 0xda, 0xc4, 0xd3, 0x3b, 0x8e, 0x36,
	0x9b, 0x78, 0xcb, 0xce, 0x68, 0xa5, 0x95, 0x88, 0x3a, 0x76, 0xc5, 0xe9, 0x89, 0xbb, 0xab, 0xa7,
	0xab, 0x3d, 0xb3, 0xe6, 0xb4, 0x07, 0x84, 0x38, 0x72, 0xe4, 0xc6, 0x09, 0x89, 0x03, 0x07, 0x10,
	0x17, 0x2e, 0x48, 0xc0, 0x01, 0x8d, 0x84, 0x84, 0xe6, 0x84, 0x10, 0x87, 0x61, 0x13, 0x2e, 0x88,
	0xd3, 0x1e, 0xf7, 0x88, 0xea, 0xa7, 0xdd, 0x3f, 0xb6, 0xb3, 0x9e, 0x19, 0x2e, 0x49, 0xbf, 0xbf,
	0xef, 0xbd, 0x7a, 0xf5, 0xf3, 0x5e, 0x95, 0xa1, 0xc8, 0x88, 0xff, 0xc8, 0x6e, 0x93, 0x2d, 0xcf,
	0xa7, 0x01, 0x45, 0x33, 0xe2, 0x9f, 0xb1, 0xde, 0xa5, 0xb4, 0xdb, 0x23, 0x37, 0x04, 0x75, 0xd2,
	0x3f, 0xbd, 0x11, 0xd8, 0x0e, 0x61, 0x81, 0xe5, 0x78, 0x52, 0xcf, 0xa8, 0xa4, 0x15, 0x3a, 0x7d,
	0xdf, 0x0a, 0x6c, 0xea, 0x2a, 0xf9, 0x37, 0xbb, 0x76, 0x70, 0xd6, 0x3f, 0xd9, 0x6a, 0x53, 0xe7,
	0x46, 0x97, 0x76, 0x69, 0xa4, 0xc8, 0x29, 0x41, 0x88, 0x2f, 0xa9, 0x5e, 0x75, 0x20, 0xf7, 0x01,
	0xeb, 0xa2, 0x25, 0xc8, 0xda, 0x9d, 0xb2, 0xb6, 0xa1, 0x6d, 0x16, 0x70, 0xd6, 0xee, 0xa0, 0x15,
	0x98, 0xb1, 0xdd, 0x0e, 0xf9, 0xa4, 0x9c, 0x15, 0x2c, 0x49, 0x20, 0x1d, 0x72, 0xc1, 0xc0, 0x2b,
	0xe7, 0x04, 0x8f, 0x7f, 0xa2, 0x35, 0x28, 0x3c, 0x60, 0xd4, 0xdd, 0x1d, 0x04, 0x84, 0x95, 0xf3,
	0x1b, 0xda, 0xe6, 0x22, 0x8e, 0x18, 0x5c, 0xff, 0x9c, 0x0c, 0xca, 0x33, 0x82, 0xcf, 0x3f, 0xab,
	0x25, 0x28, 0x9a, 0x8e, 0x17, 0x0c, 0x30, 0x61, 0x1e, 0x75, 0x19, 0xa9, 0x06, 0xb0, 0xd2, 0xb4,
	0x3b, 0xa4, 0x6d, 0xf9, 0x98, 0x3c, 0xec, 0x13, 0x16, 0xd4, 0x89, 0xd5, 0x21, 0x3e, 0x5a, 0x1b,
	0x06, 0xb4, 0xb8, 0xbb, 0xf8, 0xe4, 0xd9, 0x7a, 0xe6, 0x9f, 0xcf, 0xd6, 0xf3, 0x47, 0x7d, 0xbb,
	0x23, 0xc2, 0xbb, 0x03, 0x73, 0x6c, 0xc0, 0x78, 0x6a, 0x44, 0x80, 0x0b, 0xdb, 0xc6, 0x96, 0x4c,
	0xcb, 0x56, 0x38, 0xda, 0xad, 0x56, 0x98, 0xb7, 0xdd, 0x79, 0x6e, 0xfe, 0xb3, 0x7f, 0xad, 0x6b,
	0x38, 0x34, 0xaa, 0xfe, 0x3d, 0x0b, 0x25, 0x4c, 0xba, 0x36, 0x0b, 0x48, 0xe8, 0x17, 0xdd, 0x02,
	0xad, 0x2e, 0x1c, 0x2e, 0x6c, 0x7f, 0x45, 0xc2, 0x6c, 0x8d, 0x8b, 0x4c, 0xc2, 0x3d, 0x7d, 0xb6,
	0xae, 0x61, 0xad, 0x8e, 0x56, 0x61, 0x96, 0xb2, 0xd6, 0xc0, 0x23, 0x2a, 0x51, 0x8a, 0x42, 0x15,
	0x00, 0xca, 0x1a, 0x3d, 0x2b, 0x38, 0xa5, 0xbe, 0xa3, 0x12, 0x16, 0xe3, 0xf0, 0xbc, 0x51, 0x76,
	0x9f, 0xf8, 0xcc, 0xa6, 0xae, 0xc8, 0x5b, 0x01, 0x47, 0x0c, 0x2e, 0x6d, 0x7b, 0xfd, 0x26, 0xf1,
	0x6d, 0xab, 0x27, 0xb2, 0x57, 0xc0, 0x11, 0x03, 0x19, 0x30, 0xdf, 0xf6, 0xfa, 0x35, 0xea, 0x13,
	0x56, 0x9e, 0xdd, 0xd0, 0x36, 0x8b, 0x78, 0x48, 0xa3, 0x32, 0xcc, 0x39, 0xc4, 0x69, 0xda, 0x3f,
	0x22, 0xe5, 0xb9, 0x0d, 0x6d, 0x33, 0x8f, 0x43, 0x92, 0x5b, 0xb1, 0xc7, 0x96, 0x27, 0x44, 0xf3,
	0x42, 0x34, 0xa4, 0x11, 0x82, 0xfc, 0x19, 0x65, 0x41, 0xb9, 0x20, 0x5c, 0x89, 0x6f, 0x8e, 0xd4,
	0xa3, 0x6d, 0xab, 0xb7, 0xe7, 0x95, 0x41, 0xb0, 0x43, 0x52, 0xf8, 0xb7, 0x7a, 0xbd, 0x5d, 0xab,
	0x7d, 0x5e, 0x5e, 0xd8, 0xc8, 0x6d, 0x16, 0xf0, 0x90, 0xae, 0x22, 0xd0, 0xa3, 0xbc, 0xaa, 0x29,
	0x36, 0x61, 0xa9, 0x46, 0xdd, 0xc0, 0xa7, 0xbd, 0x97, 0x49, 0x75, 0xf5, 0xcf, 0x6b, 0x50, 0x1a,
	0xe2, 0x48, 0x68, 0x74, 0x0b, 0x72, 0x6d, 0x47, 0x2e, 0x93, 0xa5, 0xed, 0xaf, 0x2a, 0xa8, 0x94,
	0x52, 0x48, 0xd7, 0x9c, 0x0e, 0xe6, 0xda, 0x7c, 0x6d, 0x33, 0xf2, 0xd0, 0xa5, 0x62, 0xca, 0x8a,
	0x58, 0x12, 0xe8, 0x87, 0x70, 0xcd, 0x76, 0x59, 0x60, 0xf5, 0x7a, 0x3b, 0x5d, 0xe2, 0x06, 0x87,
	0x1e, 0xdf, 0x53, 0xac, 0xdc, 0x11, 0x51, 0xbe, 0x39, 0x01, 0x7a, 0x6f, 0xd4, 0xa2, 0x9e, 0xc1,
	0xe3, 0x80, 0x50, 0x07, 0xae, 0xf7, 0xdd, 0x71, 0x1e, 0x88, 0xf0, 0xf0, 0xd6, 0x04, 0x0f, 0x47,
	0xe3, 0x6c, 0xea, 0x19, 0x3c, 0x1e, 0x0c, 0x7d, 0x0c, 0xa8, 0xef, 0x75, 0xac, 0x80, 0x24, 0x5c,
	0x9c, 0x0a, 0x17, 0x5f, 0x9f, 0xe4, 0x62, 0xc4, 0xa0, 0x9e, 0xc1, 0x63, 0x60, 0xd0, 0x47, 0xb0,
	0xcc, 0x02, 0xcb, 0x0f, 0x12, 0xd8, 0x5d, 0x81, 0xbd, 0x39, 0x01, 0xbb, 0x99, 0xd6, 0xaf, 0x67,
	0xf0, 0x28, 0x08, 0x3a, 0x02, 0x9d, 0x05, 0xd4, 0x4b, 0x00, 0x9f, 0x09, 0xe0, 0xaf, 0x4d, 0x04,
	0x4e, 0xaa, 0xd7, 0x33, 0x78, 0x04, 0x02, 0x39, 0x50, 0x8e, 0x0d, 0xa3, 0x46, 0xdd, 0x53, 0xbb,
	0x1b, 0xc2, 0xdb, 0x02, 0xfe, 0xc6, 0x97, 0xe7, 0x24, 0x61, 0x56, 0xcf, 0xe0, 0x89, 0x90, 0xc8,
	0x82, 0x15, 0x29, 0x53, 0x8b, 0x39, 0x74, 0xf5, 0x40, 0xb8, 0xfa, 0xc6, 0x95, 0xae, 0x92, 0x26,
	0xf5, 0x0c, 0x1e, 0x0b, 0x85, 0x18, 0x18, 0x09, 0x7e, 0x72, 0x4c, 0xe7, 0xc2, 0xd1, 0xcd, 0x69,
	0x1c, 0xa5, 0x47, 0x75, 0x05, 0x2c, 0x9f, 0x77, 0xf2, 0x09, 0x69, 0x37, 0xdb, 0xbe, 0xed, 0x0d,
	0xa7, 0xa7, 0x77, 0xe5, 0xbc, 0x9b, 0x69, 0x7d, 0x3e, 0xef, 0x23, 0x20, 0x68, 0x1f, 0x8a, 0x6d,
	0xcb, 0x6d, 0x93, 0x5e, 0x88, 0xea, 0x08, 0xd4, 0xd7, 0x27, 0xed, 0xe4, 0xb8, 0x6e, 0x3d, 0x83,
	0x93, 0xc6, 0x08, 0x43, 0x89, 0xbb, 0xc0, 0x84, 0x0d, 0xa3, 0x74, 0x05, 0xde, 0x1b, 0x57, 0x44,
	0x19, 0xd3, 0xae, 0x67, 0x70, 0x1a, 0xc0, 0xf8, 0xed, 0x0c, 0x5c, 0x1b, 0xb3, 0xcb, 0xd1, 0x1b,
	0x30, 0x67, 0x71, 0x7a, 0x6f, 0x7c, 0x91, 0x0a, 0x85, 0xe8, 0x2d, 0x58, 0x6e, 0x8b, 0x64, 0xaa,
	0x2a, 0xdd, 0xb0, 0x82, 0x33, 0x55, 0x2b, 0x46, 0x05, 0xbc, 0x6c, 0x9c, 0xd8, 0xae, 0xe5, 0x0f,
	0x84, 0x9a, 0x2a, 0x1b, 0x11, 0x87, 0x17, 0x06, 0xcf, 0xf2, 0x2d, 0x87, 0x04, 0xc4, 0x2f, 0xe7,
	0xc5, 0xd9, 0x1b, 0x31, 0xf8, 0x31, 0xee, 0x5a, 0x0e, 0x51, 0x15, 0x43, 0x7c, 0xa3, 0x37, 0x41,
	0x57, 0xe7, 0x44, 0x63, 0x68, 0x38, 0x2b, 0x0c, 0x47, 0xf8, 0xe8, 0x75, 0x28, 0x2a, 0x9e, 0x9c,
	0x25, 0x51, 0x42, 0x0a, 0x38, 0xc9, 0xe4, 0x85, 0xe1, 0x31, 0xf5, 0xcf, 0x3b, 0xb6, 0x2f, 0xea,
	0x48, 0x01, 0x87, 0x24, 0xda, 0x80, 0x85, 0x33, 0x62, 0xf5, 0x82, 0xb3, 0xe6, 0x19, 0xe9, 0xf5,
	0x54, 0x35, 0x89, 0xb3, 0xd0, 0x3d, 0x58, 0x94, 0x64, 0x83, 0xf8, 0x36, 0xed, 0x88, 0xca, 0xb2,
	0xb0, 0xfd, 0xea, 0x48, 0xf1, 0xbe, 0xab, 0x92, 0x22, 0x2b, 0xc0, 0xcf, 0x79, 0xed, 0x4e, 0x18,
	0xa2, 0x1f, 0xc0, 0x1c, 0x2f, 0xe4, 0xb4, 0x1f, 0x94, 0x17, 0xa6, 0xc7, 0x08, 0x6d, 0xd0, 0x87,
	0xb0, 0xac, 0xc2, 0xe2, 0x47, 0x91, 0x0a, 0x66, 0x71, 0x7a, 0xa0, 0x51, 0x6b, 0xb4, 0x07, 0x45,
	0xc9, 0x6c, 0xa9, 0xb8, 0x8a, 0xd3, 0xc3, 0x25, 0x2d, 0xf9, 0x3c, 0x48, 0x06, 0x26, 0x81, 0x6f,
	0x13, 0x56, 0x5e, 0x12, 0xf5, 0x3a, 0xc9, 0xe4, 0xf3, 0xe0, 0xf7, 0xdd, 0x23, 0x46, 0xfc, 0x72,
	0x49, 0xce, 0x83, 0x22, 0x8d, 0xbf, 0x68, 0x70, 0x7d, 0x6c, 0xdd, 0x98, 0x7a, 0xd5, 0x26, 0xd6,
	0x59, 0x36, 0xbd, 0xce, 0x36, 0xa1, 0x34, 0xac, 0x3e, 0x6a, 0xa5, 0xc8, 0xa5, 0x9a, 0x66, 0xc7,
	0xa7, 0x29, 0xff, 0xfc, 0xd3, 0x64, 0xfc, 0x41, 0x03, 0x34, 0x5a, 0x9d, 0xfe, 0x4f, 0xa3, 0xa8,
	0xc2, 0xa2, 0x3a, 0xf3, 0xe2, 0x43, 0x48, 0xf0, 0x5e, 0x36, 0xfe, 0x5f, 0x67, 0x61, 0x79, 0xa4,
	0x02, 0x4e, 0x1d, 0xbe, 0xec, 0xf3, 0xf6, 0x6d, 0xc7, 0x0e, 0xc4, 0x89, 0x91, 0xc5, 0x43, 0x9a,
	0xcb, 0x1c, 0xe2, 0x48, 0x59, 0x4e, 0x76, 0x73, 0x21, 0xcd, 0x65, 0x2e, 0x09, 0xa4, 0x2c, 0x2f,
	0x65, 0x21, 0x8d, 0x3e, 0x86, 0x05, 0xe2, 0x3e, 0xb2, 0x7d, 0xea, 0x3a, 0xc4, 0x0d, 0xca, 0x33,
	0x1b, 0xb9, 0xcd, 0x85, 0xed, 0xb7, 0xa7, 0x2d, 0xde, 0x5b, 0x66, 0x64, 0x6b, 0xba, 0x81, 0x3f,
	0xc0, 0x71, 0x34, 0xe3, 0x0e, 0xe8, 0x69, 0x85, 0xf0, 0x0a, 0x20, 0x6f, 0x16, 0xfc, 0x93, 0xb7,
	0x5f, 0x8f, 0xac, 0x5e, 0x3f, 0xec, 0x98, 0x25, 0xf1, 0x4e, 0xf6, 0x7b, 0x9a, 0xf1, 0x5f, 0x0d,
	0xf4, 0x74, 0x5d, 0x9f, 0x3a, 0x5b, 0x1e, 0xac, 0xa4, 0xeb, 0xff, 0xb0, 0x2f, 0x5f, 0xda, 0xbe,
	0x3d, 0x65, 0x1b, 0x31, 0xc2, 0xe0, 0x18, 0x78, 0x2c, 0x72, 0xf5, 0x36, 0xac, 0x8c, 0xd3, 0x46,
	0x08, 0x96, 0x9a, 0xad, 0xc3, 0xc6, 0xf1, 0xd1, 0x01, 0x36, 0x6b, 0x87, 0xf7, 0x4d, 0xac, 0x67,
	0x90, 0x0e, 0x8b, 0x82, 0x17, 0x72, 0x34, 0xe3, 0xa7, 0x1a, 0x94, 0x27, 0x75, 0x19, 0x53, 0x0f,
	0xfa, 0x75, 0x28, 0xca, 0x22, 0xc2, 0xc7, 0xc5, 0x27, 0x54, 0xe6, 0x34, 0xc9, 0xe4, 0x55, 0x45,
	0x32, 0xe2, 0x55, 0x25, 0xe2, 0x18, 0xab, 0xb0, 0x32, 0xae, 0x09, 0x31, 0xd6, 0xc0, 0x98, 0xdc,
	0x33, 0x18, 0xbf, 0xd7, 0x60, 0x79, 0xa4, 0xcc, 0x27, 0xf7, 0x9c, 0x96, 0xde, 0x73, 0x15, 0x80,
	0xa8, 0x09, 0x50, 0xc1, 0xc6, 0x38, 0xf1, 0xfd, 0x96, 0x7b, 0x81, 0x63, 0x3d, 0x96, 0xb6, 0xfc,
	0x15, 0x69, 0x33, 0xbe, 0x0b, 0xc5, 0x44, 0x2b, 0x31, 0x6d, 0xbe, 0x8d, 0xbf, 0x69, 0x50, 0x4a,
	0x35, 0x0d, 0xfc, 0x0a, 0xe8, 0x90, 0xe0, 0x8c, 0x86, 0xd7, 0x67, 0x45, 0xf1, 0x6a, 0xec, 0x45,
	0xc5, 0x5e, 0x7c, 0xf3, 0xb5, 0xff, 0xb0, 0x4f, 0xfc, 0x81, 0x9a, 0x04, 0x49, 0x70, 0xcd, 0x13,
	0xda, 0x19, 0xa8, 0xfb, 0xb3, 0xf8, 0x8e, 0x67, 0x62, 0xe6, 0xe5, 0x32, 0x31, 0x7b, 0xc5, 0x80,
	0xaa, 0x97, 0x1a, 0x40, 0x74, 0x3f, 0x42, 0xcb, 0x50, 0xdc, 0x3b, 0x68, 0xb6, 0x76, 0xf6, 0xf7,
	0x8f, 0x77, 0xee, 0x99, 0x07, 0x2d, 0x3d, 0x83, 0xae, 0x41, 0xe9, 0xe8, 0x20, 0xc9, 0xd4, 0xf8,
	0x72, 0x3e, 0x6a, 0xdc, 0xdd, 0x69, 0x99, 0x8a, 0x93, 0x45, 0x25, 0x58, 0x68, 0xb6, 0x76, 0x70,
	0x4b, 0x31, 0x72, 0x68, 0x09, 0x40, 0xac, 0x78, 0x49, 0xe7, 0xd1, 0x2b, 0x70, 0x2d, 0x6e, 0x72,
	0x5c, 0x3b, 0x3c, 0x78, 0x6f, 0xef, 0x9e, 0x3e, 0xc3, 0xb7, 0x8b, 0x12, 0x34, 0xf7, 0xee, 0x9a,
	0xb5, 0x1d, 0xac, 0xcf, 0xa2, 0x57, 0xe1, 0x7a, 0x92, 0x17, 0xaa, 0xcf, 0x71, 0x47, 0xe6, 0x47,
	0x66, 0xed, 0xb8, 0x59, 0xc3, 0x7b, 0x8d, 0x96, 0x3e, 0xcf, 0x63, 0xae, 0xed, 0x1c, 0xd4, 0x4c,
	0x15, 0x5d, 0x53, 0x2f, 0xa0, 0x22, 0x14, 0x84, 0x0e, 0x36, 0x9b, 0x2d, 0x1d, 0x76, 0x0b, 0x30,
	0x47, 0xe5, 0x64, 0x55, 0x7f, 0xb9, 0x0c, 0x33, 0xe6, 0x23, 0xbe, 0x29, 0x5e, 0xe8, 0xba, 0xff,
	0x6d, 0x28, 0x10, 0x6e, 0x1d, 0x3b, 0x59, 0x56, 0x95, 0xb1, 0x40, 0x95, 0x7f, 0xc5, 0x99, 0x11,
	0x29, 0xa2, 0x77, 0x01, 0xa8, 0xd7, 0xf0, 0x69, 0xd7, 0x27, 0x2c, 0xbc, 0x51, 0x56, 0x12, 0x66,
	0x87, 0x1e, 0x51, 0x5d, 0xa0, 0xd2, 0xaa, 0x67, 0x70, 0xcc, 0x06, 0xbd, 0x0d, 0x20, 0x66, 0xcc,
	0xf4, 0x7d, 0xea, 0xab, 0x1b, 0xe3, 0x2b, 0x09, 0x84, 0x9d, 0xa1, 0x98, 0x9b, 0x46, 0xca, 0xe8,
	0x7d, 0xd0, 0x29, 0xc3, 0x84, 0xd1, 0xbe, 0xdf, 0x26, 0x47, 0xcc, 0xea, 0x92, 0xf0, 0x3e, 0xf8,
	0x5a, 0x32, 0x84, 0x94, 0x12, 0xbf, 0x50, 0xa5, 0x0d, 0x51, 0x0b, 0x90, 0xe7, 0xd3, 0x76, 0x0a,
	0x4e, 0x5e, 0x01, 0xab, 0x09, 0xb8, 0x86, 0x4f, 0xdb, 0x84, 0x8d, 0x62, 0x8e, 0xb1, 0x47, 0x1f,
	0x02, 0x8a, 0xce, 0x80, 0xf0, 0x68, 0x56, 0xf7, 0xbf, 0xf5, 0x64, 0x7a, 0x47, 0xd4, 0x38, 0xe4,
	0xa8, 0x31, 0x1f, 0xb5, 0xc8, 0x41, 0x5d, 0xb4, 0x4c, 0xb5, 0x33, 0xd2, 0x3e, 0x57, 0x37, 0xbe,
	0xd7, 0x46, 0xd3, 0x16, 0x53, 0xe2, 0xa3, 0x4e, 0x1b, 0x72, 0xb0, 0xf0, 0x5a, 0x30, 0x8c, 0xee,
	0xc1, 0x18, 0x30, 0x33, 0xa5, 0xc4, 0xc1, 0xd2, 0x86, 0xc6, 0x2f, 0x34, 0x58, 0x1e, 0x99, 0xee,
	0xe8, 0x4d, 0x42, 0x8b, 0xbf, 0x49, 0xc4, 0x76, 0x71, 0xf6, 0x4b, 0x3a, 0x05, 0x2f, 0x5c, 0x5e,
	0x39, 0xd9, 0x29, 0x84, 0x34, 0x3f, 0x9e, 0x4e, 0x2d, 0xbb, 0x47, 0xe4, 0x91, 0x38, 0x8f, 0x15,
	0x25, 0x5f, 0x8a, 0x18, 0x9f, 0x00, 0x75, 0x5f, 0x08, 0x49, 0xe3, 0x04, 0x20, 0x5a, 0x4d, 0x53,
	0x97, 0xa2, 0x55, 0x98, 0x25, 0xbe, 0xcf, 0x02, 0x3f, 0x7c, 0x09, 0x93, 0x54, 0x34, 0xb2, 0x5c,
	0x6c, 0x64, 0xc6, 0x1f, 0xb3, 0xa0, 0xa7, 0x57, 0x9c, 0x6a, 0x78, 0x04, 0x21, 0x7c, 0xc9, 0x86,
	0x47, 0xd0, 0xaa, 0xe1, 0x91, 0xb2, 0xec, 0xb0, 0xe1, 0x91, 0xb2, 0x35, 0x28, 0xb0, 0xc7, 0x96,
	0x27, 0x85, 0xb2, 0x1b, 0x8a, 0x18, 0x3c, 0x80, 0x1e, 0xb5, 0x3a, 0x37, 0xc5, 0xf8, 0xb3, 0x58,
	0x12, 0x3c, 0xdc, 0xbe, 0x27, 0x1e, 0x10, 0xf9, 0xe8, 0x35, 0xac, 0x28, 0xf4, 0x0e, 0x14, 0x3a,
	0x36, 0x3b, 0x97, 0x58, 0xb3, 0xa2, 0x3d, 0x4a, 0xee, 0xf0, 0xbb, 0xa1, 0x74, 0x37, 0xcf, 0x13,
	0x81, 0x23, 0x75, 0xf4, 0x1d, 0xd1, 0x78, 0x35, 0x03, 0x2b, 0x60, 0xe5, 0x39, 0x61, 0xba, 0x92,
	0x30, 0x3d, 0x90, 0x42, 0x65, 0x38, 0xd4, 0x4d, 0x3c, 0xe8, 0xcd, 0x4f, 0x7e, 0xd0, 0x2b, 0x24,
	0x1e, 0xf4, 0x0c, 0x1b, 0x0a, 0xc3, 0x58, 0x78, 0x61, 0x75, 0x68, 0xdf, 0x0d, 0x1a, 0xd4, 0x76,
	0x03, 0x55, 0x88, 0x62, 0x1c, 0x9e, 0xa2, 0x3e, 0x23, 0x9d, 0xa6, 0x67, 0xb5, 0xc3, 0xfc, 0x45,
	0x0c, 0x6e, 0x1d, 0xd0, 0xc0, 0xea, 0x49, 0xb1, 0xcc, 0x60, 0x8c, 0x63, 0x3c, 0x84, 0x39, 0x15,
	0x3b, 0xcf, 0x9b, 0x7d, 0x7a, 0xc0, 0x6f, 0x99, 0xaa, 0xda, 0x49, 0x8a, 0xd7, 0x30, 0xfb, 0x74,
	0xcf, 0x53, 0x6d, 0xb6, 0xf8, 0xe6, 0x4e, 0x4f, 0x06, 0x01, 0x61, 0x4d, 0xde, 0x99, 0xa8, 0x79,
	0x19, 0x32, 0x86, 0x52, 0x4c, 0xda, 0x8f, 0x54, 0x9f, 0x1a, 0x31, 0x8c, 0x3f, 0x69, 0x70, 0x7d,
	0xec, 0x19, 0xf2, 0x9c, 0xed, 0x73, 0xb4, 0x62, 0xe2, 0xab, 0x49, 0xd4, 0x6c, 0x87, 0xaa, 0x42,
	0x9c, 0xc7, 0x8a, 0xe2, 0xdd, 0x6a, 0xdb, 0xe9, 0xa8, 0x07, 0x59, 0xf1, 0x58, 0x98, 0x18, 0xc3,
	0xcc, 0x95, 0x63, 0x98, 0x4d, 0x8f, 0xe1, 0x27, 0x1a, 0xa0, 0xd1, 0x13, 0x6b, 0xc2, 0x5e, 0x8f,
	0xf6, 0x69, 0x36, 0xb1, 0x4f, 0x0d, 0x98, 0xf7, 0xc3, 0x43, 0x47, 0x76, 0x0d, 0x43, 0x7a, 0xea,
	0x7e, 0xe7, 0x0c, 0xf4, 0xf4, 0x41, 0xf7, 0x3c, 0xfb, 0x7a, 0x6c, 0x5c, 0xe3, 0xf7, 0xf5, 0x8f,
	0x35, 0xd0, 0xd3, 0xc7, 0xe0, 0x4b, 0x0e, 0x78, 0xf1, 0xf9, 0x07, 0x5c, 0xfd, 0x9d, 0x06, 0x85,
	0x61, 0x29, 0xe6, 0x2d, 0x8c, 0x79, 0xbf, 0x75, 0x7c, 0xd8, 0x38, 0x6e, 0xe0, 0xc3, 0x7b, 0xd8,
	0x6c, 0x36, 0xf5, 0x0c, 0x6f, 0x1b, 0x38, 0x53, 0x36, 0x23, 0x26, 0xc6, 0xba, 0x86, 0x0c, 0x58,
	0x15, 0x7a, 0x4d, 0xde, 0x38, 0x1c, 0x1e, 0xe1, 0x9a, 0x79, 0x7c, 0xd4, 0xdc, 0xb9, 0x67, 0x36,
	0xf5, 0x2c, 0x5a, 0x83, 0x32, 0x97, 0x35, 0xf0, 0x61, 0x6d, 0x44, 0x9a, 0x0b, 0x3d, 0xc4, 0x1b,
	0x93, 0x7c, 0x08, 0x27, 0x3d, 0xd4, 0xcd, 0x9d, 0xfd, 0x56, 0xfd, 0xb8, 0x56, 0x37, 0x6b, 0xef,
	0xeb, 0x33, 0xa1, 0x01, 0x6f, 0x50, 0x42, 0x83, 0x59, 0xde, 0xa7, 0x74, 0x48, 0x60, 0xd9, 0x3d,
	0x56, 0xf5, 0x61, 0x41, 0xbc, 0x98, 0x60, 0xe2, 0x51, 0xff, 0x05, 0x9b, 0x95, 0xf1, 0xef, 0xdc,
	0x65, 0x98, 0x6b, 0xab, 0xcb, 0x82, 0x5c, 0x4e, 0x21, 0xb9, 0xfd, 0xd7, 0x2c, 0xe8, 0xa6, 0xc5,
	0x06, 0x62, 0xa9, 0x34, 0xe5, 0x8f, 0x53, 0x68, 0x17, 0x4a, 0xbe, 0x7a, 0xd0, 0x57, 0x1e, 0x51,
	0x78, 0x1e, 0xa6, 0x7e, 0x40, 0x31, 0x5e, 0x19, 0xe1, 0xab, 0x59, 0x13, 0x18, 0x56, 0x67, 0xf0,
	0x1e, 0xf5, 0x55, 0xaf, 0x89, 0xae, 0xa7, 0xef, 0x63, 0x12, 0x62, 0x75, 0xfc, 0x35, 0xed, 0x5b,
	0x1a, 0xba, 0x09, 0x0b, 0xbe, 0xc8, 0x85, 0xec, 0xde, 0x16, 0xe3, 0x07, 0xab, 0x31, 0x3c, 0x66,
	0xe3, 0x3f, 0x2d, 0xa1, 0x3b, 0x80, 0xa4, 0x89, 0xc8, 0x64, 0x78, 0x19, 0x42, 0x61, 0xfe, 0xa2,
	0xf4, 0x4e, 0xb0, 0xbf, 0x0d, 0x4b, 0x31, 0xfb, 0x7d, 0xda, 0x9d, 0xde, 0x76, 0x53, 0xdb, 0xfe,
	0x3e, 0x94, 0x5a, 0xbe, 0xe5, 0xb2, 0x53, 0xe2, 0x87, 0xb9, 0xdc, 0x84, 0x3c, 0x23, 0x6e, 0x07,
	0x81, 0x32, 0xf9, 0x80, 0x75, 0xc7, 0x9b, 0xef, 0xbe, 0xfb, 0xe4, 0xa2, 0x92, 0x79, 0x7a, 0x51,
	0xc9, 0xfc, 0xe3, 0xa2, 0x92, 0xf9, 0xec, 0xa2, 0xa2, 0x7d, 0x7e, 0x51, 0xd1, 0xbe, 0xb8, 0xa8,
	0x68, 0x9f, 0x5e, 0x56, 0xb4, 0x5f, 0x5d, 0x56, 0xb4, 0xdf, 0x5c, 0x56, 0xb4, 0x27, 0x97, 0x15,
	0xed, 0xe9, 0x65, 0x45, 0xfb, 0xec, 0xb2, 0xa2, 0xfd, 0xe7, 0xb2, 0x92, 0xf9, 0xfc, 0xb2, 0xa2,
	0x7d, 0x71, 0x59, 0xc9, 0x7c, 0xfa, 0xef, 0x4a, 0xe6, 0x64, 0x56, 0xc0, 0xde, 0xfa, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe0, 0x1b, 0xc9, 0x85, 0x66, 0x1c, 0x00, 0x00,
}

func (this *Msg) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *EmptyResponse) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *SidecarRequestHeader) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *RegisterRequest) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *RegisterResponse) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlRequest) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_InstallAgentOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_UninstallAgentOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_UpdateAgentOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_StartAgentOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_StopAgentOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_UpdateAgentConfigOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_UpdateSidecarOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_UpdateSidecarConfigOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_ExecScriptOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_CancelOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ControlResponse_ExecRestOptions) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_OperationProgress) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_AgentError) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_OsResourceUsages) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_DiskUsage) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_NetStat) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_ProcessResourceUsages) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_ExecScriptResponse) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_AgentHealthCheck) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *Event_ExecRestResponse) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func (this *ShellReport) Description() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	return ServiceDescription()
}
func ServiceDescription() (desc *github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet) {
	d := &github_com_gogo_protobuf_protoc_gen_gogo_descriptor.FileDescriptorSet{}
	var gzipped = []byte{
		// 6135 bytes of a gzipped FileDescriptorSet
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5c, 0x6b, 0x6c, 0x23, 0xd7,
		0x75, 0xd6, 0x50, 0xa4, 0x44, 0x1e, 0x52, 0xd4, 0xe8, 0x4a, 0xab, 0xa5, 0xe9, 0xb5, 0x76, 0xcd,
		0x38, 0xb1, 0xfc, 0x88, 0x36, 0x59, 0xbf, 0xb9, 0x8e, 0x1d, 0x8a, 0x9a, 0x95, 0x64, 0xeb, 0x41,
		0x0f, 0x29, 0x7b, 0x6d, 0xa3, 0x25, 0x46, 0xc3, 0x2b, 0x6a, 0x76, 0x87, 0x33, 0xe3, 0x99, 0xe1,
		0xae, 0x65, 0xf4, 0x87, 0x8b, 0xa4, 0x69, 0x83, 0xbe, 0xd2, 0x07, 0xd0, 0x24, 0xcd, 0xa3, 0x49,
		0x91, 0x47, 0xd3, 0xb4, 0x4d, 0x9a, 0x36, 0x4d, 0x52, 0x14, 0x48, 0x0b, 0x24, 0x35, 0x50, 0x20,
		0x48, 0xfe, 0x14, 0x45, 0x51, 0xa4, 0xf1, 0x26, 0x68, 0xd3, 0xd4, 0x6d, 0xd3, 0xd6, 0x3f, 0x02,
		0xf8, 0x4f, 0x71, 0x5f, 0xc3, 0x99, 0x21, 0x29, 0x52, 0x76, 0x93, 0xfc, 0xd9, 0xe5, 0x3d, 0xf7,
		0x7c, 0xdf, 0xbd, 0xf7, 0xdc, 0x73, 0xef, 0x39, 0xf7, 0xce, 0x8c, 0xe0, 0x5b, 0x12, 0x9c, 0x6d,
		0xdb, 0x76, 0xdb, 0xc4, 0xe7, 0x1d, 0xd7, 0xf6, 0xed, 0xfd, 0xee, 0xc1, 0x79, 0xdf, 0xe8, 0x60,
		0xcf, 0xd7, 0x3a, 0xce, 0x0a, 0x15, 0xa1, 0x59, 0xa6, 0xb0, 0x22, 0x14, 0x4a, 0x17, 0x21, 0xd3,
		0x10, 0x3a, 0xa8, 0x00, 0xd3, 0x1e, 0xd6, 0x6d, 0xab, 0xe5, 0x15, 0xa4, 0x73, 0xd2, 0xf2, 0xa4,
		0x2a, 0x8a, 0x68, 0x01, 0x52, 0x96, 0x66, 0xd9, 0x5e, 0x21, 0x71, 0x4e, 0x5a, 0x4e, 0xa9, 0xac,
		0xb0, 0x7a, 0x19, 0xe6, 0x75, 0xbb, 0xb3, 0x12, 0xe3, 0x5c, 0xcd, 0x07, 0x8c, 0x35, 0x22, 0xaa,
		0x49, 0xcf, 0xa4, 0xfc, 0x23, 0x07, 0x7b, 0x3f, 0x92, 0xa4, 0x8f, 0x27, 0x26, 0xd7, 0x6b, 0xab,
		0x9f, 0x49, 0x2c, 0xad, 0x33, 0x4c, 0x8d, 0x63, 0x56, 0x9e, 0xc2, 0xa6, 0xf9, 0xb8, 0x65, 0x5f,
		0xb7, 0x1a, 0x44, 0x73, 0x7f, 0x8a, 0x92, 0xdd, 0x03, 0xdf, 0x90, 0x60, 0x29, 0x3e, 0xa6, 0x56,
		0xd7, 0xd5, 0x7c, 0xc3, 0xb6, 0x86, 0x0d, 0xa9, 0x0c, 0xe9, 0x35, 0xae, 0x72, 0xe2, 0x11, 0x3d,
		0x35, 0x78, 0x44, 0x33, 0x82, 0xf0, 0x0d, 0x0f, 0xe8, 0xa5, 0x32, 0x9c, 0xeb, 0x1b, 0x10, 0xf6,
		0x74, 0xd7, 0x70, 0x7c, 0xdb, 0x1d, 0x36, 0xa4, 0x6d, 0x98, 0xbb, 0x64, 0x98, 0x78, 0x2d, 0x50,
		0xac, 0x63, 0x1f, 0x3d, 0x08, 0xc9, 0x03, 0xc3, 0xc4, 0x05, 0xe9, 0xdc, 0xe4, 0x72, 0xf6, 0xc2,
		0x6d, 0xf1, 0x4e, 0xaf, 0x44, 0x11, 0xb4, 0x63, 0x2a, 0x45, 0x94, 0xbe, 0x97, 0x84, 0xf9, 0x01,
		0xb5, 0x08, 0x41, 0xd2, 0xd2, 0x3a, 0x98, 0x9a, 0x2a, 0xa3, 0xd2, 0xdf, 0xc4, 0x82, 0x8e, 0xa6,
		0x5f, 0xd5, 0xda, 0x98, 0x5a, 0x2a, 0xa3, 0x8a, 0x22, 0x5a, 0x02, 0x68, 0x61, 0x07, 0x5b, 0x2d,
		0x6c, 0xe9, 0x47, 0x85, 0xc9, 0x73, 0x93, 0xcb, 0x19, 0x35, 0x24, 0x41, 0x77, 0xc1, 0x9c, 0xd3,
		0xdd, 0x37, 0x0d, 0xbd, 0x19, 0x52, 0x83, 0x73, 0x93, 0xcb, 0x29, 0x55, 0x66, 0x15, 0x6b, 0x3d,
		0xe5, 0xdb, 0x61, 0xf6, 0x3a, 0xd6, 0xae, 0x86, 0x55, 0xb3, 0x54, 0x35, 0x4f, 0xc4, 0x21, 0xc5,
		0x2a, 0xe4, 0x3a, 0xd8, 0xf3, 0xb4, 0x36, 0x6e, 0x92, 0x39, 0x28, 0x24, 0xe9, 0xe8, 0xcf, 0xf5,
		0x8d, 0x3e, 0x3e, 0xf2, 0x2c, 0x47, 0x91, 0xe9, 0x40, 0x15, 0xc8, 0x60, 0xab, 0xdb, 0x61, 0x0c,
		0xa9, 0x21, 0xf6, 0x53, 0xac, 0x6e, 0x27, 0xce, 0x92, 0x26, 0x30, 0x4e, 0x31, 0xed, 0x61, 0xf7,
		0x9a, 0xa1, 0xe3, 0xc2, 0x14, 0x25, 0xb8, 0xbd, 0x8f, 0xa0, 0xce, 0xea, 0xe3, 0x1c, 0x02, 0x87,
		0xaa, 0x90, 0xc1, 0xcf, 0xfb, 0xd8, 0xf2, 0x0c, 0xdb, 0x2a, 0x4c, 0x53, 0x92, 0x37, 0x0f, 0x98,
		0x45, 0x6c, 0xb6, 0xe2, 0x14, 0x3d, 0x1c, 0xba, 0x1f, 0xa6, 0x6d, 0x87, 0xb8, 0xa6, 0x57, 0x48,
		0x9f, 0x93, 0x96, 0xb3, 0x17, 0xce, 0x0c, 0x74, 0x84, 0x5d, 0xa6, 0xa3, 0x0a, 0x65, 0xb4, 0x09,
		0xb2, 0x67, 0x77, 0x5d, 0x1d, 0x37, 0x75, 0xbb, 0x85, 0x9b, 0x86, 0x75, 0x60, 0x17, 0x32, 0x94,
		0xe0, 0x6c, 0xff, 0x40, 0xa8, 0x62, 0xd5, 0x6e, 0xe1, 0x4d, 0xeb, 0xc0, 0x56, 0xf3, 0x5e, 0xa4,
		0x8c, 0x16, 0x61, 0xca, 0x3b, 0xb2, 0x7c, 0xed, 0xf9, 0x42, 0x8e, 0x7a, 0x08, 0x2f, 0x95, 0xbe,
		0x3c, 0x05, 0xb3, 0xe3, 0xb8, 0xd8, 0x45, 0x48, 0x1d, 0x90, 0x51, 0x16, 0x12, 0x27, 0xb1, 0x01,
		0xc3, 0x44, 0x8d, 0x38, 0xf5, 0x3a, 0x8d, 0x58, 0x81, 0xac, 0x85, 0x3d, 0x1f, 0xb7, 0x98, 0x47,
		0x4c, 0x8e, 0xe9, 0x53, 0xc0, 0x40, 0xfd, 0x2e, 0x95, 0x7c, 0x5d, 0x2e, 0x75, 0x19, 0x66, 0x83,
		0x2e, 0x35, 0x5d, 0xcd, 0x6a, 0x0b, 0xdf, 0x3c, 0x3f, 0xaa, 0x27, 0x2b, 0x8a, 0xc0, 0xa9, 0x04,
		0xa6, 0xe6, 0x71, 0xa4, 0x8c, 0xd6, 0x00, 0x6c, 0x0b, 0xdb, 0x07, 0xcd, 0x16, 0xd6, 0xcd, 0x42,
		0x7a, 0x88, 0x95, 0x76, 0x89, 0x4a, 0x9f, 0x95, 0x6c, 0x26, 0xd5, 0x4d, 0xf4, 0x50, 0xcf, 0xd5,
		0xa6, 0x87, 0x78, 0xca, 0x36, 0x5b, 0x64, 0x7d, 0xde, 0xb6, 0x07, 0x79, 0x17, 0x13, 0xbf, 0xc7,
		0x2d, 0x3e, 0xb2, 0x0c, 0xed, 0xc4, 0xca, 0xc8, 0x91, 0xa9, 0x1c, 0xc6, 0x06, 0x36, 0xe3, 0x86,
		0x8b, 0xe8, 0x4d, 0x10, 0x08, 0x9a, 0xd4, 0xad, 0x80, 0xee, 0x42, 0x39, 0x21, 0xdc, 0xd1, 0x3a,
		0xb8, 0xf8, 0x02, 0xe4, 0xa3, 0xe6, 0x21, 0x7b, 0xbf, 0xe7, 0x6b, 0xae, 0x4f, 0xbd, 0x30, 0xa5,
		0xb2, 0x02, 0x92, 0x61, 0x12, 0x5b, 0x2d, 0x1e, 0x0f, 0xc8, 0x4f, 0xf4, 0xce, 0xde, 0x80, 0x27,
		0xe9, 0x80, 0xdf, 0xd2, 0x3f, 0xa3, 0x11, 0xe6, 0xf8, 0xb8, 0x8b, 0x0f, 0xc0, 0x4c, 0x64, 0x00,
		0xe3, 0x36, 0x5d, 0xfa, 0x39, 0x38, 0x35, 0x90, 0x1a, 0x5d, 0x86, 0x85, 0xae, 0x65, 0x58, 0x3e,
		0x76, 0x1d, 0x17, 0x13, 0x8f, 0x65, 0x4d, 0x15, 0xfe, 0x75, 0x7a, 0x88, 0xcf, 0xed, 0x85, 0xb5,
		0x19, 0x8b, 0x3a, 0xdf, 0xed, 0x17, 0xde, 0x99, 0x49, 0x7f, 0x7f, 0x5a, 0x7e, 0xf1, 0xc5, 0x17,
		0x5f, 0x4c, 0x94, 0xde, 0x3f, 0x05, 0x0b, 0x83, 0xd6, 0xcc, 0xc0, 0xe5, 0xbb, 0x08, 0x53, 0x56,
		0xb7, 0xb3, 0x8f, 0x5d, 0x6a, 0xa4, 0x94, 0xca, 0x4b, 0xa8, 0x02, 0x29, 0x53, 0xdb, 0xc7, 0x66,
		0x21, 0x79, 0x4e, 0x5a, 0xce, 0x5f, 0xb8, 0x6b, 0xac, 0x55, 0xb9, 0xb2, 0x45, 0x20, 0x2a, 0x43,
		0xa2, 0x47, 0x20, 0xc9, 0xb7, 0x68, 0xc2, 0x70, 0xe7, 0x78, 0x0c, 0x64, 0x2d, 0xa9, 0x14, 0x87,
		0x6e, 0x86, 0x0c, 0xf9, 0x9f, 0xf9, 0xc6, 0x14, 0xed, 0x73, 0x9a, 0x08, 0x88, 0x5f, 0xa0, 0x22,
		0xa4, 0xe9, 0x32, 0x69, 0x61, 0x11, 0xda, 0x82, 0x32, 0x71, 0xac, 0x16, 0x3e, 0xd0, 0xba, 0xa6,
		0xdf, 0xbc, 0xa6, 0x99, 0x5d, 0x4c, 0x1d, 0x3e, 0xa3, 0xe6, 0xb8, 0xf0, 0x49, 0x22, 0x43, 0x67,
		0x21, 0xcb, 0x56, 0x95, 0x61, 0xb5, 0xf0, 0xf3, 0x74, 0xf7, 0x4c, 0xa9, 0x6c, 0xa1, 0x6d, 0x12,
		0x09, 0x69, 0xfe, 0x8a, 0x67, 0x5b, 0xc2, 0x35, 0x69, 0x13, 0x44, 0x40, 0x9b, 0x7f, 0x20, 0xbe,
		0x71, 0xdf, 0x32, 0x78, 0x78, 0x71, 0x9f, 0x2a, 0x7d, 0x31, 0x01, 0x49, 0xba, 0x5f, 0xcc, 0x42,
		0xb6, 0xf1, 0x74, 0x4d, 0x69, 0xae, 0xed, 0xee, 0xad, 0x6e, 0x29, 0xb2, 0x84, 0xf2, 0x00, 0x54,
		0x70, 0x69, 0x6b, 0xb7, 0xd2, 0x90, 0x13, 0x41, 0x79, 0x73, 0xa7, 0x71, 0xff, 0xbd, 0xf2, 0x64,
		0x00, 0xd8, 0x63, 0x82, 0x64, 0x58, 0xe1, 0x9e, 0x0b, 0x72, 0x0a, 0xc9, 0x90, 0x63, 0x04, 0x9b,
		0x97, 0x95, 0xb5, 0xfb, 0xef, 0x95, 0xa7, 0xa2, 0x92, 0x7b, 0x2e, 0xc8, 0xd3, 0x68, 0x06, 0x32,
		0x54, 0xb2, 0xba, 0xbb, 0xbb, 0x25, 0xa7, 0x03, 0xce, 0x7a, 0x43, 0xdd, 0xdc, 0x59, 0x97, 0x33,
		0x01, 0xe7, 0xba, 0xba, 0xbb, 0x57, 0x93, 0x21, 0x60, 0xd8, 0x56, 0xea, 0xf5, 0xca, 0xba, 0x22,
		0x67, 0x03, 0x8d, 0xd5, 0xa7, 0x1b, 0x4a, 0x5d, 0xce, 0x45, 0xba, 0x75, 0xcf, 0x05, 0x79, 0x26,
		0x68, 0x42, 0xd9, 0xd9, 0xdb, 0x96, 0xf3, 0x68, 0x0e, 0x66, 0x58, 0x13, 0xa2, 0x13, 0xb3, 0x31,
		0xd1, 0xfd, 0xf7, 0xca, 0x72, 0xaf, 0x23, 0x8c, 0x65, 0x2e, 0x22, 0xb8, 0xff, 0x5e, 0x19, 0x95,
		0xaa, 0x90, 0xa2, 0xde, 0x85, 0x10, 0xe4, 0xb7, 0x2a, 0xab, 0xca, 0x56, 0x73, 0xb7, 0xd6, 0xd8,
		0xdc, 0xdd, 0xa9, 0x6c, 0xc9, 0x52, 0x4f, 0xa6, 0x2a, 0x4f, 0xec, 0x6d, 0xaa, 0xca, 0x9a, 0x9c,
		0x08, 0xcb, 0x6a, 0x4a, 0xa5, 0xa1, 0xac, 0xc9, 0x93, 0x25, 0x1d, 0x16, 0x06, 0xed, 0x93, 0x03,
		0x57, 0x46, 0x68, 0x8a, 0x13, 0x43, 0xa6, 0x98, 0x72, 0xf5, 0x4d, 0xf1, 0x77, 0x13, 0x30, 0x3f,
		0x20, 0x56, 0x0c, 0x6c, 0xe4, 0x51, 0x48, 0x31, 0x17, 0x65, 0xd1, 0xf3, 0x8e, 0x81, 0x41, 0x87,
		0x3a, 0x6c, 0x5f, 0x04, 0xa5, 0xb8, 0x70, 0x06, 0x31, 0x39, 0x24, 0x83, 0x20, 0x14, 0x7d, 0x7b,
		0xfa, 0xcf, 0xf4, 0xed, 0xe9, 0x2c, 0xec, 0xdd, 0x3f, 0x4e, 0xd8, 0xa3, 0xb2, 0x93, 0xed, 0xed,
		0xa9, 0x01, 0x7b, 0xfb, 0x45, 0x98, 0xeb, 0x23, 0x1a, 0x7b, 0x8f, 0x7d, 0x97, 0x04, 0x85, 0x61,
		0xc6, 0x19, 0xb1, 0xd3, 0x25, 0x22, 0x3b, 0xdd, 0xc5, 0xb8, 0x05, 0x6f, 0x1d, 0x3e, 0x09, 0x7d,
		0x73, 0xfd, 0x29, 0x09, 0x16, 0x07, 0x67, 0x8a, 0x03, 0xfb, 0xf0, 0x08, 0x4c, 0x75, 0xb0, 0x7f,
		0x68, 0x8b, 0x6c, 0xe9, 0x2d, 0x03, 0x62, 0x30, 0xa9, 0x8e, 0x4f, 0x36, 0x47, 0x85, 0x83, 0xf8,
		0xe4, 0xb0, 0x74, 0x8f, 0xf5, 0xa6, 0xaf, 0xa7, 0xef, 0x4d, 0xc0, 0xa9, 0x81, 0xe4, 0x03, 0x3b,
		0x7a, 0x0b, 0x80, 0x61, 0x39, 0x5d, 0x9f, 0x65, 0x44, 0x6c, 0x83, 0xcd, 0x50, 0x09, 0xdd, 0xbc,
		0xc8, 0xe6, 0xd9, 0xf5, 0x83, 0xfa, 0x49, 0x5a, 0x0f, 0x4c, 0x44, 0x15, 0x1e, 0xec, 0x75, 0x34,
		0x49, 0x3b, 0xba, 0x34, 0x64, 0xa4, 0x7d, 0x8e, 0xf9, 0x36, 0x90, 0x75, 0xd3, 0xc0, 0x96, 0xdf,
		0xf4, 0x7c, 0x17, 0x6b, 0x1d, 0xc3, 0x6a, 0xd3, 0x08, 0x92, 0x2e, 0xa7, 0x0e, 0x34, 0xd3, 0xc3,
		0xea, 0x2c, 0xab, 0xae, 0x8b, 0x5a, 0x82, 0xa0, 0x0e, 0xe4, 0x86, 0x10, 0x53, 0x11, 0x04, 0xab,
		0x0e, 0x10, 0xa5, 0x5f, 0xc9, 0x40, 0x36, 0x94, 0x57, 0xa3, 0x5b, 0x21, 0x77, 0x45, 0xbb, 0xa6,
		0x35, 0xc5, 0x59, 0x89, 0x59, 0x22, 0x4b, 0x64, 0x35, 0x7e, 0x5e, 0x7a, 0x1b, 0x2c, 0x50, 0x15,
		0xbb, 0xeb, 0x63, 0xb7, 0xa9, 0x9b, 0x9a, 0xe7, 0x51, 0xa3, 0xa5, 0xa9, 0x2a, 0x22, 0x75, 0xbb,
		0xa4, 0xaa, 0x2a, 0x6a, 0xd0, 0x7d, 0x30, 0x4f, 0x11, 0x9d, 0xae, 0xe9, 0x1b, 0x8e, 0x89, 0x9b,
		0xe4, 0xf4, 0xe6, 0xd1, 0x48, 0x12, 0xf4, 0x6c, 0x8e, 0x68, 0x6c, 0x73, 0x05, 0xd2, 0x23, 0x0f,
		0xad, 0xc1, 0x2d, 0x14, 0xd6, 0xc6, 0x16, 0x76, 0x35, 0x1f, 0x37, 0xf1, 0x73, 0x5d, 0xcd, 0xf4,
		0x9a, 0x9a, 0xd5, 0x6a, 0x1e, 0x6a, 0xde, 0x61, 0x61, 0x81, 0x10, 0xac, 0x26, 0x0a, 0x92, 0x7a,
		0x13, 0x51, 0x5c, 0xe7, 0x7a, 0x0a, 0x55, 0xab, 0x58, 0xad, 0x0d, 0xcd, 0x3b, 0x44, 0x65, 0x58,
		0xa4, 0x2c, 0x9e, 0xef, 0x1a, 0x56, 0xbb, 0xa9, 0x1f, 0x62, 0xfd, 0x6a, 0xb3, 0xeb, 0x1f, 0x3c,
		0x58, 0xb8, 0x39, 0xdc, 0x3e, 0xed, 0x61, 0x9d, 0xea, 0x54, 0x89, 0xca, 0x9e, 0x7f, 0xf0, 0x20,
		0xaa, 0x43, 0x8e, 0x4c, 0x46, 0xc7, 0x78, 0x01, 0x37, 0x0f, 0x6c, 0x97, 0x86, 0xc6, 0xfc, 0x80,
		0xad, 0x29, 0x64, 0xc1, 0x95, 0x5d, 0x0e, 0xd8, 0xb6, 0x5b, 0xb8, 0x9c, 0xaa, 0xd7, 0x14, 0x65,
		0x4d, 0xcd, 0x0a, 0x96, 0x4b, 0xb6, 0x4b, 0x1c, 0xaa, 0x6d, 0x07, 0x06, 0xce, 0x32, 0x87, 0x6a,
		0xdb, 0xc2, 0xbc, 0xf7, 0xc1, 0xbc, 0xae, 0xb3, 0x31, 0x1b, 0x7a, 0x93, 0x9f, 0xb1, 0xbc, 0x82,
		0x1c, 0x31, 0x96, 0xae, 0xaf, 0x33, 0x05, 0xee, 0xe3, 0x1e, 0x7a, 0x08, 0x4e, 0xf5, 0x8c, 0x15,
		0x06, 0xce, 0xf5, 0x8d, 0x32, 0x0e, 0xbd, 0x0f, 0xe6, 0x9d, 0xa3, 0x7e, 0x20, 0x8a, 0xb4, 0xe8,
		0x1c, 0xc5, 0x61, 0x0f, 0xc0, 0x82, 0x73, 0xe8, 0xf4, 0xe3, 0xee, 0x0c, 0xe3, 0x90, 0x73, 0xe8,
		0xc4, 0x81, 0x6f, 0xa6, 0x07, 0x6e, 0x17, 0xeb, 0x9a, 0x8f, 0x5b, 0x85, 0xd3, 0x61, 0xf5, 0x50,
		0x05, 0x3a, 0x0f, 0xb2, 0xae, 0x37, 0xb1, 0xa5, 0xed, 0x9b, 0xb8, 0xa9, 0xb9, 0xd8, 0xd2, 0xbc,
		0xc2, 0xd9, 0xb0, 0x72, 0x5e, 0xd7, 0x15, 0x5a, 0x5b, 0xa1, 0x95, 0xe8, 0x4e, 0x98, 0xb3, 0xf7,
		0xaf, 0xe8, 0xcc, 0x25, 0x9b, 0x8e, 0x8b, 0x0f, 0x8c, 0xe7, 0x0b, 0xb7, 0x51, 0xfb, 0xce, 0x92,
		0x0a, 0xea, 0x90, 0x35, 0x2a, 0x46, 0x77, 0x80, 0xac, 0x7b, 0x87, 0x9a, 0xeb, 0xd0, 0x3d, 0xd9,
		0x73, 0x34, 0x1d, 0x17, 0xde, 0xcc, 0x54, 0x99, 0x7c, 0x47, 0x88, 0xc9, 0x92, 0xf0, 0xae, 0x1b,
		0x07, 0xbe, 0x60, 0xbc, 0x9d, 0x2d, 0x09, 0x2a, 0xe3, 0x6c, 0xcb, 0x20, 0x13, 0x53, 0x44, 0x1a,
		0x5e, 0xa6, 0x6a, 0x79, 0xe7, 0xd0, 0x09, 0xb7, 0xfb, 0x26, 0x98, 0x21, 0x9a, 0xbd, 0x46, 0xef,
		0x60, 0x09, 0x99, 0x73, 0x18, 0x6a, 0xf1, 0x5e, 0x58, 0x24, 0x4a, 0x1d, 0xec, 0x6b, 0x2d, 0xcd,
		0xd7, 0x42, 0xda, 0x77, 0x53, 0x6d, 0x62, 0xf7, 0x6d, 0x5e, 0x19, 0xe9, 0xa7, 0xdb, 0xdd, 0x3f,
		0x0a, 0x3c, 0xeb, 0xad, 0xac, 0x9f, 0x44, 0x26, 0x7c, 0xeb, 0xc7, 0x96, 0x74, 0x97, 0xca, 0x90,
		0x0b, 0x3b, 0x3e, 0xca, 0x00, 0x73, 0x7d, 0x59, 0x22, 0x59, 0x50, 0x75, 0x77, 0x8d, 0xe4, 0x2f,
		0xcf, 0x28, 0x72, 0x82, 0xe4, 0x51, 0x5b, 0x9b, 0x0d, 0xa5, 0xa9, 0xee, 0xed, 0x34, 0x36, 0xb7,
		0x15, 0x79, 0x32, 0x9c, 0xb0, 0x7f, 0x2d, 0x01, 0xf9, 0xe8, 0xd9, 0x0b, 0x3d, 0x0c, 0xa7, 0xc5,
		0x45, 0x89, 0x87, 0xfd, 0xe6, 0x75, 0xc3, 0xa5, 0x6b, 0xb1, 0xa3, 0xb1, 0xb8, 0x18, 0x78, 0xc3,
		0x02, 0xd7, 0xaa, 0x63, 0xff, 0x29, 0xc3, 0x25, 0x2b, 0xad, 0xa3, 0xf9, 0x68, 0x0b, 0xce, 0x5a,
		0x76, 0xd3, 0xf3, 0x35, 0xab, 0xa5, 0xb9, 0xad, 0x66, 0xef, 0x8a, 0xaa, 0xa9, 0xe9, 0x3a, 0xf6,
		0x3c, 0x9b, 0xc5, 0xc0, 0x80, 0xe5, 0x8c, 0x65, 0xd7, 0xb9, 0x72, 0x2f, 0x38, 0x54, 0xb8, 0x6a,
		0xcc, 0x73, 0x27, 0x87, 0x79, 0xee, 0xcd, 0x90, 0xe9, 0x68, 0x4e, 0x13, 0x5b, 0xbe, 0x7b, 0x44,
		0x33, 0xee, 0xb4, 0x9a, 0xee, 0x68, 0x8e, 0x42, 0xca, 0x3f, 0x99, 0x83, 0xcf, 0x3f, 0x4d, 0x42,
		0x2e, 0x9c, 0x75, 0x93, 0x43, 0x8c, 0x4e, 0x03, 0x94, 0x44, 0xb7, 0xb0, 0x37, 0x1d, 0x9b, 0xa3,
		0xaf, 0x54, 0x49, 0xe4, 0x2a, 0x4f, 0xb1, 0x5c, 0x58, 0x65, 0x48, 0x92, 0x35, 0x10, 0xd7, 0xc2,
		0x2c, 0xf7, 0x48, 0xab, 0xbc, 0x84, 0xd6, 0x61, 0xea, 0x8a, 0x47, 0xb9, 0xa7, 0x28, 0xf7, 0x6d,
		0xc7, 0x73, 0x3f, 0x56, 0xa7, 0xe4, 0x99, 0xc7, 0xea, 0xcd, 0x9d, 0x5d, 0x75, 0xbb, 0xb2, 0xa5,
		0x72, 0x38, 0xba, 0x09, 0x92, 0xa6, 0xf6, 0xc2, 0x51, 0x34, 0xc6, 0x51, 0xd1, 0xb8, 0x86, 0xbf,
		0x09, 0x92, 0xd7, 0xb1, 0x76, 0x35, 0x1a, 0x59, 0xa8, 0xe8, 0xc7, 0xe8, 0xfa, 0xe7, 0x21, 0x45,
		0xed, 0x85, 0x00, 0xb8, 0xc5, 0xe4, 0x09, 0x94, 0x86, 0x64, 0x75, 0x57, 0x25, 0xee, 0x2f, 0x43,
		0x8e, 0x49, 0x9b, 0xb5, 0x4d, 0xa5, 0xaa, 0xc8, 0x89, 0xd2, 0x7d, 0x30, 0xc5, 0x8c, 0x40, 0x96,
		0x46, 0x60, 0x06, 0x79, 0x82, 0x17, 0x39, 0x87, 0x24, 0x6a, 0xf7, 0xb6, 0x57, 0x15, 0x55, 0x4e,
		0x84, 0xa7, 0xd7, 0x83, 0x5c, 0x38, 0xe1, 0xfe, 0xc9, 0xf8, 0xd4, 0x57, 0x24, 0xc8, 0x86, 0x12,
		0x68, 0x92, 0xf9, 0x68, 0xa6, 0x69, 0x5f, 0x6f, 0x6a, 0xa6, 0xa1, 0x79, 0xdc, 0x29, 0x80, 0x8a,
		0x2a, 0x44, 0x32, 0xee, 0xa4, 0xfd, 0x44, 0x3a, 0xff, 0x11, 0x09, 0xe4, 0x78, 0xee, 0x1a, 0xeb,
		0xa0, 0xf4, 0x53, 0xed, 0xe0, 0x87, 0x24, 0xc8, 0x47, 0x13, 0xd6, 0x58, 0xf7, 0x6e, 0xfd, 0xa9,
		0x76, 0xef, 0x3b, 0x09, 0x98, 0x89, 0xa4, 0xa9, 0xe3, 0xf6, 0xee, 0x39, 0x98, 0x33, 0x5a, 0xb8,
		0xe3, 0xd8, 0x3e, 0xb6, 0xf4, 0xa3, 0xa6, 0x89, 0xaf, 0x61, 0xb3, 0x50, 0xa2, 0x1b, 0xc5, 0xf9,
		0xe3, 0x13, 0xe1, 0x95, 0xcd, 0x1e, 0x6e, 0x8b, 0xc0, 0xca, 0xf3, 0x9b, 0x6b, 0xca, 0x76, 0x6d,
		0xb7, 0xa1, 0xec, 0x54, 0x9f, 0x6e, 0xee, 0xed, 0x3c, 0xbe, 0xb3, 0xfb, 0xd4, 0x8e, 0x2a, 0x1b,
		0x31, 0xb5, 0x1f, 0xe3, 0x52, 0xaf, 0x81, 0x1c, 0xef, 0x14, 0x3a, 0x0d, 0x83, 0xba, 0x25, 0x4f,
		0xa0, 0x79, 0x98, 0xdd, 0xd9, 0x6d, 0xd6, 0x37, 0xd7, 0x94, 0xa6, 0x72, 0xe9, 0x92, 0x52, 0x6d,
		0xd4, 0xd9, 0xd5, 0x46, 0xa0, 0xdd, 0x88, 0x2e, 0xea, 0x0f, 0x4e, 0xc2, 0xfc, 0x80, 0x9e, 0xa0,
		0x0a, 0x3f, 0x94, 0xb0, 0x73, 0xd2, 0x5b, 0xc7, 0xe9, 0xfd, 0x0a, 0xc9, 0x0a, 0x6a, 0x9a, 0xeb,
		0xf3, 0x33, 0xcc, 0x1d, 0x40, 0xac, 0x64, 0xf9, 0xc6, 0x81, 0x81, 0x5d, 0x7e, 0x13, 0xc4, 0x4e,
		0x2a, 0xb3, 0x3d, 0x39, 0xbb, 0x0c, 0xba, 0x1b, 0x90, 0x63, 0x7b, 0x86, 0x6f, 0x5c, 0xc3, 0x4d,
		0xc3, 0x12, 0xd7, 0x46, 0xe4, 0xe4, 0x92, 0x54, 0x65, 0x51, 0xb3, 0x69, 0xf9, 0x81, 0xb6, 0x85,
		0xdb, 0x5a, 0x4c, 0x3b, 0x45, 0x1f, 0x51, 0xc9, 0xa2, 0x26, 0xd0, 0xbe, 0x15, 0x72, 0x2d, 0xbb,
		0x4b, 0xd2, 0x39, 0xa6, 0x47, 0xe2, 0x85, 0xa4, 0x66, 0x99, 0x2c, 0x50, 0xe1, 0x89, 0x7a, 0xef,
		0xbe, 0x2a, 0xa7, 0x66, 0x99, 0x8c, 0xa9, 0xdc, 0x0e, 0xb3, 0x5a, 0xbb, 0xed, 0x12, 0x72, 0x41,
		0xc4, 0x8e, 0x1e, 0xf9, 0x40, 0x4c, 0x15, 0x8b, 0x8f, 0x41, 0x5a, 0xd8, 0x81, 0x84, 0x64, 0x62,
		0x89, 0xa6, 0xc3, 0xce, 0xd3, 0x89, 0xe5, 0x8c, 0x9a, 0xb6, 0x44, 0xe5, 0xad, 0x90, 0x33, 0xbc,
		0x66, 0xef, 0xfa, 0x3d, 0x71, 0x2e, 0xb1, 0x9c, 0x56, 0xb3, 0x86, 0x17, 0x5c, 0x5d, 0x96, 0x3e,
		0x95, 0x80, 0x7c, 0xf4, 0xf1, 0x01, 0x5a, 0x83, 0xb4, 0x69, 0xeb, 0xf4, 0x71, 0x1a, 0x7f, 0x76,
		0xb5, 0x3c, 0xe2, 0x89, 0xc3, 0xca, 0x16, 0xd7, 0x57, 0x03, 0x64, 0xf1, 0x1b, 0x12, 0xa4, 0x85,
		0x18, 0x2d, 0x42, 0xd2, 0xd1, 0xfc, 0x43, 0x4a, 0x97, 0x5a, 0x4d, 0xc8, 0x92, 0x4a, 0xcb, 0x44,
		0xee, 0x39, 0x9a, 0x45, 0x5d, 0x80, 0xcb, 0x49, 0x99, 0xcc, 0xab, 0x89, 0xb5, 0x16, 0x3d, 0xd7,
		0xd8, 0x9d, 0x0e, 0xb6, 0x7c, 0x4f, 0xcc, 0x2b, 0x97, 0x57, 0xb9, 0x18, 0xdd, 0x05, 0x73, 0xbe,
		0xab, 0x19, 0x66, 0x44, 0x37, 0x49, 0x75, 0x65, 0x51, 0x11, 0x28, 0x97, 0xe1, 0x26, 0xc1, 0xdb,
		0xc2, 0xbe, 0xa6, 0x1f, 0xe2, 0x56, 0x0f, 0x34, 0x45, 0xef, 0x2f, 0x4e, 0x73, 0x85, 0x35, 0x5e,
		0x2f, 0xb0, 0xa5, 0x6f, 0x49, 0x30, 0x27, 0x4e, 0x62, 0xad, 0xc0, 0x58, 0xdb, 0x00, 0x9a, 0x65,
		0xd9, 0x7e, 0xd8, 0x5c, 0xfd, 0xae, 0xdc, 0x87, 0x5b, 0xa9, 0x04, 0x20, 0x35, 0x44, 0x50, 0xec,
		0x00, 0xf4, 0x6a, 0x86, 0x9a, 0xed, 0x2c, 0x64, 0xf9, 0xb3, 0x21, 0xfa, 0x80, 0x91, 0x9d, 0xdd,
		0x81, 0x89, 0xc8, 0x91, 0x0d, 0x2d, 0x40, 0x6a, 0x1f, 0xb7, 0x0d, 0x8b, 0xdf, 0xf8, 0xb2, 0x82,
		0xb8, 0x61, 0x49, 0x06, 0x37, 0x2c, 0xab, 0xcf, 0x0e, 0x7e, 0x9c, 0x2a, 0xc7, 0xee, 0x0f, 0xbc,
		0x0d, 0xe9, 0x19, 0xe8, 0xa5, 0x98, 0xa1, 0xc7, 0xaa, 0xc5, 0xf8, 0x63, 0x55, 0x15, 0x1f, 0x98,
		0x58, 0x27, 0xbd, 0x87, 0x4f, 0xde, 0x05, 0x6f, 0x6d, 0x1b, 0xfe, 0x61, 0x77, 0x7f, 0x45, 0xb7,
		0x3b, 0xe7, 0xdb, 0x76, 0xdb, 0xee, 0x3d, 0x53, 0x25, 0x25, 0x5a, 0xa0, 0xbf, 0xf8, 0x73, 0xd5,
		0x4c, 0x20, 0x2d, 0x8e, 0x7c, 0x08, 0x5b, 0xde, 0x81, 0x79, 0xae, 0xdc, 0xa4, 0x0f, 0x76, 0xd8,
		0xf1, 0x04, 0x1d, 0x7b, 0x39, 0x56, 0xf8, 0xfc, 0xf7, 0x68, 0xb8, 0x56, 0xe7, 0x38, 0x94, 0xd4,
		0xb1, 0x13, 0x4c, 0x59, 0x85, 0x53, 0x11, 0x3e, 0xb6, 0x34, 0xb1, 0x3b, 0x82, 0xf1, 0x6b, 0x9c,
		0x71, 0x3e, 0xc4, 0x58, 0xe7, 0xd0, 0x72, 0x15, 0x66, 0x4e, 0xc2, 0xf5, 0x75, 0xce, 0x95, 0xc3,
		0x61, 0x92, 0x75, 0x98, 0xa5, 0x24, 0x7a, 0xd7, 0xf3, 0xed, 0x0e, 0xdd, 0xf7, 0x8e, 0xa7, 0xf9,
		0xdb, 0xef, 0xb1, 0xb5, 0x92, 0x27, 0xb0, 0x6a, 0x80, 0x2a, 0x97, 0x81, 0x3e, 0xcb, 0x6a, 0x61,
		0xdd, 0x1c, 0xc1, 0xf0, 0x12, 0xef, 0x48, 0xa0, 0x5f, 0x7e, 0x12, 0x16, 0xc8, 0x6f, 0xba, 0x2d,
		0x85, 0x7b, 0x32, 0xfa, 0x26, 0xad, 0xf0, 0xad, 0x77, 0xb1, 0xe5, 0x38, 0x1f, 0x10, 0x84, 0xfa,
		0x14, 0x9a, 0xc5, 0x36, 0xf6, 0x7d, 0xec, 0x7a, 0x4d, 0xcd, 0x1c, 0xd4, 0xbd, 0xd0, 0x55, 0x44,
		0xe1, 0x03, 0xaf, 0x44, 0x67, 0x71, 0x9d, 0x21, 0x2b, 0xa6, 0x59, 0xde, 0x83, 0xd3, 0x03, 0xbc,
		0x62, 0x0c, 0xce, 0x0f, 0x72, 0xce, 0x85, 0x3e, 0xcf, 0x20, 0xb4, 0x35, 0x10, 0xf2, 0x60, 0x2e,
		0xc7, 0xe0, 0xfc, 0x5d, 0xce, 0x89, 0x38, 0x56, 0x4c, 0x29, 0x61, 0x7c, 0x0c, 0xe6, 0xae, 0x61,
		0x77, 0xdf, 0xf6, 0xf8, 0xf5, 0xcf, 0x18, 0x74, 0x1f, 0xe2, 0x74, 0xb3, 0x1c, 0x48, 0xef, 0x83,
		0x08, 0xd7, 0x43, 0x90, 0x3e, 0xd0, 0x74, 0x3c, 0x06, 0xc5, 0x87, 0x39, 0xc5, 0x34, 0xd1, 0x27,
		0xd0, 0x0a, 0xe4, 0xda, 0x36, 0x8f, 0x4c, 0xa3, 0xe1, 0x1f, 0xe1, 0xf0, 0xac, 0xc0, 0x70, 0x0a,
		0xc7, 0x76, 0xba, 0x26, 0x09, 0x5b, 0xa3, 0x29, 0x3e, 0x2a, 0x28, 0x04, 0x86, 0x53, 0x9c, 0xc0,
		0xac, 0xbf, 0x27, 0x28, 0xbc, 0x90, 0x3d, 0x1f, 0x85, 0xac, 0x6d, 0x99, 0x47, 0xb6, 0x35, 0x4e,
		0x27, 0x3e, 0xc6, 0x19, 0x80, 0x43, 0x08, 0xc1, 0x45, 0xc8, 0x8c, 0x3b, 0x11, 0x9f, 0x78, 0x45,
		0x2c, 0x0f, 0x31, 0x03, 0xeb, 0x30, 0x2b, 0x36, 0x28, 0xc3, 0xb6, 0xc6, 0xa0, 0xf8, 0x24, 0xa7,
		0xc8, 0x87, 0x60, 0x7c, 0x18, 0x3e, 0xf6, 0xfc, 0x36, 0x1e, 0x87, 0xe4, 0x53, 0x62, 0x18, 0x1c,
		0xc2, 0x4d, 0xb9, 0x8f, 0x2d, 0xfd, 0x70, 0x3c, 0x86, 0x4f, 0x0b, 0x53, 0x0a, 0x0c, 0xa1, 0xa8,
		0xc2, 0x4c, 0x47, 0x73, 0xbd, 0x43, 0xcd, 0x1c, 0x6b, 0x3a, 0xfe, 0x80, 0x73, 0xe4, 0x02, 0x10,
		0xb7, 0x48, 0xd7, 0x3a, 0x09, 0xcd, 0x67, 0x84, 0x45, 0x42, 0x30, 0xbe, 0xf4, 0x3c, 0x9f, 0xde,
		0x95, 0x9d, 0x84, 0xed, 0x0f, 0xc5, 0xd2, 0x63, 0xd8, 0xed, 0x30, 0xe3, 0x45, 0xc8, 0x78, 0xc6,
		0x0b, 0x63, 0xd1, 0x7c, 0x56, 0xcc, 0x34, 0x05, 0x10, 0xf0, 0xd3, 0x70, 0xd3, 0xc0, 0x30, 0x31,
		0x06, 0xd9, 0x1f, 0x71, 0xb2, 0xc5, 0x01, 0xa1, 0x82, 0x6f, 0x09, 0x27, 0xa5, 0xfc, 0x63, 0xb1,
		0x25, 0xe0, 0x18, 0x57, 0x8d, 0x9c, 0x15, 0x3c, 0xed, 0xe0, 0x64, 0x56, 0xfb, 0x13, 0x61, 0x35,
		0x86, 0x8d, 0x58, 0xad, 0x01, 0x8b, 0x9c, 0xf1, 0x64, 0xf3, 0xfa, 0x39, 0xb1, 0xb1, 0x32, 0xf4,
		0x5e, 0x74, 0x76, 0x9f, 0x85, 0x62, 0x60, 0x4e, 0x91, 0x94, 0x7a, 0xcd, 0x8e, 0xe6, 0x8c, 0xc1,
		0xfc, 0x79, 0xce, 0x2c, 0x76, 0xfc, 0x20, 0xab, 0xf5, 0xb6, 0x35, 0x87, 0x90, 0x5f, 0x86, 0x82,
		0x20, 0xef, 0x5a, 0x2e, 0xd6, 0xed, 0xb6, 0x65, 0xbc, 0x80, 0x5b, 0x63, 0x50, 0xff, 0x69, 0x6c,
		0xaa, 0xf6, 0x42, 0x70, 0xc2, 0xbc, 0x09, 0x72, 0x90, 0xab, 0x34, 0x8d, 0x8e, 0x63, 0xbb, 0xfe,
		0x08, 0xc6, 0x2f, 0x88, 0x99, 0x0a, 0x70, 0x9b, 0x14, 0x56, 0x56, 0x20, 0x4f, 0x8b, 0xe3, 0xba,
		0xe4, 0x9f, 0x71, 0xa2, 0x99, 0x1e, 0x8a, 0x6f, 0x1c, 0xba, 0xdd, 0x71, 0x34, 0x77, 0x9c, 0xfd,
		0xef, 0xcf, 0xc5, 0xc6, 0xc1, 0x21, 0x7c, 0xe3, 0xf0, 0x8f, 0x1c, 0x4c, 0xa2, 0xfd, 0x18, 0x0c,
		0x5f, 0x14, 0x1b, 0x87, 0xc0, 0x70, 0x0a, 0x91, 0x30, 0x8c, 0x41, 0xf1, 0x17, 0x82, 0x42, 0x60,
		0x08, 0xc5, 0x13, 0xbd, 0x40, 0xeb, 0xe2, 0xb6, 0xe1, 0xf9, 0xfc, 0x45, 0xc1, 0xe3, 0xa9, 0xbe,
		0xf4, 0x4a, 0x34, 0x09, 0x53, 0x43, 0x50, 0xb2, 0x13, 0xf1, 0x2b, 0x54, 0x7a, 0x52, 0x1a, 0xdd,
		0xb1, 0x2f, 0x8b, 0x9d, 0x28, 0x04, 0x23, 0x7d, 0x0b, 0x65, 0x88, 0xc4, 0xec, 0x3a, 0x39, 0x1f,
		0x8c, 0x41, 0xf7, 0x95, 0x58, 0xe7, 0xea, 0x02, 0x4b, 0x38, 0x43, 0xf9, 0x4f, 0xd7, 0xba, 0x8a,
		0x8f, 0xc6, 0xf2, 0xce, 0xbf, 0x8c, 0xe5, 0x3f, 0x7b, 0x0c, 0xc9, 0xf6, 0x90, 0xd9, 0x58, 0x3e,
		0x85, 0x46, 0xbd, 0x05, 0x54, 0xf8, 0xf9, 0x57, 0xf9, 0x78, 0xa3, 0xe9, 0x54, 0x79, 0x8b, 0x38,
		0x79, 0x34, 0xe9, 0x19, 0x4d, 0xf6, 0xae, 0x57, 0x03, 0x3f, 0x8f, 0xe4, 0x3c, 0xe5, 0x4b, 0x30,
		0x13, 0x49, 0x78, 0x46, 0x53, 0xbd, 0x9b, 0x53, 0xe5, 0xc2, 0xf9, 0x4e, 0xf9, 0x3e, 0x48, 0x92,
		0xe4, 0x65, 0x34, 0xfc, 0x17, 0x38, 0x9c, 0xaa, 0x97, 0xdf, 0x01, 0x69, 0x91, 0xb4, 0x8c, 0x86,
		0xbe, 0x87, 0x43, 0x03, 0x08, 0x81, 0x8b, 0x84, 0x65, 0x34, 0xfc, 0x17, 0x05, 0x5c, 0x40, 0x08,
		0x7c, 0x7c, 0x13, 0x7e, 0xf5, 0x97, 0x93, 0x3c, 0xe8, 0x08, 0xdb, 0x5d, 0x84, 0x69, 0x9e, 0xa9,
		0x8c, 0x46, 0xbf, 0x97, 0x37, 0x2e, 0x10, 0xe5, 0x07, 0x20, 0x35, 0xa6, 0xc1, 0x7f, 0x95, 0x43,
		0x99, 0x7e, 0xb9, 0x0a, 0xd9, 0x50, 0x76, 0x32, 0x1a, 0xfe, 0x6b, 0x1c, 0x1e, 0x46, 0x91, 0xae,
		0xf3, 0xec, 0x64, 0x34, 0xc1, 0xaf, 0x8b, 0xae, 0x73, 0x04, 0x31, 0x9b, 0x48, 0x4c, 0x46, 0xa3,
		0xdf, 0x27, 0xac, 0x2e, 0x20, 0xe5, 0x47, 0x21, 0x13, 0x04, 0x9b, 0xd1, 0xf8, 0xdf, 0xe0, 0xf8,
		0x1e, 0x86, 0x58, 0x20, 0x14, 0xec, 0x46, 0x53, 0xfc, 0xa6, 0xb0, 0x40, 0x08, 0x45, 0x96, 0x51,
		0x3c, 0x81, 0x19, 0xcd, 0xf4, 0x5b, 0x62, 0x19, 0xc5, 0xf2, 0x17, 0x32, 0x9b, 0x74, 0xcf, 0x1f,
		0x4d, 0xf1, 0xdb, 0x62, 0x36, 0xa9, 0x3e, 0xe9, 0x46, 0x3c, 0x23, 0x18, 0xcd, 0xf1, 0x3b, 0xa2,
		0x1b, 0xb1, 0x84, 0xa0, 0x5c, 0x03, 0xd4, 0x9f, 0x0d, 0x8c, 0xe6, 0x7b, 0x3f, 0xe7, 0x9b, 0xeb,
		0x4b, 0x06, 0xca, 0x4f, 0xc1, 0xe2, 0xe0, 0x4c, 0x60, 0x34, 0xeb, 0x07, 0x5e, 0x8d, 0x9d, 0xdd,
		0xc2, 0x89, 0x40, 0xb9, 0xd1, 0x0b, 0x29, 0xe1, 0x2c, 0x60, 0x34, 0xed, 0x07, 0x5f, 0x8d, 0x6e,
		0xdc, 0xe1, 0x24, 0xa0, 0x5c, 0x01, 0xe8, 0x05, 0xe0, 0xd1, 0x5c, 0x1f, 0xe2, 0x5c, 0x21, 0x10,
		0x59, 0x1a, 0x3c, 0xfe, 0x8e, 0xc6, 0x7f, 0x58, 0x2c, 0x0d, 0x8e, 0x20, 0x4b, 0x43, 0x84, 0xde,
		0xd1, 0xe8, 0x8f, 0x88, 0xa5, 0x21, 0x20, 0xc4, 0xb3, 0x43, 0xd1, 0x6d, 0x34, 0xc3, 0xc7, 0x84,
		0x67, 0x87, 0x50, 0xe5, 0x1d, 0x98, 0xeb, 0x0b, 0x88, 0xa3, 0xa9, 0x3e, 0xce, 0xa9, 0xe4, 0x78,
		0x3c, 0x0c, 0x07, 0x2f, 0x1e, 0x0c, 0x47, 0xb3, 0xfd, 0x7e, 0x2c, 0x78, 0xf1, 0x58, 0x58, 0xbe,
		0x08, 0x69, 0xab, 0x6b, 0x9a, 0x64, 0xf1, 0xa0, 0xe3, 0xdf, 0xdc, 0x2b, 0xfc, 0xdb, 0x6b, 0xdc,
		0x3a, 0x02, 0x50, 0xbe, 0x0f, 0x52, 0xb8, 0xb3, 0x8f, 0x5b, 0xa3, 0x90, 0x3f, 0x78, 0x4d, 0x6c,
		0x98, 0x44, 0xbb, 0xfc, 0x28, 0x00, 0xbb, 0x1a, 0xa1, 0x8f, 0xfd, 0x46, 0x60, 0xff, 0xfd, 0x35,
		0xfe, 0x4e, 0x4d, 0x0f, 0xd2, 0x23, 0x60, 0x6f, 0xe8, 0x1c, 0x4f, 0xf0, 0x4a, 0x94, 0x80, 0xce,
		0xc8, 0x43, 0x30, 0x7d, 0xc5, 0xb3, 0x2d, 0x5f, 0x6b, 0x8f, 0x42, 0xff, 0x07, 0x47, 0x0b, 0x7d,
		0x62, 0xb0, 0x8e, 0xed, 0x62, 0x5f, 0x6b, 0x7b, 0xa3, 0xb0, 0xff, 0xc9, 0xb1, 0x01, 0x80, 0x80,
		0x75, 0xcd, 0xf3, 0xc7, 0x19, 0xf7, 0x7f, 0x09, 0xb0, 0x00, 0x90, 0x4e, 0x93, 0xdf, 0x57, 0xf1,
		0xd1, 0x28, 0xec, 0x0f, 0x45, 0xa7, 0xb9, 0x7e, 0xf9, 0x1d, 0x90, 0x21, 0x3f, 0xd9, 0x8b, 0x72,
		0x23, 0xc0, 0xff, 0xcd, 0xc1, 0x3d, 0x04, 0x69, 0xd9, 0xf3, 0x5b, 0xbe, 0x31, 0xda, 0xd8, 0xff,
		0xc3, 0x67, 0x5a, 0xe8, 0x97, 0x2b, 0x90, 0xf5, 0xfc, 0x96, 0xf8, 0xd6, 0x65, 0x14, 0xfc, 0x7f,
		0x5f, 0x0b, 0xae, 0x2c, 0x02, 0x0c, 0x99, 0xed, 0xeb, 0x57, 0x7d, 0xc7, 0xa6, 0x8f, 0x39, 0x46,
		0x31, 0xbc, 0xca, 0x19, 0x42, 0x90, 0x55, 0x65, 0xf0, 0xf5, 0x2d, 0xac, 0xdb, 0xeb, 0x36, 0xbb,
		0xb8, 0x7d, 0xa6, 0x34, 0xfa, 0x06, 0x16, 0xfe, 0xe5, 0x41, 0x98, 0xe1, 0x6f, 0xb9, 0xf0, 0x8b,
		0xd8, 0x14, 0xbb, 0x84, 0x1d, 0xf5, 0xb9, 0x52, 0x71, 0xc4, 0xb7, 0x3f, 0xc5, 0x93, 0xdd, 0xff,
		0x96, 0x3a, 0x30, 0xb9, 0xed, 0xb5, 0x51, 0x1e, 0x12, 0x46, 0x8b, 0xbf, 0xa1, 0x95, 0x30, 0x5a,
		0x68, 0x01, 0x52, 0xec, 0x0d, 0x5e, 0x76, 0xd1, 0xcd, 0x0a, 0x48, 0x86, 0x49, 0xff, 0xc8, 0xe1,
		0x8f, 0x05, 0xc8, 0x4f, 0x74, 0x86, 0xbd, 0xce, 0xbb, 0x7a, 0xe4, 0x63, 0xf6, 0x08, 0x20, 0xa7,
		0xf6, 0x04, 0x44, 0xff, 0x2a, 0x66, 0x0f, 0xe1, 0x73, 0x2a, 0xf9, 0x59, 0x9a, 0x85, 0x19, 0xa5,
		0xe3, 0xf8, 0x47, 0x2a, 0xf6, 0x1c, 0xdb, 0xf2, 0x70, 0xc9, 0x87, 0x85, 0xba, 0xd1, 0xc2, 0xba,
		0xe6, 0xaa, 0xf8, 0xb9, 0x2e, 0xf6, 0xfc, 0x0d, 0xac, 0xb5, 0xb0, 0x8b, 0xce, 0x04, 0x1d, 0xca,
		0xad, 0xe6, 0x5e, 0xfa, 0xf6, 0xd9, 0x89, 0x7f, 0xfc, 0xf6, 0xd9, 0xe4, 0x5e, 0xd7, 0x68, 0xd1,
		0xee, 0x3d, 0x02, 0xd3, 0xde, 0x91, 0x47, 0x4c, 0xc3, 0xdf, 0x22, 0x2d, 0xf6, 0xcd, 0x64, 0xf0,
		0xc1, 0xd5, 0x6a, 0x9a, 0xc0, 0xdf, 0xf7, 0xcf, 0x67, 0x25, 0x55, 0x80, 0x4a, 0x7f, 0x9f, 0x80,
		0x59, 0x76, 0x60, 0xc1, 0xa2, 0x5d, 0x74, 0x0f, 0x48, 0x1b, 0xb4, 0xc1, 0xec, 0x85, 0x9b, 0x19,
		0xcd, 0xca, 0xa0, 0x9e, 0x31, 0xba, 0x6f, 0x7e, 0xfb, 0xac, 0xa4, 0x4a, 0x1b, 0x68, 0x11, 0xa6,
		0x6c, 0xaf, 0xd1, 0x7b, 0x9b, 0x8f, 0x97, 0xd0, 0x12, 0x80, 0xed, 0xd5, 0x4c, 0xcd, 0x3f, 0xb0,
		0xdd, 0x4e, 0xf0, 0x26, 0x5f, 0x20, 0x21, 0x76, 0xb3, 0xbd, 0x27, 0xb1, 0x4b, 0x9f, 0x11, 0xb1,
		0xbb, 0xda, 0x9e, 0x80, 0xd4, 0xea, 0x4e, 0xb7, 0x8e, 0x5d, 0x43, 0x33, 0xa9, 0xf5, 0xc8, 0x0a,
		0x12, 0x02, 0x54, 0x84, 0xb4, 0xee, 0x74, 0xab, 0xb6, 0x8b, 0x3d, 0xfa, 0xd8, 0x6b, 0x46, 0x0d,
		0xca, 0xa8, 0x00, 0xd3, 0x1d, 0xdc, 0x21, 0xdb, 0x3b, 0x7d, 0xdc, 0x95, 0x54, 0x45, 0x91, 0xa0,
		0xbc, 0xeb, 0x9a, 0x43, 0xab, 0xd2, 0xb4, 0x2a, 0x28, 0x23, 0x04, 0xc9, 0x43, 0xdb, 0xf3, 0xe9,
		0x3b, 0x69, 0x19, 0x95, 0xfe, 0x26, 0x4c, 0xa6, 0xad, 0x6b, 0xe6, 0xa6, 0xc3, 0x5f, 0xd3, 0x16,
		0x45, 0xda, 0xbe, 0x66, 0x9a, 0xab, 0x9a, 0x7e, 0x95, 0x7e, 0x90, 0x44, 0xf7, 0x15, 0x56, 0x2e,
		0x21, 0x90, 0x7b, 0x76, 0xe5, 0x53, 0xac, 0x40, 0xbe, 0x6a, 0x5b, 0xbe, 0x6b, 0x9b, 0x6f, 0xc4,
		0xd4, 0xa5, 0xbf, 0x39, 0x03, 0xb3, 0x01, 0x0f, 0xa3, 0x46, 0xf7, 0xc0, 0xa4, 0xde, 0x69, 0xf1,
		0x17, 0x51, 0x6e, 0xe5, 0x54, 0x31, 0x25, 0x51, 0xae, 0x76, 0x5a, 0x2a, 0xd1, 0xa6, 0xef, 0xc2,
		0xe2, 0xe7, 0x2c, 0x9b, 0x4e, 0xd9, 0x8c, 0xca, 0x0a, 0xe8, 0x67, 0x61, 0xde, 0xb0, 0x3c, 0x5f,
		0x33, 0xcd, 0x4a, 0x1b, 0x5b, 0xbe, 0xd8, 0x03, 0x5a, 0xb4, 0x97, 0x77, 0x0e, 0xa1, 0xde, 0xec,
		0x47, 0x6c, 0x4c, 0xa8, 0x83, 0x88, 0x50, 0x0b, 0x4e, 0x75, 0xad, 0x41, 0x2d, 0x60, 0xda, 0xc2,
		0xdd, 0x43, 0x5a, 0xd8, 0x1b, 0x84, 0xd9, 0x98, 0x50, 0x07, 0x93, 0xa1, 0x67, 0x01, 0x75, 0x9d,
		0x96, 0xe6, 0xe3, 0x48, 0x13, 0x07, 0xb4, 0x89, 0x3b, 0x86, 0x35, 0xd1, 0x07, 0xd8, 0x98, 0x50,
		0x07, 0xd0, 0xa0, 0xcb, 0x30, 0x47, 0xdf, 0x1b, 0x8e, 0x70, 0xb7, 0x29, 0xf7, 0xf2, 0x10, 0xee,
		0x7a, 0x5c, 0x7f, 0x63, 0x42, 0xed, 0x27, 0x41, 0x7b, 0x24, 0x5f, 0xb7, 0x9d, 0x08, 0xf1, 0x21,
		0x25, 0xbe, 0x7d, 0x28, 0x71, 0x54, 0x7d, 0x63, 0x42, 0xed, 0xa3, 0x40, 0x1d, 0x28, 0x84, 0x86,
		0x51, 0xb5, 0xad, 0x03, 0xa3, 0x2d, 0xe8, 0x0d, 0x4a, 0x7f, 0x7e, 0xb4, 0x4d, 0x22, 0xb0, 0x8d,
		0x09, 0x75, 0x28, 0x25, 0xd2, 0x60, 0x81, 0xd5, 0x71, 0x67, 0x16, 0x4d, 0x5d, 0xa1, 0x4d, 0xdd,
		0x75, 0x6c, 0x53, 0x51, 0xc8, 0xc6, 0x84, 0x3a, 0x90, 0x0a, 0x79, 0x50, 0x8c, 0xc8, 0xa3, 0x63,
		0xba, 0x4a, 0x1b, 0x7a, 0xfb, 0x38, 0x0d, 0xc5, 0x47, 0x75, 0x0c, 0x2d, 0x99, 0x77, 0xfc, 0x3c,
		0xd6, 0xeb, 0xf4, 0x80, 0x29, 0xda, 0x32, 0x8f, 0x9d, 0x77, 0x25, 0xae, 0x4f, 0xe6, 0xbd, 0x8f,
		0x04, 0x6d, 0xc1, 0x8c, 0xae, 0x59, 0x3a, 0x36, 0x05, 0x6b, 0x87, 0xb2, 0xde, 0x36, 0x6c, 0x25,
		0x87, 0x75, 0x37, 0x26, 0xd4, 0x28, 0x18, 0xa9, 0x30, 0x4b, 0x9a, 0x50, 0xb1, 0x17, 0xf4, 0xd2,
		0xe2, 0xdf, 0x28, 0x0d, 0xef, 0x65, 0x48, 0x7b, 0x63, 0x42, 0x8d, 0x13, 0x14, 0x3f, 0x9f, 0x82,
		0xf9, 0x01, 0xab, 0x1c, 0xbd, 0x05, 0xa6, 0x49, 0x4a, 0xee, 0x6f, 0x0e, 0x0e, 0x52, 0xa2, 0x12,
		0xdd, 0x0d, 0x73, 0x3a, 0x35, 0xa6, 0xf8, 0x5a, 0x56, 0xf3, 0x0f, 0x79, 0xac, 0xe8, 0xaf, 0x20,
		0x61, 0x63, 0xdf, 0xb0, 0x34, 0xf7, 0x88, 0xaa, 0xf1, 0xb0, 0xd1, 0x93, 0x90, 0xc0, 0xe0, 0x68,
		0xae, 0xd6, 0xc1, 0x3e, 0x76, 0xe9, 0xa7, 0x05, 0x19, 0xb5, 0x27, 0x08, 0x5e, 0x39, 0x4f, 0x85,
		0x5e, 0x39, 0xbf, 0x13, 0x64, 0xbe, 0x4f, 0xd4, 0x02, 0x20, 0x7b, 0xea, 0xde, 0x27, 0x47, 0xb7,
		0xc1, 0x0c, 0x97, 0xb1, 0x59, 0xe2, 0x5f, 0xf8, 0x44, 0x85, 0x24, 0x30, 0x5c, 0xb7, 0xdd, 0xab,
		0x2d, 0xc3, 0xe5, 0xef, 0x4a, 0x88, 0x22, 0x3a, 0x07, 0xd9, 0x43, 0xac, 0x99, 0xfe, 0x61, 0xfd,
		0x10, 0x9b, 0x26, 0x8f, 0x26, 0x61, 0x11, 0x5a, 0x87, 0x1c, 0x2b, 0xd6, 0xb0, 0x6b, 0xd8, 0x2d,
		0x1a, 0x59, 0xb2, 0x17, 0x6e, 0xea, 0xff, 0xe2, 0x8d, 0x1b, 0x85, 0x45, 0x80, 0xf7, 0x93, 0xd8,
		0x1d, 0x01, 0xa2, 0x77, 0xc0, 0x34, 0x09, 0xe4, 0x76, 0xd7, 0xa7, 0x6f, 0x3d, 0x8f, 0xc9, 0x21,
		0x30, 0xe8, 0x09, 0x98, 0xe3, 0xdd, 0x22, 0x5b, 0x11, 0xef, 0x4c, 0x6e, 0x7c, 0xa2, 0x7e, 0x34,
		0xda, 0x84, 0x19, 0x26, 0x6c, 0xf0, 0x7e, 0xcd, 0x8c, 0x4f, 0x17, 0x45, 0x92, 0x79, 0x60, 0x02,
		0x15, 0xfb, 0xae, 0x81, 0xbd, 0x42, 0x9e, 0xc6, 0xeb, 0xa8, 0x90, 0xcc, 0x83, 0xdb, 0xb5, 0xf6,
		0x3c, 0xec, 0x16, 0x66, 0xd9, 0x3c, 0xf0, 0x62, 0xf1, 0xeb, 0x12, 0x9c, 0x1a, 0x18, 0x37, 0xc6,
		0xf6, 0xda, 0x88, 0x9f, 0x25, 0xe2, 0x7e, 0xb6, 0x0c, 0xb3, 0x41, 0xf4, 0xe1, 0x9e, 0xc2, 0xdf,
		0x14, 0x89, 0x89, 0xc3, 0xd3, 0x94, 0x3c, 0xf9, 0x34, 0x15, 0xff, 0x4a, 0x02, 0xd4, 0x1f, 0x9d,
		0xfe, 0x9f, 0x46, 0x51, 0x82, 0x1c, 0xdf, 0xf3, 0xc2, 0x43, 0x88, 0xc8, 0xde, 0x68, 0xff, 0x3f,
		0x9b, 0x80, 0xb9, 0xbe, 0x08, 0x38, 0x76, 0xf7, 0x59, 0x9e, 0xb7, 0x65, 0x74, 0x0c, 0x9f, 0xee,
		0x18, 0x09, 0x35, 0x28, 0x93, 0xba, 0x0e, 0xee, 0xb0, 0xba, 0x49, 0x96, 0xcd, 0x89, 0x32, 0xa9,
		0xb3, 0xb0, 0xcf, 0xea, 0xd8, 0xcb, 0x56, 0x41, 0x19, 0x3d, 0x0b, 0x59, 0x6c, 0x5d, 0x33, 0x5c,
		0xdb, 0xea, 0x60, 0xcb, 0xe7, 0xdf, 0xd2, 0x3e, 0x34, 0x6e, 0xf0, 0x5e, 0x51, 0x7a, 0x58, 0xfa,
		0x06, 0xb2, 0x1a, 0x66, 0x2b, 0x3e, 0x02, 0x72, 0x5c, 0x41, 0x1c, 0x01, 0xd8, 0xc9, 0x82, 0xfc,
		0x24, 0xe9, 0x97, 0xf8, 0x38, 0x8b, 0x1e, 0x2d, 0xd8, 0xb1, 0x30, 0xf1, 0xa0, 0x54, 0xfc, 0x81,
		0x04, 0x72, 0x3c, 0xae, 0x8f, 0x6d, 0x2d, 0x07, 0x16, 0xe2, 0xf1, 0x3f, 0xc8, 0xcb, 0xf3, 0x17,
		0x1e, 0x1e, 0x33, 0x8d, 0xe8, 0x13, 0xd0, 0x2f, 0x27, 0x07, 0x32, 0x97, 0x1e, 0x86, 0x85, 0x41,
		0xda, 0x08, 0x41, 0xbe, 0xde, 0xd8, 0xad, 0x35, 0xf7, 0x76, 0x54, 0xa5, 0xba, 0xfb, 0xa4, 0xa2,
		0xca, 0x13, 0xec, 0xcd, 0xdd, 0xdd, 0x5a, 0x53, 0x48, 0xa4, 0xe2, 0x2f, 0x49, 0x50, 0x18, 0x96,
		0x65, 0x8c, 0x3d, 0xe8, 0xdb, 0x60, 0x86, 0x05, 0x11, 0x32, 0x2e, 0x32, 0xa1, 0xcc, 0xa6, 0x51,
		0x21, 0x89, 0x2a, 0x4c, 0x10, 0x8e, 0x2a, 0x3d, 0x49, 0x71, 0x11, 0x16, 0x06, 0x25, 0x21, 0xc5,
		0x33, 0x50, 0x1c, 0x9e, 0x33, 0x14, 0xbf, 0x24, 0xc1, 0x5c, 0x5f, 0x98, 0x8f, 0xae, 0x39, 0x29,
		0xbe, 0xe6, 0x96, 0x00, 0x7a, 0x49, 0x80, 0x78, 0x89, 0xaa, 0x27, 0x09, 0xaf, 0xb7, 0xc9, 0xd7,
		0xb1, 0xad, 0x87, 0xcc, 0x96, 0x3c, 0xc6, 0x6c, 0xc5, 0x07, 0x60, 0x26, 0x92, 0x4a, 0x8c, 0x6b,
		0xef, 0xe2, 0x37, 0x24, 0x98, 0x8d, 0x25, 0x0d, 0xe4, 0x08, 0xc8, 0xbf, 0x3e, 0x63, 0x4e, 0x2e,
		0xbe, 0x2a, 0x43, 0xfc, 0x4d, 0x32, 0x36, 0x4a, 0xf6, 0x16, 0xd9, 0x02, 0xa4, 0x9e, 0xeb, 0x62,
		0xf7, 0x88, 0x4f, 0x02, 0x2b, 0x10, 0xcd, 0x7d, 0xbb, 0x75, 0xc4, 0xcf, 0xcf, 0xf4, 0x77, 0xd8,
		0x12, 0xa9, 0x37, 0x66, 0x89, 0xa9, 0x63, 0x06, 0x54, 0xba, 0x21, 0x01, 0xf4, 0xce, 0x47, 0x68,
		0x0e, 0x66, 0x36, 0x77, 0xea, 0x8d, 0xca, 0xd6, 0x56, 0xb3, 0xb2, 0xae, 0xec, 0x34, 0xd8, 0xab,
		0xa7, 0x7b, 0x3b, 0x51, 0x21, 0x7d, 0x11, 0x7d, 0xaf, 0xb6, 0x56, 0x69, 0x28, 0x5c, 0x92, 0x40,
		0xb3, 0x90, 0xad, 0x37, 0x2a, 0x6a, 0x83, 0x0b, 0x26, 0x51, 0x1e, 0x80, 0x7a, 0x3c, 0x2b, 0x27,
		0xd1, 0x69, 0x98, 0x0f, 0x43, 0x9a, 0xd5, 0xdd, 0x9d, 0x4b, 0x9b, 0xeb, 0x72, 0x8a, 0x2c, 0x17,
		0x5e, 0x51, 0xdf, 0x5c, 0x53, 0xaa, 0x15, 0x55, 0x9e, 0x42, 0x37, 0xc1, 0xa9, 0xa8, 0x4c, 0xa8,
		0x4f, 0x93, 0x86, 0x94, 0xcb, 0x4a, 0xb5, 0x59, 0xaf, 0xaa, 0x9b, 0xb5, 0x86, 0x9c, 0x26, 0x7d,
		0xae, 0x56, 0x76, 0xaa, 0x0a, 0xef, 0x5d, 0x5d, 0xce, 0xa0, 0x19, 0xc8, 0x50, 0x1d, 0x55, 0xa9,
		0x37, 0x64, 0x58, 0xcd, 0x04, 0x9f, 0xcd, 0x95, 0x3e, 0x31, 0x07, 0x29, 0xe5, 0x1a, 0x59, 0x14,
		0xaf, 0xeb, 0xb8, 0x7f, 0x2f, 0x64, 0x30, 0x41, 0x87, 0x76, 0x96, 0x45, 0x0e, 0xa6, 0xac, 0xec,
		0x5f, 0xba, 0x67, 0xf4, 0x14, 0xd1, 0x3b, 0x01, 0x6c, 0xa7, 0xe6, 0xda, 0x6d, 0x17, 0x7b, 0xe2,
		0x44, 0xb9, 0x14, 0x81, 0xed, 0x3a, 0x38, 0xf8, 0x63, 0x2a, 0x54, 0x6b, 0x63, 0x42, 0x0d, 0x61,
		0xd0, 0x43, 0x00, 0x74, 0xc6, 0x14, 0xd7, 0xb5, 0x5d, 0x7e, 0x62, 0x3c, 0x1d, 0x61, 0xa8, 0x04,
		0xd5, 0x04, 0xda, 0x53, 0x46, 0x8f, 0x83, 0x6c, 0x7b, 0x2a, 0x66, 0x6f, 0x2a, 0xee, 0x79, 0x5a,
		0x1b, 0x8b, 0xf3, 0xe0, 0x2d, 0xd1, 0x2e, 0xc4, 0x94, 0xc8, 0x81, 0x2a, 0x0e, 0x44, 0x0d, 0x40,
		0x8e, 0x6b, 0xeb, 0x31, 0x3a, 0x76, 0x04, 0x2c, 0x45, 0xe8, 0x6a, 0xae, 0xad, 0x63, 0xaf, 0x9f,
		0x73, 0x00, 0x1e, 0x3d, 0x01, 0xa8, 0xb7, 0x07, 0x88, 0xad, 0x99, 0x9f, 0xff, 0xce, 0x46, 0xcd,
		0xdb, 0xa7, 0x46, 0x28, 0xfb, 0xc1, 0x64, 0xd4, 0xd4, 0x06, 0x1b, 0x34, 0x65, 0xa2, 0x5f, 0xe1,
		0xf1, 0x13, 0xdf, 0x2d, 0xfd, 0x66, 0x0b, 0x29, 0x91, 0x51, 0xc7, 0x81, 0x84, 0x4c, 0x1c, 0x0b,
		0x82, 0xde, 0x5d, 0x19, 0x40, 0xa6, 0xc4, 0x94, 0x08, 0x59, 0x1c, 0x58, 0xfc, 0xa8, 0x04, 0x73,
		0x7d, 0xd3, 0xdd, 0xbb, 0x93, 0x90, 0xc2, 0x77, 0x12, 0xa1, 0x55, 0x9c, 0x18, 0x91, 0x29, 0x38,
		0xc2, 0xbd, 0x26, 0x59, 0xa6, 0x20, 0xca, 0x64, 0x7b, 0x3a, 0xd0, 0x0c, 0x13, 0xb3, 0x2d, 0x31,
		0xad, 0xf2, 0x12, 0xbb, 0x29, 0xa2, 0xd7, 0xfa, 0xfc, 0xbc, 0x20, 0x8a, 0xc5, 0x7d, 0x80, 0x9e,
		0x37, 0x8d, 0x1d, 0x8a, 0x16, 0x61, 0x0a, 0xbb, 0xae, 0xe7, 0xbb, 0xe2, 0x26, 0x8c, 0x95, 0x7a,
		0x23, 0x9b, 0x0c, 0x8d, 0xac, 0xf8, 0xd5, 0x04, 0xc8, 0x71, 0x8f, 0xe3, 0x09, 0x0f, 0x2d, 0xd0,
		0xb6, 0x58, 0xc2, 0x43, 0xcb, 0x3c, 0xe1, 0x61, 0x75, 0x89, 0x20, 0xe1, 0x61, 0x75, 0x67, 0x20,
		0xe3, 0x5d, 0xd7, 0x1c, 0x56, 0xc9, 0xb2, 0xa1, 0x9e, 0x80, 0x74, 0xc0, 0xb4, 0xb5, 0xd6, 0xdb,
		0xe9, 0xf8, 0x13, 0x2a, 0x2b, 0x90, 0xee, 0x76, 0x1d, 0x7a, 0x81, 0x98, 0xa2, 0x6f, 0x8e, 0xf3,
		0x12, 0x2a, 0x43, 0xa6, 0x65, 0x78, 0x57, 0x19, 0x17, 0xfb, 0xdb, 0x29, 0xd1, 0x15, 0xbe, 0x26,
		0x6a, 0x57, 0x93, 0xc4, 0x10, 0x6a, 0x4f, 0x1d, 0xdd, 0x4f, 0x13, 0xaf, 0xba, 0xaf, 0xf9, 0x1e,
		0xff, 0xdb, 0x35, 0x0b, 0x11, 0xe8, 0x0e, 0xab, 0xe4, 0xc0, 0x40, 0x37, 0x72, 0xa1, 0x97, 0x1e,
		0x7e, 0xa1, 0x97, 0x89, 0x5c, 0xe8, 0x15, 0x0d, 0xc8, 0x04, 0x7d, 0x21, 0x81, 0xb5, 0x63, 0x77,
		0x2d, 0xbf, 0x66, 0x1b, 0x96, 0xcf, 0x03, 0x51, 0x48, 0x42, 0x4c, 0xd4, 0xf5, 0x70, 0xab, 0x4e,
		0xbf, 0xfc, 0x63, 0xf6, 0xeb, 0x09, 0x08, 0xda, 0xb7, 0x7d, 0xcd, 0x64, 0xd5, 0xcc, 0x82, 0x21,
		0x49, 0xf1, 0x39, 0x98, 0xe6, 0x7d, 0x27, 0x76, 0x33, 0x0e, 0x76, 0x7a, 0x1f, 0x36, 0xf3, 0x12,
		0x89, 0x61, 0xc6, 0xc1, 0xa6, 0xc3, 0xd3, 0x6c, 0xfa, 0x9b, 0x34, 0xba, 0x7f, 0xe4, 0x63, 0xaf,
		0x4e, 0x32, 0x13, 0x3e, 0x2f, 0x81, 0x20, 0xa8, 0x55, 0xb1, 0x7e, 0x8d, 0xe7, 0xa9, 0x3d, 0x41,
		0xf1, 0xaf, 0x25, 0x38, 0x35, 0x70, 0x0f, 0x39, 0x61, 0xfa, 0xdc, 0xf3, 0x98, 0xb0, 0x37, 0xd1,
		0x98, 0xdd, 0xb1, 0x79, 0x20, 0x4e, 0xaa, 0xbc, 0x44, 0xb2, 0x55, 0xbd, 0xd3, 0xe2, 0x17, 0xb2,
		0xf4, 0xb2, 0x30, 0x32, 0x86, 0xd4, 0xb1, 0x63, 0x98, 0x8a, 0x8f, 0xe1, 0x3d, 0x12, 0xa0, 0xfe,
		0x1d, 0x6b, 0xc8, 0x5a, 0xef, 0xad, 0xd3, 0x44, 0x64, 0x9d, 0x16, 0x21, 0xed, 0x8a, 0x4d, 0x87,
		0x3f, 0xc5, 0x11, 0xe5, 0xb1, 0xf3, 0x9d, 0x43, 0x90, 0xe3, 0x1b, 0xdd, 0x49, 0xd6, 0xf5, 0xc0,
		0x7e, 0x0d, 0x5e, 0xd7, 0xef, 0x96, 0x40, 0x8e, 0x6f, 0x83, 0x6f, 0x70, 0xc0, 0xb9, 0x93, 0x0f,
		0xb8, 0xf4, 0x05, 0x09, 0x32, 0x41, 0x28, 0x26, 0x29, 0x8c, 0xf2, 0x64, 0xa3, 0xb9, 0x5b, 0x6b,
		0xd6, 0xd4, 0xdd, 0x75, 0x55, 0xa9, 0xd7, 0xe5, 0x09, 0x92, 0x36, 0x10, 0x21, 0x4b, 0x46, 0x14,
		0x55, 0x95, 0x25, 0x54, 0x84, 0x45, 0xaa, 0x57, 0x27, 0x89, 0xc3, 0xee, 0x9e, 0x5a, 0x55, 0x9a,
		0x7b, 0xf5, 0xca, 0xba, 0x52, 0x97, 0x13, 0xe8, 0x0c, 0x14, 0x48, 0x5d, 0x4d, 0xdd, 0xad, 0xf6,
		0xd5, 0x4e, 0x8a, 0x16, 0xc2, 0x89, 0x49, 0x52, 0xd0, 0xb1, 0x16, 0x36, 0x94, 0xca, 0x56, 0x63,
		0xa3, 0x59, 0xdd, 0x50, 0xaa, 0x8f, 0xcb, 0x29, 0x01, 0x20, 0x09, 0x8a, 0x00, 0x4c, 0x91, 0x3c,
		0xa5, 0x85, 0x7d, 0xcd, 0x30, 0xbd, 0x92, 0x0b, 0x59, 0x7a, 0x63, 0xa2, 0x62, 0xfa, 0x9e, 0xdb,
		0xeb, 0x4a, 0x56, 0x06, 0xdf, 0x73, 0x17, 0x60, 0x5a, 0xe7, 0x87, 0x05, 0xf1, 0x60, 0x8f, 0x15,
		0x2f, 0xfc, 0x5d, 0x02, 0x64, 0x45, 0xf3, 0x8e, 0xa8, 0xab, 0xf0, 0xef, 0xc7, 0xd0, 0x2a, 0xcc,
		0xba, 0xfc, 0x42, 0x9f, 0xb7, 0x88, 0xc4, 0x7e, 0x18, 0x7b, 0x80, 0x52, 0x3c, 0xdd, 0x27, 0xe7,
		0xb3, 0x46, 0x39, 0xb4, 0xd6, 0xd1, 0x25, 0xdb, 0xe5, 0xb9, 0x26, 0x3a, 0x15, 0x3f, 0x8f, 0x31,
		0x8a, 0xc5, 0xc1, 0xc7, 0xb4, 0xb7, 0x49, 0xe8, 0xed, 0x90, 0x75, 0xa9, 0x2d, 0x58, 0xf6, 0x96,
		0x0b, 0x6f, 0xac, 0xc5, 0x60, 0x9b, 0x0d, 0x3f, 0x5a, 0x42, 0x8f, 0x00, 0x62, 0x10, 0x6a, 0x49,
		0x71, 0x18, 0x42, 0xc2, 0x7e, 0x3d, 0xf3, 0x0e, 0xc1, 0x3f, 0x0c, 0xf9, 0x10, 0x7e, 0xcb, 0x6e,
		0x8f, 0x8f, 0x5d, 0x96, 0x2e, 0x5c, 0x84, 0xd9, 0x86, 0xab, 0x59, 0xde, 0x01, 0x76, 0x85, 0x2d,
		0x97, 0x21, 0xe9, 0x61, 0xab, 0x85, 0x80, 0x43, 0xb6, 0xbd, 0xf6, 0x60, 0xf8, 0xea, 0x3b, 0x5f,
		0x7a, 0x79, 0x69, 0xe2, 0x9b, 0x2f, 0x2f, 0x4d, 0xfc, 0xc3, 0xcb, 0x4b, 0x13, 0xdf, 0x79, 0x79,
		0x49, 0xfa, 0xe1, 0xcb, 0x4b, 0xd2, 0x8f, 0x5e, 0x5e, 0x92, 0x5e, 0xbc, 0xb1, 0x24, 0x7d, 0xfa,
		0xc6, 0x92, 0xf4, 0xb9, 0x1b, 0x4b, 0xd2, 0x4b, 0x37, 0x96, 0xa4, 0x6f, 0xde, 0x58, 0x92, 0xbe,
		0x73, 0x63, 0x49, 0xfa, 0xfe, 0x8d, 0xa5, 0x89, 0x1f, 0xde, 0x58, 0x92, 0x7e, 0x74, 0x63, 0x69,
		0xe2, 0xc5, 0xef, 0x2e, 0x4d, 0x88, 0x3f, 0xae, 0xf7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4,
		0x50, 0x62, 0x1d, 0x02, 0x51, 0x00, 0x00,
	}
	r := bytes.NewReader(gzipped)
	gzipr, err := compress_gzip.NewReader(r)
	if err != nil {
		panic(err)
	}
	ungzipped, err := io_ioutil.ReadAll(gzipr)
	if err != nil {
		panic(err)
	}
	if err := github_com_gogo_protobuf_proto.Unmarshal(ungzipped, d); err != nil {
		panic(err)
	}
	return d
}
func (x ControlResponse_ControlCmd) String() string {
	s, ok := ControlResponse_ControlCmd_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ControlResponse_StopAgentOptions_StopAgentOptionsType) String() string {
	s, ok := ControlResponse_StopAgentOptions_StopAgentOptionsType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x Event_EventType) String() string {
	s, ok := Event_EventType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *Msg) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Msg)
	if !ok {
		that2, ok := that.(Msg)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Msg")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Msg but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Msg but is not nil && this == nil")
	}
	if this.Id != that1.Id {
		return fmt.Errorf("Id this(%v) Not Equal that(%v)", this.Id, that1.Id)
	}
	if this.Index != that1.Index {
		return fmt.Errorf("Index this(%v) Not Equal that(%v)", this.Index, that1.Index)
	}
	if this.Typ != that1.Typ {
		return fmt.Errorf("Typ this(%v) Not Equal that(%v)", this.Typ, that1.Typ)
	}
	if !bytes.Equal(this.JsonBytes, that1.JsonBytes) {
		return fmt.Errorf("JsonBytes this(%v) Not Equal that(%v)", this.JsonBytes, that1.JsonBytes)
	}
	if !bytes.Equal(this.Key, that1.Key) {
		return fmt.Errorf("Key this(%v) Not Equal that(%v)", this.Key, that1.Key)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Msg) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Msg)
	if !ok {
		that2, ok := that.(Msg)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Index != that1.Index {
		return false
	}
	if this.Typ != that1.Typ {
		return false
	}
	if !bytes.Equal(this.JsonBytes, that1.JsonBytes) {
		return false
	}
	if !bytes.Equal(this.Key, that1.Key) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *EmptyResponse) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*EmptyResponse)
	if !ok {
		that2, ok := that.(EmptyResponse)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *EmptyResponse")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *EmptyResponse but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *EmptyResponse but is not nil && this == nil")
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *EmptyResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EmptyResponse)
	if !ok {
		that2, ok := that.(EmptyResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *SidecarRequestHeader) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*SidecarRequestHeader)
	if !ok {
		that2, ok := that.(SidecarRequestHeader)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *SidecarRequestHeader")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *SidecarRequestHeader but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *SidecarRequestHeader but is not nil && this == nil")
	}
	if !this.Id.Equal(that1.Id) {
		return fmt.Errorf("Id this(%v) Not Equal that(%v)", this.Id, that1.Id)
	}
	if !this.Systime.Equal(that1.Systime) {
		return fmt.Errorf("Systime this(%v) Not Equal that(%v)", this.Systime, that1.Systime)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *SidecarRequestHeader) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*SidecarRequestHeader)
	if !ok {
		that2, ok := that.(SidecarRequestHeader)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Id.Equal(that1.Id) {
		return false
	}
	if !this.Systime.Equal(that1.Systime) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *RegisterRequest) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*RegisterRequest)
	if !ok {
		that2, ok := that.(RegisterRequest)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *RegisterRequest")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *RegisterRequest but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *RegisterRequest but is not nil && this == nil")
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return fmt.Errorf("SidecarRequestHeader this(%v) Not Equal that(%v)", this.SidecarRequestHeader, that1.SidecarRequestHeader)
	}
	if this.OsType != that1.OsType {
		return fmt.Errorf("OsType this(%v) Not Equal that(%v)", this.OsType, that1.OsType)
	}
	if this.OsPlatform != that1.OsPlatform {
		return fmt.Errorf("OsPlatform this(%v) Not Equal that(%v)", this.OsPlatform, that1.OsPlatform)
	}
	if this.OsVersion != that1.OsVersion {
		return fmt.Errorf("OsVersion this(%v) Not Equal that(%v)", this.OsVersion, that1.OsVersion)
	}
	if this.CpuSerial != that1.CpuSerial {
		return fmt.Errorf("CpuSerial this(%v) Not Equal that(%v)", this.CpuSerial, that1.CpuSerial)
	}
	if this.CpuCores != that1.CpuCores {
		return fmt.Errorf("CpuCores this(%v) Not Equal that(%v)", this.CpuCores, that1.CpuCores)
	}
	if this.MemSize != that1.MemSize {
		return fmt.Errorf("MemSize this(%v) Not Equal that(%v)", this.MemSize, that1.MemSize)
	}
	if this.SwapSize != that1.SwapSize {
		return fmt.Errorf("SwapSize this(%v) Not Equal that(%v)", this.SwapSize, that1.SwapSize)
	}
	if this.Host != that1.Host {
		return fmt.Errorf("Host this(%v) Not Equal that(%v)", this.Host, that1.Host)
	}
	if this.LocalIp != that1.LocalIp {
		return fmt.Errorf("LocalIp this(%v) Not Equal that(%v)", this.LocalIp, that1.LocalIp)
	}
	if len(this.CallBack) != len(that1.CallBack) {
		return fmt.Errorf("CallBack this(%v) Not Equal that(%v)", len(this.CallBack), len(that1.CallBack))
	}
	for i := range this.CallBack {
		if this.CallBack[i] != that1.CallBack[i] {
			return fmt.Errorf("CallBack this[%v](%v) Not Equal that[%v](%v)", i, this.CallBack[i], i, that1.CallBack[i])
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *RegisterRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RegisterRequest)
	if !ok {
		that2, ok := that.(RegisterRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return false
	}
	if this.OsType != that1.OsType {
		return false
	}
	if this.OsPlatform != that1.OsPlatform {
		return false
	}
	if this.OsVersion != that1.OsVersion {
		return false
	}
	if this.CpuSerial != that1.CpuSerial {
		return false
	}
	if this.CpuCores != that1.CpuCores {
		return false
	}
	if this.MemSize != that1.MemSize {
		return false
	}
	if this.SwapSize != that1.SwapSize {
		return false
	}
	if this.Host != that1.Host {
		return false
	}
	if this.LocalIp != that1.LocalIp {
		return false
	}
	if len(this.CallBack) != len(that1.CallBack) {
		return false
	}
	for i := range this.CallBack {
		if this.CallBack[i] != that1.CallBack[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *RegisterResponse) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*RegisterResponse)
	if !ok {
		that2, ok := that.(RegisterResponse)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *RegisterResponse")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *RegisterResponse but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *RegisterResponse but is not nil && this == nil")
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *RegisterResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RegisterResponse)
	if !ok {
		that2, ok := that.(RegisterResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlRequest) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlRequest)
	if !ok {
		that2, ok := that.(ControlRequest)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlRequest")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlRequest but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlRequest but is not nil && this == nil")
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return fmt.Errorf("SidecarRequestHeader this(%v) Not Equal that(%v)", this.SidecarRequestHeader, that1.SidecarRequestHeader)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlRequest)
	if !ok {
		that2, ok := that.(ControlRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse)
	if !ok {
		that2, ok := that.(ControlResponse)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse but is not nil && this == nil")
	}
	if this.Cmd != that1.Cmd {
		return fmt.Errorf("Cmd this(%v) Not Equal that(%v)", this.Cmd, that1.Cmd)
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if that1.Options == nil {
		if this.Options != nil {
			return fmt.Errorf("this.Options != nil && that1.Options == nil")
		}
	} else if this.Options == nil {
		return fmt.Errorf("this.Options == nil && that1.Options != nil")
	} else if err := this.Options.VerboseEqual(that1.Options); err != nil {
		return err
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_InstallAgentOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_InstallAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_InstallAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_InstallAgentOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_InstallAgentOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_InstallAgentOptions_ but is not nil && this == nil")
	}
	if !this.InstallAgentOptions.Equal(that1.InstallAgentOptions) {
		return fmt.Errorf("InstallAgentOptions this(%v) Not Equal that(%v)", this.InstallAgentOptions, that1.InstallAgentOptions)
	}
	return nil
}
func (this *ControlResponse_UninstallAgentOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UninstallAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UninstallAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UninstallAgentOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UninstallAgentOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UninstallAgentOptions_ but is not nil && this == nil")
	}
	if !this.UninstallAgentOptions.Equal(that1.UninstallAgentOptions) {
		return fmt.Errorf("UninstallAgentOptions this(%v) Not Equal that(%v)", this.UninstallAgentOptions, that1.UninstallAgentOptions)
	}
	return nil
}
func (this *ControlResponse_UpdateAgentOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateAgentOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentOptions_ but is not nil && this == nil")
	}
	if !this.UpdateAgentOptions.Equal(that1.UpdateAgentOptions) {
		return fmt.Errorf("UpdateAgentOptions this(%v) Not Equal that(%v)", this.UpdateAgentOptions, that1.UpdateAgentOptions)
	}
	return nil
}
func (this *ControlResponse_StartAgentOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_StartAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_StartAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_StartAgentOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_StartAgentOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_StartAgentOptions_ but is not nil && this == nil")
	}
	if !this.StartAgentOptions.Equal(that1.StartAgentOptions) {
		return fmt.Errorf("StartAgentOptions this(%v) Not Equal that(%v)", this.StartAgentOptions, that1.StartAgentOptions)
	}
	return nil
}
func (this *ControlResponse_StopAgentOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_StopAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_StopAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_StopAgentOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_StopAgentOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_StopAgentOptions_ but is not nil && this == nil")
	}
	if !this.StopAgentOptions.Equal(that1.StopAgentOptions) {
		return fmt.Errorf("StopAgentOptions this(%v) Not Equal that(%v)", this.StopAgentOptions, that1.StopAgentOptions)
	}
	return nil
}
func (this *ControlResponse_UpdateAgentConfigOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateAgentConfigOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentConfigOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateAgentConfigOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentConfigOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentConfigOptions_ but is not nil && this == nil")
	}
	if !this.UpdateAgentConfigOptions.Equal(that1.UpdateAgentConfigOptions) {
		return fmt.Errorf("UpdateAgentConfigOptions this(%v) Not Equal that(%v)", this.UpdateAgentConfigOptions, that1.UpdateAgentConfigOptions)
	}
	return nil
}
func (this *ControlResponse_UpdateSidecarOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateSidecarOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarOptions_ but is not nil && this == nil")
	}
	if !this.UpdateSidecarOptions.Equal(that1.UpdateSidecarOptions) {
		return fmt.Errorf("UpdateSidecarOptions this(%v) Not Equal that(%v)", this.UpdateSidecarOptions, that1.UpdateSidecarOptions)
	}
	return nil
}
func (this *ControlResponse_UpdateSidecarConfigOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarConfigOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarConfigOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateSidecarConfigOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarConfigOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarConfigOptions_ but is not nil && this == nil")
	}
	if !this.UpdateSidecarConfigOptions.Equal(that1.UpdateSidecarConfigOptions) {
		return fmt.Errorf("UpdateSidecarConfigOptions this(%v) Not Equal that(%v)", this.UpdateSidecarConfigOptions, that1.UpdateSidecarConfigOptions)
	}
	return nil
}
func (this *ControlResponse_ExecScriptOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_ExecScriptOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_ExecScriptOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_ExecScriptOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_ExecScriptOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_ExecScriptOptions_ but is not nil && this == nil")
	}
	if !this.ExecScriptOptions.Equal(that1.ExecScriptOptions) {
		return fmt.Errorf("ExecScriptOptions this(%v) Not Equal that(%v)", this.ExecScriptOptions, that1.ExecScriptOptions)
	}
	return nil
}
func (this *ControlResponse_CancelOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_CancelOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_CancelOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_CancelOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_CancelOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_CancelOptions_ but is not nil && this == nil")
	}
	if !this.CancelOptions.Equal(that1.CancelOptions) {
		return fmt.Errorf("CancelOptions this(%v) Not Equal that(%v)", this.CancelOptions, that1.CancelOptions)
	}
	return nil
}
func (this *ControlResponse_ExecRestOptions_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_ExecRestOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_ExecRestOptions_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_ExecRestOptions_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_ExecRestOptions_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_ExecRestOptions_ but is not nil && this == nil")
	}
	if !this.ExecRestOptions.Equal(that1.ExecRestOptions) {
		return fmt.Errorf("ExecRestOptions this(%v) Not Equal that(%v)", this.ExecRestOptions, that1.ExecRestOptions)
	}
	return nil
}
func (this *ControlResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse)
	if !ok {
		that2, ok := that.(ControlResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Cmd != that1.Cmd {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if that1.Options == nil {
		if this.Options != nil {
			return false
		}
	} else if this.Options == nil {
		return false
	} else if !this.Options.Equal(that1.Options) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_InstallAgentOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_InstallAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_InstallAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.InstallAgentOptions.Equal(that1.InstallAgentOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_UninstallAgentOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UninstallAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UninstallAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UninstallAgentOptions.Equal(that1.UninstallAgentOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateAgentOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UpdateAgentOptions.Equal(that1.UpdateAgentOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_StartAgentOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_StartAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_StartAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.StartAgentOptions.Equal(that1.StartAgentOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_StopAgentOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_StopAgentOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_StopAgentOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.StopAgentOptions.Equal(that1.StopAgentOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateAgentConfigOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateAgentConfigOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentConfigOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UpdateAgentConfigOptions.Equal(that1.UpdateAgentConfigOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateSidecarOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UpdateSidecarOptions.Equal(that1.UpdateSidecarOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateSidecarConfigOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarConfigOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarConfigOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UpdateSidecarConfigOptions.Equal(that1.UpdateSidecarConfigOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_ExecScriptOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_ExecScriptOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_ExecScriptOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ExecScriptOptions.Equal(that1.ExecScriptOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_CancelOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_CancelOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_CancelOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.CancelOptions.Equal(that1.CancelOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_ExecRestOptions_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_ExecRestOptions_)
	if !ok {
		that2, ok := that.(ControlResponse_ExecRestOptions_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ExecRestOptions.Equal(that1.ExecRestOptions) {
		return false
	}
	return true
}
func (this *ControlResponse_InstallAgentOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_InstallAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_InstallAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_InstallAgentOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_InstallAgentOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_InstallAgentOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.ConfigurationPath != that1.ConfigurationPath {
		return fmt.Errorf("ConfigurationPath this(%v) Not Equal that(%v)", this.ConfigurationPath, that1.ConfigurationPath)
	}
	if this.BinaryPath != that1.BinaryPath {
		return fmt.Errorf("BinaryPath this(%v) Not Equal that(%v)", this.BinaryPath, that1.BinaryPath)
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return fmt.Errorf("Parameter this(%v) Not Equal that(%v)", len(this.Parameter), len(that1.Parameter))
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return fmt.Errorf("Parameter this[%v](%v) Not Equal that[%v](%v)", i, this.Parameter[i], i, that1.Parameter[i])
		}
	}
	if this.Name != that1.Name {
		return fmt.Errorf("Name this(%v) Not Equal that(%v)", this.Name, that1.Name)
	}
	if len(this.InstallParameter) != len(that1.InstallParameter) {
		return fmt.Errorf("InstallParameter this(%v) Not Equal that(%v)", len(this.InstallParameter), len(that1.InstallParameter))
	}
	for i := range this.InstallParameter {
		if this.InstallParameter[i] != that1.InstallParameter[i] {
			return fmt.Errorf("InstallParameter this[%v](%v) Not Equal that[%v](%v)", i, this.InstallParameter[i], i, that1.InstallParameter[i])
		}
	}
	if this.InstallScript != that1.InstallScript {
		return fmt.Errorf("InstallScript this(%v) Not Equal that(%v)", this.InstallScript, that1.InstallScript)
	}
	if this.Workdir != that1.Workdir {
		return fmt.Errorf("Workdir this(%v) Not Equal that(%v)", this.Workdir, that1.Workdir)
	}
	if this.HealthShell != that1.HealthShell {
		return fmt.Errorf("HealthShell this(%v) Not Equal that(%v)", this.HealthShell, that1.HealthShell)
	}
	if this.HealthPeriod != that1.HealthPeriod {
		return fmt.Errorf("HealthPeriod this(%v) Not Equal that(%v)", this.HealthPeriod, that1.HealthPeriod)
	}
	if this.Timeout != that1.Timeout {
		return fmt.Errorf("Timeout this(%v) Not Equal that(%v)", this.Timeout, that1.Timeout)
	}
	if this.HealthStartPeriod != that1.HealthStartPeriod {
		return fmt.Errorf("HealthStartPeriod this(%v) Not Equal that(%v)", this.HealthStartPeriod, that1.HealthStartPeriod)
	}
	if this.HealthTimeout != that1.HealthTimeout {
		return fmt.Errorf("HealthTimeout this(%v) Not Equal that(%v)", this.HealthTimeout, that1.HealthTimeout)
	}
	if this.HealthRetries != that1.HealthRetries {
		return fmt.Errorf("HealthRetries this(%v) Not Equal that(%v)", this.HealthRetries, that1.HealthRetries)
	}
	if this.RunUser != that1.RunUser {
		return fmt.Errorf("RunUser this(%v) Not Equal that(%v)", this.RunUser, that1.RunUser)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_InstallAgentOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_InstallAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_InstallAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.ConfigurationPath != that1.ConfigurationPath {
		return false
	}
	if this.BinaryPath != that1.BinaryPath {
		return false
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return false
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return false
		}
	}
	if this.Name != that1.Name {
		return false
	}
	if len(this.InstallParameter) != len(that1.InstallParameter) {
		return false
	}
	for i := range this.InstallParameter {
		if this.InstallParameter[i] != that1.InstallParameter[i] {
			return false
		}
	}
	if this.InstallScript != that1.InstallScript {
		return false
	}
	if this.Workdir != that1.Workdir {
		return false
	}
	if this.HealthShell != that1.HealthShell {
		return false
	}
	if this.HealthPeriod != that1.HealthPeriod {
		return false
	}
	if this.Timeout != that1.Timeout {
		return false
	}
	if this.HealthStartPeriod != that1.HealthStartPeriod {
		return false
	}
	if this.HealthTimeout != that1.HealthTimeout {
		return false
	}
	if this.HealthRetries != that1.HealthRetries {
		return false
	}
	if this.RunUser != that1.RunUser {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_UninstallAgentOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UninstallAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UninstallAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UninstallAgentOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UninstallAgentOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UninstallAgentOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return fmt.Errorf("Parameter this(%v) Not Equal that(%v)", len(this.Parameter), len(that1.Parameter))
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return fmt.Errorf("Parameter this[%v](%v) Not Equal that[%v](%v)", i, this.Parameter[i], i, that1.Parameter[i])
		}
	}
	if this.UninstallScript != that1.UninstallScript {
		return fmt.Errorf("UninstallScript this(%v) Not Equal that(%v)", this.UninstallScript, that1.UninstallScript)
	}
	if this.Timeout != that1.Timeout {
		return fmt.Errorf("Timeout this(%v) Not Equal that(%v)", this.Timeout, that1.Timeout)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_UninstallAgentOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UninstallAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UninstallAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return false
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return false
		}
	}
	if this.UninstallScript != that1.UninstallScript {
		return false
	}
	if this.Timeout != that1.Timeout {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateAgentOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateAgentOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return fmt.Errorf("Parameter this(%v) Not Equal that(%v)", len(this.Parameter), len(that1.Parameter))
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return fmt.Errorf("Parameter this[%v](%v) Not Equal that[%v](%v)", i, this.Parameter[i], i, that1.Parameter[i])
		}
	}
	if this.UpdateScript != that1.UpdateScript {
		return fmt.Errorf("UpdateScript this(%v) Not Equal that(%v)", this.UpdateScript, that1.UpdateScript)
	}
	if this.Timeout != that1.Timeout {
		return fmt.Errorf("Timeout this(%v) Not Equal that(%v)", this.Timeout, that1.Timeout)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_UpdateAgentOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return false
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return false
		}
	}
	if this.UpdateScript != that1.UpdateScript {
		return false
	}
	if this.Timeout != that1.Timeout {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_StartAgentOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_StartAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_StartAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_StartAgentOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_StartAgentOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_StartAgentOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.CpuLimit != that1.CpuLimit {
		return fmt.Errorf("CpuLimit this(%v) Not Equal that(%v)", this.CpuLimit, that1.CpuLimit)
	}
	if this.MemLimit != that1.MemLimit {
		return fmt.Errorf("MemLimit this(%v) Not Equal that(%v)", this.MemLimit, that1.MemLimit)
	}
	if this.NetLimit != that1.NetLimit {
		return fmt.Errorf("NetLimit this(%v) Not Equal that(%v)", this.NetLimit, that1.NetLimit)
	}
	if len(this.Environment) != len(that1.Environment) {
		return fmt.Errorf("Environment this(%v) Not Equal that(%v)", len(this.Environment), len(that1.Environment))
	}
	for i := range this.Environment {
		if this.Environment[i] != that1.Environment[i] {
			return fmt.Errorf("Environment this[%v](%v) Not Equal that[%v](%v)", i, this.Environment[i], i, that1.Environment[i])
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_StartAgentOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_StartAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_StartAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.CpuLimit != that1.CpuLimit {
		return false
	}
	if this.MemLimit != that1.MemLimit {
		return false
	}
	if this.NetLimit != that1.NetLimit {
		return false
	}
	if len(this.Environment) != len(that1.Environment) {
		return false
	}
	for i := range this.Environment {
		if this.Environment[i] != that1.Environment[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_StopAgentOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_StopAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_StopAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_StopAgentOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_StopAgentOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_StopAgentOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.StopAgentOptionsType != that1.StopAgentOptionsType {
		return fmt.Errorf("StopAgentOptionsType this(%v) Not Equal that(%v)", this.StopAgentOptionsType, that1.StopAgentOptionsType)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_StopAgentOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_StopAgentOptions)
	if !ok {
		that2, ok := that.(ControlResponse_StopAgentOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.StopAgentOptionsType != that1.StopAgentOptionsType {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateAgentConfigOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateAgentConfigOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentConfigOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateAgentConfigOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentConfigOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateAgentConfigOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.ConfigContent != that1.ConfigContent {
		return fmt.Errorf("ConfigContent this(%v) Not Equal that(%v)", this.ConfigContent, that1.ConfigContent)
	}
	if this.ConfigPath != that1.ConfigPath {
		return fmt.Errorf("ConfigPath this(%v) Not Equal that(%v)", this.ConfigPath, that1.ConfigPath)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_UpdateAgentConfigOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateAgentConfigOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateAgentConfigOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.ConfigContent != that1.ConfigContent {
		return false
	}
	if this.ConfigPath != that1.ConfigPath {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateSidecarOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateSidecarOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarOptions but is not nil && this == nil")
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_UpdateSidecarOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_UpdateSidecarConfigOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarConfigOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarConfigOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_UpdateSidecarConfigOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarConfigOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_UpdateSidecarConfigOptions but is not nil && this == nil")
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_UpdateSidecarConfigOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_UpdateSidecarConfigOptions)
	if !ok {
		that2, ok := that.(ControlResponse_UpdateSidecarConfigOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_ExecScriptOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_ExecScriptOptions)
	if !ok {
		that2, ok := that.(ControlResponse_ExecScriptOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_ExecScriptOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_ExecScriptOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_ExecScriptOptions but is not nil && this == nil")
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return fmt.Errorf("Parameter this(%v) Not Equal that(%v)", len(this.Parameter), len(that1.Parameter))
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return fmt.Errorf("Parameter this[%v](%v) Not Equal that[%v](%v)", i, this.Parameter[i], i, that1.Parameter[i])
		}
	}
	if this.ExecScript != that1.ExecScript {
		return fmt.Errorf("ExecScript this(%v) Not Equal that(%v)", this.ExecScript, that1.ExecScript)
	}
	if this.Timeout != that1.Timeout {
		return fmt.Errorf("Timeout this(%v) Not Equal that(%v)", this.Timeout, that1.Timeout)
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_ExecScriptOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_ExecScriptOptions)
	if !ok {
		that2, ok := that.(ControlResponse_ExecScriptOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Parameter) != len(that1.Parameter) {
		return false
	}
	for i := range this.Parameter {
		if this.Parameter[i] != that1.Parameter[i] {
			return false
		}
	}
	if this.ExecScript != that1.ExecScript {
		return false
	}
	if this.Timeout != that1.Timeout {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_CancelOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_CancelOptions)
	if !ok {
		that2, ok := that.(ControlResponse_CancelOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_CancelOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_CancelOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_CancelOptions but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_CancelOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_CancelOptions)
	if !ok {
		that2, ok := that.(ControlResponse_CancelOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ControlResponse_ExecRestOptions) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ControlResponse_ExecRestOptions)
	if !ok {
		that2, ok := that.(ControlResponse_ExecRestOptions)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ControlResponse_ExecRestOptions")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ControlResponse_ExecRestOptions but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ControlResponse_ExecRestOptions but is not nil && this == nil")
	}
	if this.Method != that1.Method {
		return fmt.Errorf("Method this(%v) Not Equal that(%v)", this.Method, that1.Method)
	}
	if this.Path != that1.Path {
		return fmt.Errorf("Path this(%v) Not Equal that(%v)", this.Path, that1.Path)
	}
	if this.Query != that1.Query {
		return fmt.Errorf("Query this(%v) Not Equal that(%v)", this.Query, that1.Query)
	}
	if !bytes.Equal(this.Body, that1.Body) {
		return fmt.Errorf("Body this(%v) Not Equal that(%v)", this.Body, that1.Body)
	}
	if this.Timeout != that1.Timeout {
		return fmt.Errorf("Timeout this(%v) Not Equal that(%v)", this.Timeout, that1.Timeout)
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ControlResponse_ExecRestOptions) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ControlResponse_ExecRestOptions)
	if !ok {
		that2, ok := that.(ControlResponse_ExecRestOptions)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	if this.Path != that1.Path {
		return false
	}
	if this.Query != that1.Query {
		return false
	}
	if !bytes.Equal(this.Body, that1.Body) {
		return false
	}
	if this.Timeout != that1.Timeout {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event)
	if !ok {
		that2, ok := that.(Event)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event but is not nil && this == nil")
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return fmt.Errorf("SidecarRequestHeader this(%v) Not Equal that(%v)", this.SidecarRequestHeader, that1.SidecarRequestHeader)
	}
	if this.EventType != that1.EventType {
		return fmt.Errorf("EventType this(%v) Not Equal that(%v)", this.EventType, that1.EventType)
	}
	if that1.Details == nil {
		if this.Details != nil {
			return fmt.Errorf("this.Details != nil && that1.Details == nil")
		}
	} else if this.Details == nil {
		return fmt.Errorf("this.Details == nil && that1.Details != nil")
	} else if err := this.Details.VerboseEqual(that1.Details); err != nil {
		return err
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_OpProgress) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_OpProgress)
	if !ok {
		that2, ok := that.(Event_OpProgress)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_OpProgress")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_OpProgress but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_OpProgress but is not nil && this == nil")
	}
	if !this.OpProgress.Equal(that1.OpProgress) {
		return fmt.Errorf("OpProgress this(%v) Not Equal that(%v)", this.OpProgress, that1.OpProgress)
	}
	return nil
}
func (this *Event_AgentError_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_AgentError_)
	if !ok {
		that2, ok := that.(Event_AgentError_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_AgentError_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_AgentError_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_AgentError_ but is not nil && this == nil")
	}
	if !this.AgentError.Equal(that1.AgentError) {
		return fmt.Errorf("AgentError this(%v) Not Equal that(%v)", this.AgentError, that1.AgentError)
	}
	return nil
}
func (this *Event_OsResourceUsages_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_OsResourceUsages_)
	if !ok {
		that2, ok := that.(Event_OsResourceUsages_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_OsResourceUsages_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_OsResourceUsages_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_OsResourceUsages_ but is not nil && this == nil")
	}
	if !this.OsResourceUsages.Equal(that1.OsResourceUsages) {
		return fmt.Errorf("OsResourceUsages this(%v) Not Equal that(%v)", this.OsResourceUsages, that1.OsResourceUsages)
	}
	return nil
}
func (this *Event_ProcResourceUsages) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ProcResourceUsages)
	if !ok {
		that2, ok := that.(Event_ProcResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ProcResourceUsages")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ProcResourceUsages but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ProcResourceUsages but is not nil && this == nil")
	}
	if !this.ProcResourceUsages.Equal(that1.ProcResourceUsages) {
		return fmt.Errorf("ProcResourceUsages this(%v) Not Equal that(%v)", this.ProcResourceUsages, that1.ProcResourceUsages)
	}
	return nil
}
func (this *Event_ExecScriptResponse_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ExecScriptResponse_)
	if !ok {
		that2, ok := that.(Event_ExecScriptResponse_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ExecScriptResponse_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ExecScriptResponse_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ExecScriptResponse_ but is not nil && this == nil")
	}
	if !this.ExecScriptResponse.Equal(that1.ExecScriptResponse) {
		return fmt.Errorf("ExecScriptResponse this(%v) Not Equal that(%v)", this.ExecScriptResponse, that1.ExecScriptResponse)
	}
	return nil
}
func (this *Event_AgentHealthCheck_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_AgentHealthCheck_)
	if !ok {
		that2, ok := that.(Event_AgentHealthCheck_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_AgentHealthCheck_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_AgentHealthCheck_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_AgentHealthCheck_ but is not nil && this == nil")
	}
	if !this.AgentHealthCheck.Equal(that1.AgentHealthCheck) {
		return fmt.Errorf("AgentHealthCheck this(%v) Not Equal that(%v)", this.AgentHealthCheck, that1.AgentHealthCheck)
	}
	return nil
}
func (this *Event_ExecRestResponse_) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ExecRestResponse_)
	if !ok {
		that2, ok := that.(Event_ExecRestResponse_)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ExecRestResponse_")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ExecRestResponse_ but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ExecRestResponse_ but is not nil && this == nil")
	}
	if !this.ExecRestResponse.Equal(that1.ExecRestResponse) {
		return fmt.Errorf("ExecRestResponse this(%v) Not Equal that(%v)", this.ExecRestResponse, that1.ExecRestResponse)
	}
	return nil
}
func (this *Event) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event)
	if !ok {
		that2, ok := that.(Event)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return false
	}
	if this.EventType != that1.EventType {
		return false
	}
	if that1.Details == nil {
		if this.Details != nil {
			return false
		}
	} else if this.Details == nil {
		return false
	} else if !this.Details.Equal(that1.Details) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_OpProgress) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_OpProgress)
	if !ok {
		that2, ok := that.(Event_OpProgress)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OpProgress.Equal(that1.OpProgress) {
		return false
	}
	return true
}
func (this *Event_AgentError_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_AgentError_)
	if !ok {
		that2, ok := that.(Event_AgentError_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentError.Equal(that1.AgentError) {
		return false
	}
	return true
}
func (this *Event_OsResourceUsages_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_OsResourceUsages_)
	if !ok {
		that2, ok := that.(Event_OsResourceUsages_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.OsResourceUsages.Equal(that1.OsResourceUsages) {
		return false
	}
	return true
}
func (this *Event_ProcResourceUsages) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ProcResourceUsages)
	if !ok {
		that2, ok := that.(Event_ProcResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ProcResourceUsages.Equal(that1.ProcResourceUsages) {
		return false
	}
	return true
}
func (this *Event_ExecScriptResponse_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ExecScriptResponse_)
	if !ok {
		that2, ok := that.(Event_ExecScriptResponse_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ExecScriptResponse.Equal(that1.ExecScriptResponse) {
		return false
	}
	return true
}
func (this *Event_AgentHealthCheck_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_AgentHealthCheck_)
	if !ok {
		that2, ok := that.(Event_AgentHealthCheck_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentHealthCheck.Equal(that1.AgentHealthCheck) {
		return false
	}
	return true
}
func (this *Event_ExecRestResponse_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ExecRestResponse_)
	if !ok {
		that2, ok := that.(Event_ExecRestResponse_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ExecRestResponse.Equal(that1.ExecRestResponse) {
		return false
	}
	return true
}
func (this *Event_OperationProgress) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_OperationProgress)
	if !ok {
		that2, ok := that.(Event_OperationProgress)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_OperationProgress")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_OperationProgress but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_OperationProgress but is not nil && this == nil")
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.Progress != that1.Progress {
		return fmt.Errorf("Progress this(%v) Not Equal that(%v)", this.Progress, that1.Progress)
	}
	if this.Failed != that1.Failed {
		return fmt.Errorf("Failed this(%v) Not Equal that(%v)", this.Failed, that1.Failed)
	}
	if this.Message != that1.Message {
		return fmt.Errorf("Message this(%v) Not Equal that(%v)", this.Message, that1.Message)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_OperationProgress) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_OperationProgress)
	if !ok {
		that2, ok := that.(Event_OperationProgress)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.Progress != that1.Progress {
		return false
	}
	if this.Failed != that1.Failed {
		return false
	}
	if this.Message != that1.Message {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_AgentError) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_AgentError)
	if !ok {
		that2, ok := that.(Event_AgentError)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_AgentError")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_AgentError but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_AgentError but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.Errstr != that1.Errstr {
		return fmt.Errorf("Errstr this(%v) Not Equal that(%v)", this.Errstr, that1.Errstr)
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_AgentError) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_AgentError)
	if !ok {
		that2, ok := that.(Event_AgentError)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.Errstr != that1.Errstr {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_OsResourceUsages) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_OsResourceUsages)
	if !ok {
		that2, ok := that.(Event_OsResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_OsResourceUsages")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_OsResourceUsages but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_OsResourceUsages but is not nil && this == nil")
	}
	if this.CpuUsage != that1.CpuUsage {
		return fmt.Errorf("CpuUsage this(%v) Not Equal that(%v)", this.CpuUsage, that1.CpuUsage)
	}
	if this.MemUsage != that1.MemUsage {
		return fmt.Errorf("MemUsage this(%v) Not Equal that(%v)", this.MemUsage, that1.MemUsage)
	}
	if this.SwapUsage != that1.SwapUsage {
		return fmt.Errorf("SwapUsage this(%v) Not Equal that(%v)", this.SwapUsage, that1.SwapUsage)
	}
	if this.Load1 != that1.Load1 {
		return fmt.Errorf("Load1 this(%v) Not Equal that(%v)", this.Load1, that1.Load1)
	}
	if this.Uptime != that1.Uptime {
		return fmt.Errorf("Uptime this(%v) Not Equal that(%v)", this.Uptime, that1.Uptime)
	}
	if len(this.DiskUsage) != len(that1.DiskUsage) {
		return fmt.Errorf("DiskUsage this(%v) Not Equal that(%v)", len(this.DiskUsage), len(that1.DiskUsage))
	}
	for i := range this.DiskUsage {
		if !this.DiskUsage[i].Equal(&that1.DiskUsage[i]) {
			return fmt.Errorf("DiskUsage this[%v](%v) Not Equal that[%v](%v)", i, this.DiskUsage[i], i, that1.DiskUsage[i])
		}
	}
	if len(this.NetStats) != len(that1.NetStats) {
		return fmt.Errorf("NetStats this(%v) Not Equal that(%v)", len(this.NetStats), len(that1.NetStats))
	}
	for i := range this.NetStats {
		if !this.NetStats[i].Equal(&that1.NetStats[i]) {
			return fmt.Errorf("NetStats this[%v](%v) Not Equal that[%v](%v)", i, this.NetStats[i], i, that1.NetStats[i])
		}
	}
	if this.CpuCores != that1.CpuCores {
		return fmt.Errorf("CpuCores this(%v) Not Equal that(%v)", this.CpuCores, that1.CpuCores)
	}
	if this.MemSize != that1.MemSize {
		return fmt.Errorf("MemSize this(%v) Not Equal that(%v)", this.MemSize, that1.MemSize)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_OsResourceUsages) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_OsResourceUsages)
	if !ok {
		that2, ok := that.(Event_OsResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.CpuUsage != that1.CpuUsage {
		return false
	}
	if this.MemUsage != that1.MemUsage {
		return false
	}
	if this.SwapUsage != that1.SwapUsage {
		return false
	}
	if this.Load1 != that1.Load1 {
		return false
	}
	if this.Uptime != that1.Uptime {
		return false
	}
	if len(this.DiskUsage) != len(that1.DiskUsage) {
		return false
	}
	for i := range this.DiskUsage {
		if !this.DiskUsage[i].Equal(&that1.DiskUsage[i]) {
			return false
		}
	}
	if len(this.NetStats) != len(that1.NetStats) {
		return false
	}
	for i := range this.NetStats {
		if !this.NetStats[i].Equal(&that1.NetStats[i]) {
			return false
		}
	}
	if this.CpuCores != that1.CpuCores {
		return false
	}
	if this.MemSize != that1.MemSize {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_DiskUsage) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_DiskUsage)
	if !ok {
		that2, ok := that.(Event_DiskUsage)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_DiskUsage")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_DiskUsage but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_DiskUsage but is not nil && this == nil")
	}
	if this.MountPoint != that1.MountPoint {
		return fmt.Errorf("MountPoint this(%v) Not Equal that(%v)", this.MountPoint, that1.MountPoint)
	}
	if this.UsedSpace != that1.UsedSpace {
		return fmt.Errorf("UsedSpace this(%v) Not Equal that(%v)", this.UsedSpace, that1.UsedSpace)
	}
	if this.TotalSpace != that1.TotalSpace {
		return fmt.Errorf("TotalSpace this(%v) Not Equal that(%v)", this.TotalSpace, that1.TotalSpace)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_DiskUsage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_DiskUsage)
	if !ok {
		that2, ok := that.(Event_DiskUsage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MountPoint != that1.MountPoint {
		return false
	}
	if this.UsedSpace != that1.UsedSpace {
		return false
	}
	if this.TotalSpace != that1.TotalSpace {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_NetStat) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_NetStat)
	if !ok {
		that2, ok := that.(Event_NetStat)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_NetStat")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_NetStat but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_NetStat but is not nil && this == nil")
	}
	if this.IfName != that1.IfName {
		return fmt.Errorf("IfName this(%v) Not Equal that(%v)", this.IfName, that1.IfName)
	}
	if len(this.IfIp) != len(that1.IfIp) {
		return fmt.Errorf("IfIp this(%v) Not Equal that(%v)", len(this.IfIp), len(that1.IfIp))
	}
	for i := range this.IfIp {
		if this.IfIp[i] != that1.IfIp[i] {
			return fmt.Errorf("IfIp this[%v](%v) Not Equal that[%v](%v)", i, this.IfIp[i], i, that1.IfIp[i])
		}
	}
	if this.BytesSent != that1.BytesSent {
		return fmt.Errorf("BytesSent this(%v) Not Equal that(%v)", this.BytesSent, that1.BytesSent)
	}
	if this.BytesRecv != that1.BytesRecv {
		return fmt.Errorf("BytesRecv this(%v) Not Equal that(%v)", this.BytesRecv, that1.BytesRecv)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_NetStat) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_NetStat)
	if !ok {
		that2, ok := that.(Event_NetStat)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.IfName != that1.IfName {
		return false
	}
	if len(this.IfIp) != len(that1.IfIp) {
		return false
	}
	for i := range this.IfIp {
		if this.IfIp[i] != that1.IfIp[i] {
			return false
		}
	}
	if this.BytesSent != that1.BytesSent {
		return false
	}
	if this.BytesRecv != that1.BytesRecv {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_ProcessResourceUsages) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ProcessResourceUsages)
	if !ok {
		that2, ok := that.(Event_ProcessResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ProcessResourceUsages")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ProcessResourceUsages but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ProcessResourceUsages but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.CpuUsage != that1.CpuUsage {
		return fmt.Errorf("CpuUsage this(%v) Not Equal that(%v)", this.CpuUsage, that1.CpuUsage)
	}
	if this.Memory != that1.Memory {
		return fmt.Errorf("Memory this(%v) Not Equal that(%v)", this.Memory, that1.Memory)
	}
	if this.Cmd != that1.Cmd {
		return fmt.Errorf("Cmd this(%v) Not Equal that(%v)", this.Cmd, that1.Cmd)
	}
	if this.BytesSent != that1.BytesSent {
		return fmt.Errorf("BytesSent this(%v) Not Equal that(%v)", this.BytesSent, that1.BytesSent)
	}
	if this.BytesRecv != that1.BytesRecv {
		return fmt.Errorf("BytesRecv this(%v) Not Equal that(%v)", this.BytesRecv, that1.BytesRecv)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_ProcessResourceUsages) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ProcessResourceUsages)
	if !ok {
		that2, ok := that.(Event_ProcessResourceUsages)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.CpuUsage != that1.CpuUsage {
		return false
	}
	if this.Memory != that1.Memory {
		return false
	}
	if this.Cmd != that1.Cmd {
		return false
	}
	if this.BytesSent != that1.BytesSent {
		return false
	}
	if this.BytesRecv != that1.BytesRecv {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_ExecScriptResponse) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ExecScriptResponse)
	if !ok {
		that2, ok := that.(Event_ExecScriptResponse)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ExecScriptResponse")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ExecScriptResponse but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ExecScriptResponse but is not nil && this == nil")
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if this.Failed != that1.Failed {
		return fmt.Errorf("Failed this(%v) Not Equal that(%v)", this.Failed, that1.Failed)
	}
	if this.Response != that1.Response {
		return fmt.Errorf("Response this(%v) Not Equal that(%v)", this.Response, that1.Response)
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_ExecScriptResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ExecScriptResponse)
	if !ok {
		that2, ok := that.(Event_ExecScriptResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if this.Failed != that1.Failed {
		return false
	}
	if this.Response != that1.Response {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_AgentHealthCheck) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_AgentHealthCheck)
	if !ok {
		that2, ok := that.(Event_AgentHealthCheck)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_AgentHealthCheck")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_AgentHealthCheck but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_AgentHealthCheck but is not nil && this == nil")
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if this.Failed != that1.Failed {
		return fmt.Errorf("Failed this(%v) Not Equal that(%v)", this.Failed, that1.Failed)
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_AgentHealthCheck) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_AgentHealthCheck)
	if !ok {
		that2, ok := that.(Event_AgentHealthCheck)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if this.Failed != that1.Failed {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Event_ExecRestResponse) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*Event_ExecRestResponse)
	if !ok {
		that2, ok := that.(Event_ExecRestResponse)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *Event_ExecRestResponse")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *Event_ExecRestResponse but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *Event_ExecRestResponse but is not nil && this == nil")
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if this.Failed != that1.Failed {
		return fmt.Errorf("Failed this(%v) Not Equal that(%v)", this.Failed, that1.Failed)
	}
	if !bytes.Equal(this.Response, that1.Response) {
		return fmt.Errorf("Response this(%v) Not Equal that(%v)", this.Response, that1.Response)
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return fmt.Errorf("AgentId this(%v) Not Equal that(%v)", this.AgentId, that1.AgentId)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *Event_ExecRestResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Event_ExecRestResponse)
	if !ok {
		that2, ok := that.(Event_ExecRestResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if this.Failed != that1.Failed {
		return false
	}
	if !bytes.Equal(this.Response, that1.Response) {
		return false
	}
	if !this.AgentId.Equal(that1.AgentId) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ShellReport) VerboseEqual(that interface{}) error {
	if that == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that == nil && this != nil")
	}

	that1, ok := that.(*ShellReport)
	if !ok {
		that2, ok := that.(ShellReport)
		if ok {
			that1 = &that2
		} else {
			return fmt.Errorf("that is not of type *ShellReport")
		}
	}
	if that1 == nil {
		if this == nil {
			return nil
		}
		return fmt.Errorf("that is type *ShellReport but is nil && this != nil")
	} else if this == nil {
		return fmt.Errorf("that is type *ShellReport but is not nil && this == nil")
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return fmt.Errorf("SidecarRequestHeader this(%v) Not Equal that(%v)", this.SidecarRequestHeader, that1.SidecarRequestHeader)
	}
	if this.Seqno != that1.Seqno {
		return fmt.Errorf("Seqno this(%v) Not Equal that(%v)", this.Seqno, that1.Seqno)
	}
	if this.Content != that1.Content {
		return fmt.Errorf("Content this(%v) Not Equal that(%v)", this.Content, that1.Content)
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return fmt.Errorf("XXX_unrecognized this(%v) Not Equal that(%v)", this.XXX_unrecognized, that1.XXX_unrecognized)
	}
	return nil
}
func (this *ShellReport) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ShellReport)
	if !ok {
		that2, ok := that.(ShellReport)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.SidecarRequestHeader.Equal(&that1.SidecarRequestHeader) {
		return false
	}
	if this.Seqno != that1.Seqno {
		return false
	}
	if this.Content != that1.Content {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Msg) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&proto.Msg{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Index: "+fmt.Sprintf("%#v", this.Index)+",\n")
	s = append(s, "Typ: "+fmt.Sprintf("%#v", this.Typ)+",\n")
	s = append(s, "JsonBytes: "+fmt.Sprintf("%#v", this.JsonBytes)+",\n")
	s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *EmptyResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.EmptyResponse{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *SidecarRequestHeader) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.SidecarRequestHeader{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Systime: "+fmt.Sprintf("%#v", this.Systime)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RegisterRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&proto.RegisterRequest{")
	s = append(s, "SidecarRequestHeader: "+strings.Replace(this.SidecarRequestHeader.GoString(), `&`, ``, 1)+",\n")
	s = append(s, "OsType: "+fmt.Sprintf("%#v", this.OsType)+",\n")
	s = append(s, "OsPlatform: "+fmt.Sprintf("%#v", this.OsPlatform)+",\n")
	s = append(s, "OsVersion: "+fmt.Sprintf("%#v", this.OsVersion)+",\n")
	s = append(s, "CpuSerial: "+fmt.Sprintf("%#v", this.CpuSerial)+",\n")
	s = append(s, "CpuCores: "+fmt.Sprintf("%#v", this.CpuCores)+",\n")
	s = append(s, "MemSize: "+fmt.Sprintf("%#v", this.MemSize)+",\n")
	s = append(s, "SwapSize: "+fmt.Sprintf("%#v", this.SwapSize)+",\n")
	s = append(s, "Host: "+fmt.Sprintf("%#v", this.Host)+",\n")
	s = append(s, "LocalIp: "+fmt.Sprintf("%#v", this.LocalIp)+",\n")
	s = append(s, "CallBack: "+fmt.Sprintf("%#v", this.CallBack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RegisterResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.RegisterResponse{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.ControlRequest{")
	s = append(s, "SidecarRequestHeader: "+strings.Replace(this.SidecarRequestHeader.GoString(), `&`, ``, 1)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&proto.ControlResponse{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	if this.Options != nil {
		s = append(s, "Options: "+fmt.Sprintf("%#v", this.Options)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_InstallAgentOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_InstallAgentOptions_{` +
		`InstallAgentOptions:` + fmt.Sprintf("%#v", this.InstallAgentOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_UninstallAgentOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_UninstallAgentOptions_{` +
		`UninstallAgentOptions:` + fmt.Sprintf("%#v", this.UninstallAgentOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_UpdateAgentOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_UpdateAgentOptions_{` +
		`UpdateAgentOptions:` + fmt.Sprintf("%#v", this.UpdateAgentOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_StartAgentOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_StartAgentOptions_{` +
		`StartAgentOptions:` + fmt.Sprintf("%#v", this.StartAgentOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_StopAgentOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_StopAgentOptions_{` +
		`StopAgentOptions:` + fmt.Sprintf("%#v", this.StopAgentOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_UpdateAgentConfigOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_UpdateAgentConfigOptions_{` +
		`UpdateAgentConfigOptions:` + fmt.Sprintf("%#v", this.UpdateAgentConfigOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_UpdateSidecarOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_UpdateSidecarOptions_{` +
		`UpdateSidecarOptions:` + fmt.Sprintf("%#v", this.UpdateSidecarOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_UpdateSidecarConfigOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_UpdateSidecarConfigOptions_{` +
		`UpdateSidecarConfigOptions:` + fmt.Sprintf("%#v", this.UpdateSidecarConfigOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_ExecScriptOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_ExecScriptOptions_{` +
		`ExecScriptOptions:` + fmt.Sprintf("%#v", this.ExecScriptOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_CancelOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_CancelOptions_{` +
		`CancelOptions:` + fmt.Sprintf("%#v", this.CancelOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_ExecRestOptions_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.ControlResponse_ExecRestOptions_{` +
		`ExecRestOptions:` + fmt.Sprintf("%#v", this.ExecRestOptions) + `}`}, ", ")
	return s
}
func (this *ControlResponse_InstallAgentOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 19)
	s = append(s, "&proto.ControlResponse_InstallAgentOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "ConfigurationPath: "+fmt.Sprintf("%#v", this.ConfigurationPath)+",\n")
	s = append(s, "BinaryPath: "+fmt.Sprintf("%#v", this.BinaryPath)+",\n")
	s = append(s, "Parameter: "+fmt.Sprintf("%#v", this.Parameter)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "InstallParameter: "+fmt.Sprintf("%#v", this.InstallParameter)+",\n")
	s = append(s, "InstallScript: "+fmt.Sprintf("%#v", this.InstallScript)+",\n")
	s = append(s, "Workdir: "+fmt.Sprintf("%#v", this.Workdir)+",\n")
	s = append(s, "HealthShell: "+fmt.Sprintf("%#v", this.HealthShell)+",\n")
	s = append(s, "HealthPeriod: "+fmt.Sprintf("%#v", this.HealthPeriod)+",\n")
	s = append(s, "Timeout: "+fmt.Sprintf("%#v", this.Timeout)+",\n")
	s = append(s, "HealthStartPeriod: "+fmt.Sprintf("%#v", this.HealthStartPeriod)+",\n")
	s = append(s, "HealthTimeout: "+fmt.Sprintf("%#v", this.HealthTimeout)+",\n")
	s = append(s, "HealthRetries: "+fmt.Sprintf("%#v", this.HealthRetries)+",\n")
	s = append(s, "RunUser: "+fmt.Sprintf("%#v", this.RunUser)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_UninstallAgentOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.ControlResponse_UninstallAgentOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "Parameter: "+fmt.Sprintf("%#v", this.Parameter)+",\n")
	s = append(s, "UninstallScript: "+fmt.Sprintf("%#v", this.UninstallScript)+",\n")
	s = append(s, "Timeout: "+fmt.Sprintf("%#v", this.Timeout)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_UpdateAgentOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.ControlResponse_UpdateAgentOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "Parameter: "+fmt.Sprintf("%#v", this.Parameter)+",\n")
	s = append(s, "UpdateScript: "+fmt.Sprintf("%#v", this.UpdateScript)+",\n")
	s = append(s, "Timeout: "+fmt.Sprintf("%#v", this.Timeout)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_StartAgentOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&proto.ControlResponse_StartAgentOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "CpuLimit: "+fmt.Sprintf("%#v", this.CpuLimit)+",\n")
	s = append(s, "MemLimit: "+fmt.Sprintf("%#v", this.MemLimit)+",\n")
	s = append(s, "NetLimit: "+fmt.Sprintf("%#v", this.NetLimit)+",\n")
	keysForEnvironment := make([]string, 0, len(this.Environment))
	for k, _ := range this.Environment {
		keysForEnvironment = append(keysForEnvironment, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForEnvironment)
	mapStringForEnvironment := "map[string]string{"
	for _, k := range keysForEnvironment {
		mapStringForEnvironment += fmt.Sprintf("%#v: %#v,", k, this.Environment[k])
	}
	mapStringForEnvironment += "}"
	if this.Environment != nil {
		s = append(s, "Environment: "+mapStringForEnvironment+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_StopAgentOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&proto.ControlResponse_StopAgentOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "StopAgentOptionsType: "+fmt.Sprintf("%#v", this.StopAgentOptionsType)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_UpdateAgentConfigOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.ControlResponse_UpdateAgentConfigOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "ConfigContent: "+fmt.Sprintf("%#v", this.ConfigContent)+",\n")
	s = append(s, "ConfigPath: "+fmt.Sprintf("%#v", this.ConfigPath)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_UpdateSidecarOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.ControlResponse_UpdateSidecarOptions{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_UpdateSidecarConfigOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&proto.ControlResponse_UpdateSidecarConfigOptions{")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_ExecScriptOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.ControlResponse_ExecScriptOptions{")
	s = append(s, "Parameter: "+fmt.Sprintf("%#v", this.Parameter)+",\n")
	s = append(s, "ExecScript: "+fmt.Sprintf("%#v", this.ExecScript)+",\n")
	s = append(s, "Timeout: "+fmt.Sprintf("%#v", this.Timeout)+",\n")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_CancelOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&proto.ControlResponse_CancelOptions{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ControlResponse_ExecRestOptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&proto.ControlResponse_ExecRestOptions{")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "Path: "+fmt.Sprintf("%#v", this.Path)+",\n")
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	s = append(s, "Body: "+fmt.Sprintf("%#v", this.Body)+",\n")
	s = append(s, "Timeout: "+fmt.Sprintf("%#v", this.Timeout)+",\n")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&proto.Event{")
	s = append(s, "SidecarRequestHeader: "+strings.Replace(this.SidecarRequestHeader.GoString(), `&`, ``, 1)+",\n")
	s = append(s, "EventType: "+fmt.Sprintf("%#v", this.EventType)+",\n")
	if this.Details != nil {
		s = append(s, "Details: "+fmt.Sprintf("%#v", this.Details)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_OpProgress) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_OpProgress{` +
		`OpProgress:` + fmt.Sprintf("%#v", this.OpProgress) + `}`}, ", ")
	return s
}
func (this *Event_AgentError_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_AgentError_{` +
		`AgentError:` + fmt.Sprintf("%#v", this.AgentError) + `}`}, ", ")
	return s
}
func (this *Event_OsResourceUsages_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_OsResourceUsages_{` +
		`OsResourceUsages:` + fmt.Sprintf("%#v", this.OsResourceUsages) + `}`}, ", ")
	return s
}
func (this *Event_ProcResourceUsages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_ProcResourceUsages{` +
		`ProcResourceUsages:` + fmt.Sprintf("%#v", this.ProcResourceUsages) + `}`}, ", ")
	return s
}
func (this *Event_ExecScriptResponse_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_ExecScriptResponse_{` +
		`ExecScriptResponse:` + fmt.Sprintf("%#v", this.ExecScriptResponse) + `}`}, ", ")
	return s
}
func (this *Event_AgentHealthCheck_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_AgentHealthCheck_{` +
		`AgentHealthCheck:` + fmt.Sprintf("%#v", this.AgentHealthCheck) + `}`}, ", ")
	return s
}
func (this *Event_ExecRestResponse_) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&proto.Event_ExecRestResponse_{` +
		`ExecRestResponse:` + fmt.Sprintf("%#v", this.ExecRestResponse) + `}`}, ", ")
	return s
}
func (this *Event_OperationProgress) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&proto.Event_OperationProgress{")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "Progress: "+fmt.Sprintf("%#v", this.Progress)+",\n")
	s = append(s, "Failed: "+fmt.Sprintf("%#v", this.Failed)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_AgentError) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.Event_AgentError{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "Errstr: "+fmt.Sprintf("%#v", this.Errstr)+",\n")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_OsResourceUsages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&proto.Event_OsResourceUsages{")
	s = append(s, "CpuUsage: "+fmt.Sprintf("%#v", this.CpuUsage)+",\n")
	s = append(s, "MemUsage: "+fmt.Sprintf("%#v", this.MemUsage)+",\n")
	s = append(s, "SwapUsage: "+fmt.Sprintf("%#v", this.SwapUsage)+",\n")
	s = append(s, "Load1: "+fmt.Sprintf("%#v", this.Load1)+",\n")
	s = append(s, "Uptime: "+fmt.Sprintf("%#v", this.Uptime)+",\n")
	if this.DiskUsage != nil {
		vs := make([]Event_DiskUsage, len(this.DiskUsage))
		for i := range vs {
			vs[i] = this.DiskUsage[i]
		}
		s = append(s, "DiskUsage: "+fmt.Sprintf("%#v", vs)+",\n")
	}
	if this.NetStats != nil {
		vs := make([]Event_NetStat, len(this.NetStats))
		for i := range vs {
			vs[i] = this.NetStats[i]
		}
		s = append(s, "NetStats: "+fmt.Sprintf("%#v", vs)+",\n")
	}
	s = append(s, "CpuCores: "+fmt.Sprintf("%#v", this.CpuCores)+",\n")
	s = append(s, "MemSize: "+fmt.Sprintf("%#v", this.MemSize)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_DiskUsage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.Event_DiskUsage{")
	s = append(s, "MountPoint: "+fmt.Sprintf("%#v", this.MountPoint)+",\n")
	s = append(s, "UsedSpace: "+fmt.Sprintf("%#v", this.UsedSpace)+",\n")
	s = append(s, "TotalSpace: "+fmt.Sprintf("%#v", this.TotalSpace)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_NetStat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.Event_NetStat{")
	s = append(s, "IfName: "+fmt.Sprintf("%#v", this.IfName)+",\n")
	s = append(s, "IfIp: "+fmt.Sprintf("%#v", this.IfIp)+",\n")
	s = append(s, "BytesSent: "+fmt.Sprintf("%#v", this.BytesSent)+",\n")
	s = append(s, "BytesRecv: "+fmt.Sprintf("%#v", this.BytesRecv)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_ProcessResourceUsages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&proto.Event_ProcessResourceUsages{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "CpuUsage: "+fmt.Sprintf("%#v", this.CpuUsage)+",\n")
	s = append(s, "Memory: "+fmt.Sprintf("%#v", this.Memory)+",\n")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "BytesSent: "+fmt.Sprintf("%#v", this.BytesSent)+",\n")
	s = append(s, "BytesRecv: "+fmt.Sprintf("%#v", this.BytesRecv)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_ExecScriptResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.Event_ExecScriptResponse{")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	s = append(s, "Failed: "+fmt.Sprintf("%#v", this.Failed)+",\n")
	s = append(s, "Response: "+fmt.Sprintf("%#v", this.Response)+",\n")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_AgentHealthCheck) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.Event_AgentHealthCheck{")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	s = append(s, "Failed: "+fmt.Sprintf("%#v", this.Failed)+",\n")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Event_ExecRestResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&proto.Event_ExecRestResponse{")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	s = append(s, "Failed: "+fmt.Sprintf("%#v", this.Failed)+",\n")
	s = append(s, "Response: "+fmt.Sprintf("%#v", this.Response)+",\n")
	s = append(s, "AgentId: "+fmt.Sprintf("%#v", this.AgentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ShellReport) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&proto.ShellReport{")
	s = append(s, "SidecarRequestHeader: "+strings.Replace(this.SidecarRequestHeader.GoString(), `&`, ``, 1)+",\n")
	s = append(s, "Seqno: "+fmt.Sprintf("%#v", this.Seqno)+",\n")
	s = append(s, "Content: "+fmt.Sprintf("%#v", this.Content)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringService(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EasyAgentServiceClient is the client API for EasyAgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EasyAgentServiceClient interface {
	RegisterSidecar(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	ReadyForControl(ctx context.Context, in *ControlRequest, opts ...grpc.CallOption) (EasyAgentService_ReadyForControlClient, error)
	ReportEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*EmptyResponse, error)
	ReportShellContent(ctx context.Context, in *ShellReport, opts ...grpc.CallOption) (*EmptyResponse, error)
	ReportShellLog(ctx context.Context, opts ...grpc.CallOption) (EasyAgentService_ReportShellLogClient, error)
}

type easyAgentServiceClient struct {
	cc *grpc.ClientConn
}

func NewEasyAgentServiceClient(cc *grpc.ClientConn) EasyAgentServiceClient {
	return &easyAgentServiceClient{cc}
}

func (c *easyAgentServiceClient) RegisterSidecar(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyAgentService/registerSidecar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyAgentServiceClient) ReadyForControl(ctx context.Context, in *ControlRequest, opts ...grpc.CallOption) (EasyAgentService_ReadyForControlClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EasyAgentService_serviceDesc.Streams[0], "/proto.EasyAgentService/readyForControl", opts...)
	if err != nil {
		return nil, err
	}
	x := &easyAgentServiceReadyForControlClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EasyAgentService_ReadyForControlClient interface {
	Recv() (*ControlResponse, error)
	grpc.ClientStream
}

type easyAgentServiceReadyForControlClient struct {
	grpc.ClientStream
}

func (x *easyAgentServiceReadyForControlClient) Recv() (*ControlResponse, error) {
	m := new(ControlResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *easyAgentServiceClient) ReportEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyAgentService/reportEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyAgentServiceClient) ReportShellContent(ctx context.Context, in *ShellReport, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyAgentService/reportShellContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyAgentServiceClient) ReportShellLog(ctx context.Context, opts ...grpc.CallOption) (EasyAgentService_ReportShellLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EasyAgentService_serviceDesc.Streams[1], "/proto.EasyAgentService/reportShellLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &easyAgentServiceReportShellLogClient{stream}
	return x, nil
}

type EasyAgentService_ReportShellLogClient interface {
	Send(*ShellReport) error
	CloseAndRecv() (*EmptyResponse, error)
	grpc.ClientStream
}

type easyAgentServiceReportShellLogClient struct {
	grpc.ClientStream
}

func (x *easyAgentServiceReportShellLogClient) Send(m *ShellReport) error {
	return x.ClientStream.SendMsg(m)
}

func (x *easyAgentServiceReportShellLogClient) CloseAndRecv() (*EmptyResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(EmptyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EasyAgentServiceServer is the server API for EasyAgentService service.
type EasyAgentServiceServer interface {
	RegisterSidecar(context.Context, *RegisterRequest) (*RegisterResponse, error)
	ReadyForControl(*ControlRequest, EasyAgentService_ReadyForControlServer) error
	ReportEvent(context.Context, *Event) (*EmptyResponse, error)
	ReportShellContent(context.Context, *ShellReport) (*EmptyResponse, error)
	ReportShellLog(EasyAgentService_ReportShellLogServer) error
}

// UnimplementedEasyAgentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEasyAgentServiceServer struct {
}

func (*UnimplementedEasyAgentServiceServer) RegisterSidecar(ctx context.Context, req *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterSidecar not implemented")
}
func (*UnimplementedEasyAgentServiceServer) ReadyForControl(req *ControlRequest, srv EasyAgentService_ReadyForControlServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadyForControl not implemented")
}
func (*UnimplementedEasyAgentServiceServer) ReportEvent(ctx context.Context, req *Event) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportEvent not implemented")
}
func (*UnimplementedEasyAgentServiceServer) ReportShellContent(ctx context.Context, req *ShellReport) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportShellContent not implemented")
}
func (*UnimplementedEasyAgentServiceServer) ReportShellLog(srv EasyAgentService_ReportShellLogServer) error {
	return status.Errorf(codes.Unimplemented, "method ReportShellLog not implemented")
}

func RegisterEasyAgentServiceServer(s *grpc.Server, srv EasyAgentServiceServer) {
	s.RegisterService(&_EasyAgentService_serviceDesc, srv)
}

func _EasyAgentService_RegisterSidecar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyAgentServiceServer).RegisterSidecar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyAgentService/RegisterSidecar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyAgentServiceServer).RegisterSidecar(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyAgentService_ReadyForControl_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ControlRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EasyAgentServiceServer).ReadyForControl(m, &easyAgentServiceReadyForControlServer{stream})
}

type EasyAgentService_ReadyForControlServer interface {
	Send(*ControlResponse) error
	grpc.ServerStream
}

type easyAgentServiceReadyForControlServer struct {
	grpc.ServerStream
}

func (x *easyAgentServiceReadyForControlServer) Send(m *ControlResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _EasyAgentService_ReportEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyAgentServiceServer).ReportEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyAgentService/ReportEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyAgentServiceServer).ReportEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyAgentService_ReportShellContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShellReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyAgentServiceServer).ReportShellContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyAgentService/ReportShellContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyAgentServiceServer).ReportShellContent(ctx, req.(*ShellReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyAgentService_ReportShellLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EasyAgentServiceServer).ReportShellLog(&easyAgentServiceReportShellLogServer{stream})
}

type EasyAgentService_ReportShellLogServer interface {
	SendAndClose(*EmptyResponse) error
	Recv() (*ShellReport, error)
	grpc.ServerStream
}

type easyAgentServiceReportShellLogServer struct {
	grpc.ServerStream
}

func (x *easyAgentServiceReportShellLogServer) SendAndClose(m *EmptyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *easyAgentServiceReportShellLogServer) Recv() (*ShellReport, error) {
	m := new(ShellReport)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _EasyAgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EasyAgentService",
	HandlerType: (*EasyAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerSidecar",
			Handler:    _EasyAgentService_RegisterSidecar_Handler,
		},
		{
			MethodName: "reportEvent",
			Handler:    _EasyAgentService_ReportEvent_Handler,
		},
		{
			MethodName: "reportShellContent",
			Handler:    _EasyAgentService_ReportShellContent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "readyForControl",
			Handler:       _EasyAgentService_ReadyForControl_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "reportShellLog",
			Handler:       _EasyAgentService_ReportShellLog_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}

// TransferServiceClient is the client API for TransferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransferServiceClient interface {
	Send(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type transferServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransferServiceClient(cc *grpc.ClientConn) TransferServiceClient {
	return &transferServiceClient{cc}
}

func (c *transferServiceClient) Send(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.TransferService/send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransferServiceServer is the server API for TransferService service.
type TransferServiceServer interface {
	Send(context.Context, *Msg) (*EmptyResponse, error)
}

// UnimplementedTransferServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransferServiceServer struct {
}

func (*UnimplementedTransferServiceServer) Send(ctx context.Context, req *Msg) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterTransferServiceServer(s *grpc.Server, srv TransferServiceServer) {
	s.RegisterService(&_TransferService_serviceDesc, srv)
}

func _TransferService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TransferService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferServiceServer).Send(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TransferService",
	HandlerType: (*TransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "send",
			Handler:    _TransferService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func (m *Msg) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Msg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Msg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintService(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.JsonBytes) > 0 {
		i -= len(m.JsonBytes)
		copy(dAtA[i:], m.JsonBytes)
		i = encodeVarintService(dAtA, i, uint64(len(m.JsonBytes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Typ) > 0 {
		i -= len(m.Typ)
		copy(dAtA[i:], m.Typ)
		i = encodeVarintService(dAtA, i, uint64(len(m.Typ)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintService(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EmptyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmptyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmptyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *SidecarRequestHeader) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SidecarRequestHeader) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SidecarRequestHeader) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Systime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Systime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintService(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x12
	{
		size := m.Id.Size()
		i -= size
		if _, err := m.Id.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *RegisterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallBack) > 0 {
		for iNdEx := len(m.CallBack) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.CallBack[iNdEx])
			copy(dAtA[i:], m.CallBack[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.CallBack[iNdEx])))
			i--
			dAtA[i] = 0x5a
		}
	}
	if len(m.LocalIp) > 0 {
		i -= len(m.LocalIp)
		copy(dAtA[i:], m.LocalIp)
		i = encodeVarintService(dAtA, i, uint64(len(m.LocalIp)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Host) > 0 {
		i -= len(m.Host)
		copy(dAtA[i:], m.Host)
		i = encodeVarintService(dAtA, i, uint64(len(m.Host)))
		i--
		dAtA[i] = 0x4a
	}
	if m.SwapSize != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.SwapSize))
		i--
		dAtA[i] = 0x40
	}
	if m.MemSize != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.MemSize))
		i--
		dAtA[i] = 0x38
	}
	if m.CpuCores != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.CpuCores))
		i--
		dAtA[i] = 0x30
	}
	if len(m.CpuSerial) > 0 {
		i -= len(m.CpuSerial)
		copy(dAtA[i:], m.CpuSerial)
		i = encodeVarintService(dAtA, i, uint64(len(m.CpuSerial)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OsVersion) > 0 {
		i -= len(m.OsVersion)
		copy(dAtA[i:], m.OsVersion)
		i = encodeVarintService(dAtA, i, uint64(len(m.OsVersion)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OsPlatform) > 0 {
		i -= len(m.OsPlatform)
		copy(dAtA[i:], m.OsPlatform)
		i = encodeVarintService(dAtA, i, uint64(len(m.OsPlatform)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OsType) > 0 {
		i -= len(m.OsType)
		copy(dAtA[i:], m.OsType)
		i = encodeVarintService(dAtA, i, uint64(len(m.OsType)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.SidecarRequestHeader.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *RegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ControlRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size, err := m.SidecarRequestHeader.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Options != nil {
		{
			size := m.Options.Size()
			i -= size
			if _, err := m.Options.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x10
	}
	if m.Cmd != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ControlResponse_InstallAgentOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_InstallAgentOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.InstallAgentOptions != nil {
		{
			size, err := m.InstallAgentOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_UninstallAgentOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UninstallAgentOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UninstallAgentOptions != nil {
		{
			size, err := m.UninstallAgentOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_UpdateAgentOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateAgentOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UpdateAgentOptions != nil {
		{
			size, err := m.UpdateAgentOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_StartAgentOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_StartAgentOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StartAgentOptions != nil {
		{
			size, err := m.StartAgentOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_StopAgentOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_StopAgentOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StopAgentOptions != nil {
		{
			size, err := m.StopAgentOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_UpdateAgentConfigOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateAgentConfigOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UpdateAgentConfigOptions != nil {
		{
			size, err := m.UpdateAgentConfigOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_UpdateSidecarOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateSidecarOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UpdateSidecarOptions != nil {
		{
			size, err := m.UpdateSidecarOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_UpdateSidecarConfigOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateSidecarConfigOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UpdateSidecarConfigOptions != nil {
		{
			size, err := m.UpdateSidecarConfigOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_ExecScriptOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_ExecScriptOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExecScriptOptions != nil {
		{
			size, err := m.ExecScriptOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xe2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_CancelOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_CancelOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CancelOptions != nil {
		{
			size, err := m.CancelOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_ExecRestOptions_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_ExecRestOptions_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExecRestOptions != nil {
		{
			size, err := m.ExecRestOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *ControlResponse_InstallAgentOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_InstallAgentOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_InstallAgentOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RunUser) > 0 {
		i -= len(m.RunUser)
		copy(dAtA[i:], m.RunUser)
		i = encodeVarintService(dAtA, i, uint64(len(m.RunUser)))
		i--
		dAtA[i] = 0x7a
	}
	if m.HealthRetries != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.HealthRetries))
		i--
		dAtA[i] = 0x70
	}
	n15, err15 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.HealthTimeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthTimeout):])
	if err15 != nil {
		return 0, err15
	}
	i -= n15
	i = encodeVarintService(dAtA, i, uint64(n15))
	i--
	dAtA[i] = 0x6a
	n16, err16 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.HealthStartPeriod, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthStartPeriod):])
	if err16 != nil {
		return 0, err16
	}
	i -= n16
	i = encodeVarintService(dAtA, i, uint64(n16))
	i--
	dAtA[i] = 0x62
	n17, err17 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Timeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout):])
	if err17 != nil {
		return 0, err17
	}
	i -= n17
	i = encodeVarintService(dAtA, i, uint64(n17))
	i--
	dAtA[i] = 0x5a
	n18, err18 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.HealthPeriod, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthPeriod):])
	if err18 != nil {
		return 0, err18
	}
	i -= n18
	i = encodeVarintService(dAtA, i, uint64(n18))
	i--
	dAtA[i] = 0x52
	if len(m.HealthShell) > 0 {
		i -= len(m.HealthShell)
		copy(dAtA[i:], m.HealthShell)
		i = encodeVarintService(dAtA, i, uint64(len(m.HealthShell)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Workdir) > 0 {
		i -= len(m.Workdir)
		copy(dAtA[i:], m.Workdir)
		i = encodeVarintService(dAtA, i, uint64(len(m.Workdir)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.InstallScript) > 0 {
		i -= len(m.InstallScript)
		copy(dAtA[i:], m.InstallScript)
		i = encodeVarintService(dAtA, i, uint64(len(m.InstallScript)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.InstallParameter) > 0 {
		for iNdEx := len(m.InstallParameter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InstallParameter[iNdEx])
			copy(dAtA[i:], m.InstallParameter[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.InstallParameter[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintService(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Parameter) > 0 {
		for iNdEx := len(m.Parameter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Parameter[iNdEx])
			copy(dAtA[i:], m.Parameter[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.Parameter[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.BinaryPath) > 0 {
		i -= len(m.BinaryPath)
		copy(dAtA[i:], m.BinaryPath)
		i = encodeVarintService(dAtA, i, uint64(len(m.BinaryPath)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ConfigurationPath) > 0 {
		i -= len(m.ConfigurationPath)
		copy(dAtA[i:], m.ConfigurationPath)
		i = encodeVarintService(dAtA, i, uint64(len(m.ConfigurationPath)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_UninstallAgentOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_UninstallAgentOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UninstallAgentOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	n19, err19 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Timeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout):])
	if err19 != nil {
		return 0, err19
	}
	i -= n19
	i = encodeVarintService(dAtA, i, uint64(n19))
	i--
	dAtA[i] = 0x22
	if len(m.UninstallScript) > 0 {
		i -= len(m.UninstallScript)
		copy(dAtA[i:], m.UninstallScript)
		i = encodeVarintService(dAtA, i, uint64(len(m.UninstallScript)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Parameter) > 0 {
		for iNdEx := len(m.Parameter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Parameter[iNdEx])
			copy(dAtA[i:], m.Parameter[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.Parameter[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_UpdateAgentOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_UpdateAgentOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateAgentOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	n20, err20 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Timeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout):])
	if err20 != nil {
		return 0, err20
	}
	i -= n20
	i = encodeVarintService(dAtA, i, uint64(n20))
	i--
	dAtA[i] = 0x22
	if len(m.UpdateScript) > 0 {
		i -= len(m.UpdateScript)
		copy(dAtA[i:], m.UpdateScript)
		i = encodeVarintService(dAtA, i, uint64(len(m.UpdateScript)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Parameter) > 0 {
		for iNdEx := len(m.Parameter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Parameter[iNdEx])
			copy(dAtA[i:], m.Parameter[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.Parameter[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_StartAgentOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_StartAgentOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_StartAgentOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Environment) > 0 {
		for k := range m.Environment {
			v := m.Environment[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintService(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintService(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintService(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.NetLimit != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.NetLimit))
		i--
		dAtA[i] = 0x20
	}
	if m.MemLimit != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.MemLimit))
		i--
		dAtA[i] = 0x18
	}
	if m.CpuLimit != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.CpuLimit))))
		i--
		dAtA[i] = 0x15
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_StopAgentOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_StopAgentOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_StopAgentOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StopAgentOptionsType != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.StopAgentOptionsType))
		i--
		dAtA[i] = 0x10
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_UpdateAgentConfigOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_UpdateAgentConfigOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateAgentConfigOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConfigPath) > 0 {
		i -= len(m.ConfigPath)
		copy(dAtA[i:], m.ConfigPath)
		i = encodeVarintService(dAtA, i, uint64(len(m.ConfigPath)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ConfigContent) > 0 {
		i -= len(m.ConfigContent)
		copy(dAtA[i:], m.ConfigContent)
		i = encodeVarintService(dAtA, i, uint64(len(m.ConfigContent)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_UpdateSidecarOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_UpdateSidecarOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateSidecarOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ControlResponse_UpdateSidecarConfigOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_UpdateSidecarConfigOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_UpdateSidecarConfigOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ControlResponse_ExecScriptOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_ExecScriptOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_ExecScriptOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	n21, err21 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Timeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout):])
	if err21 != nil {
		return 0, err21
	}
	i -= n21
	i = encodeVarintService(dAtA, i, uint64(n21))
	i--
	dAtA[i] = 0x1a
	if len(m.ExecScript) > 0 {
		i -= len(m.ExecScript)
		copy(dAtA[i:], m.ExecScript)
		i = encodeVarintService(dAtA, i, uint64(len(m.ExecScript)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Parameter) > 0 {
		for iNdEx := len(m.Parameter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Parameter[iNdEx])
			copy(dAtA[i:], m.Parameter[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.Parameter[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ControlResponse_CancelOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_CancelOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_CancelOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControlResponse_ExecRestOptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControlResponse_ExecRestOptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControlResponse_ExecRestOptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	n22, err22 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Timeout, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout):])
	if err22 != nil {
		return 0, err22
	}
	i -= n22
	i = encodeVarintService(dAtA, i, uint64(n22))
	i--
	dAtA[i] = 0x2a
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintService(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintService(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintService(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Event) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Details != nil {
		{
			size := m.Details.Size()
			i -= size
			if _, err := m.Details.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.EventType != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.EventType))
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.SidecarRequestHeader.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Event_OpProgress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_OpProgress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OpProgress != nil {
		{
			size, err := m.OpProgress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *Event_AgentError_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_AgentError_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AgentError != nil {
		{
			size, err := m.AgentError.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *Event_OsResourceUsages_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_OsResourceUsages_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OsResourceUsages != nil {
		{
			size, err := m.OsResourceUsages.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *Event_ProcResourceUsages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ProcResourceUsages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ProcResourceUsages != nil {
		{
			size, err := m.ProcResourceUsages.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *Event_ExecScriptResponse_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ExecScriptResponse_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExecScriptResponse != nil {
		{
			size, err := m.ExecScriptResponse.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *Event_AgentHealthCheck_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_AgentHealthCheck_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AgentHealthCheck != nil {
		{
			size, err := m.AgentHealthCheck.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *Event_ExecRestResponse_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ExecRestResponse_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExecRestResponse != nil {
		{
			size, err := m.ExecRestResponse.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *Event_OperationProgress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_OperationProgress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_OperationProgress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Failed {
		i--
		if m.Failed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Progress != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Progress))))
		i--
		dAtA[i] = 0x1d
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Event_AgentError) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_AgentError) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_AgentError) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Errstr) > 0 {
		i -= len(m.Errstr)
		copy(dAtA[i:], m.Errstr)
		i = encodeVarintService(dAtA, i, uint64(len(m.Errstr)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Event_OsResourceUsages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_OsResourceUsages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_OsResourceUsages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MemSize != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.MemSize))
		i--
		dAtA[i] = 0x48
	}
	if m.CpuCores != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.CpuCores))
		i--
		dAtA[i] = 0x40
	}
	if len(m.NetStats) > 0 {
		for iNdEx := len(m.NetStats) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetStats[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.DiskUsage) > 0 {
		for iNdEx := len(m.DiskUsage) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DiskUsage[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Uptime != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Uptime))))
		i--
		dAtA[i] = 0x29
	}
	if m.Load1 != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Load1))))
		i--
		dAtA[i] = 0x25
	}
	if m.SwapUsage != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.SwapUsage))
		i--
		dAtA[i] = 0x18
	}
	if m.MemUsage != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.MemUsage))
		i--
		dAtA[i] = 0x10
	}
	if m.CpuUsage != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.CpuUsage))))
		i--
		dAtA[i] = 0xd
	}
	return len(dAtA) - i, nil
}

func (m *Event_DiskUsage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_DiskUsage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_DiskUsage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalSpace != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.TotalSpace))
		i--
		dAtA[i] = 0x18
	}
	if m.UsedSpace != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.UsedSpace))
		i--
		dAtA[i] = 0x10
	}
	if len(m.MountPoint) > 0 {
		i -= len(m.MountPoint)
		copy(dAtA[i:], m.MountPoint)
		i = encodeVarintService(dAtA, i, uint64(len(m.MountPoint)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Event_NetStat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_NetStat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_NetStat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BytesRecv != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.BytesRecv))
		i--
		dAtA[i] = 0x20
	}
	if m.BytesSent != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.BytesSent))
		i--
		dAtA[i] = 0x18
	}
	if len(m.IfIp) > 0 {
		for iNdEx := len(m.IfIp) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IfIp[iNdEx])
			copy(dAtA[i:], m.IfIp[iNdEx])
			i = encodeVarintService(dAtA, i, uint64(len(m.IfIp[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.IfName) > 0 {
		i -= len(m.IfName)
		copy(dAtA[i:], m.IfName)
		i = encodeVarintService(dAtA, i, uint64(len(m.IfName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Event_ProcessResourceUsages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_ProcessResourceUsages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ProcessResourceUsages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BytesRecv != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.BytesRecv))
		i--
		dAtA[i] = 0x30
	}
	if m.BytesSent != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.BytesSent))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Cmd) > 0 {
		i -= len(m.Cmd)
		copy(dAtA[i:], m.Cmd)
		i = encodeVarintService(dAtA, i, uint64(len(m.Cmd)))
		i--
		dAtA[i] = 0x22
	}
	if m.Memory != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Memory))
		i--
		dAtA[i] = 0x18
	}
	if m.CpuUsage != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.CpuUsage))))
		i--
		dAtA[i] = 0x15
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Event_ExecScriptResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_ExecScriptResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ExecScriptResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Response) > 0 {
		i -= len(m.Response)
		copy(dAtA[i:], m.Response)
		i = encodeVarintService(dAtA, i, uint64(len(m.Response)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Failed {
		i--
		if m.Failed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Event_AgentHealthCheck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_AgentHealthCheck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_AgentHealthCheck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x18
	}
	if m.Failed {
		i--
		if m.Failed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Event_ExecRestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event_ExecRestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event_ExecRestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	{
		size := m.AgentId.Size()
		i -= size
		if _, err := m.AgentId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Response) > 0 {
		i -= len(m.Response)
		copy(dAtA[i:], m.Response)
		i = encodeVarintService(dAtA, i, uint64(len(m.Response)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Failed {
		i--
		if m.Failed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ShellReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShellReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ShellReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintService(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Seqno != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Seqno))
		i--
		dAtA[i] = 0x10
	}
	{
		size, err := m.SidecarRequestHeader.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintService(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	offset -= sovService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedMsg(r randyService, easy bool) *Msg {
	this := &Msg{}
	this.Id = string(randStringService(r))
	this.Index = string(randStringService(r))
	this.Typ = string(randStringService(r))
	v1 := r.Intn(100)
	this.JsonBytes = make([]byte, v1)
	for i := 0; i < v1; i++ {
		this.JsonBytes[i] = byte(r.Intn(256))
	}
	v2 := r.Intn(100)
	this.Key = make([]byte, v2)
	for i := 0; i < v2; i++ {
		this.Key[i] = byte(r.Intn(256))
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 6)
	}
	return this
}

func NewPopulatedEmptyResponse(r randyService, easy bool) *EmptyResponse {
	this := &EmptyResponse{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 1)
	}
	return this
}

func NewPopulatedSidecarRequestHeader(r randyService, easy bool) *SidecarRequestHeader {
	this := &SidecarRequestHeader{}
	v3 := NewPopulatedUuid(r)
	this.Id = *v3
	v4 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.Systime = *v4
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 3)
	}
	return this
}

func NewPopulatedRegisterRequest(r randyService, easy bool) *RegisterRequest {
	this := &RegisterRequest{}
	v5 := NewPopulatedSidecarRequestHeader(r, easy)
	this.SidecarRequestHeader = *v5
	this.OsType = string(randStringService(r))
	this.OsPlatform = string(randStringService(r))
	this.OsVersion = string(randStringService(r))
	this.CpuSerial = string(randStringService(r))
	this.CpuCores = uint32(r.Uint32())
	this.MemSize = uint64(uint64(r.Uint32()))
	this.SwapSize = uint64(uint64(r.Uint32()))
	this.Host = string(randStringService(r))
	this.LocalIp = string(randStringService(r))
	v6 := r.Intn(10)
	this.CallBack = make([]string, v6)
	for i := 0; i < v6; i++ {
		this.CallBack[i] = string(randStringService(r))
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 12)
	}
	return this
}

func NewPopulatedRegisterResponse(r randyService, easy bool) *RegisterResponse {
	this := &RegisterResponse{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 1)
	}
	return this
}

func NewPopulatedControlRequest(r randyService, easy bool) *ControlRequest {
	this := &ControlRequest{}
	v7 := NewPopulatedSidecarRequestHeader(r, easy)
	this.SidecarRequestHeader = *v7
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 2)
	}
	return this
}

func NewPopulatedControlResponse(r randyService, easy bool) *ControlResponse {
	this := &ControlResponse{}
	this.Cmd = ControlResponse_ControlCmd([]int32{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}[r.Intn(11)])
	this.Seqno = uint32(r.Uint32())
	oneofNumber_Options := []int32{100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110}[r.Intn(11)]
	switch oneofNumber_Options {
	case 100:
		this.Options = NewPopulatedControlResponse_InstallAgentOptions_(r, easy)
	case 101:
		this.Options = NewPopulatedControlResponse_UninstallAgentOptions_(r, easy)
	case 102:
		this.Options = NewPopulatedControlResponse_UpdateAgentOptions_(r, easy)
	case 103:
		this.Options = NewPopulatedControlResponse_StartAgentOptions_(r, easy)
	case 104:
		this.Options = NewPopulatedControlResponse_StopAgentOptions_(r, easy)
	case 105:
		this.Options = NewPopulatedControlResponse_UpdateAgentConfigOptions_(r, easy)
	case 106:
		this.Options = NewPopulatedControlResponse_UpdateSidecarOptions_(r, easy)
	case 107:
		this.Options = NewPopulatedControlResponse_UpdateSidecarConfigOptions_(r, easy)
	case 108:
		this.Options = NewPopulatedControlResponse_ExecScriptOptions_(r, easy)
	case 109:
		this.Options = NewPopulatedControlResponse_CancelOptions_(r, easy)
	case 110:
		this.Options = NewPopulatedControlResponse_ExecRestOptions_(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 111)
	}
	return this
}

func NewPopulatedControlResponse_InstallAgentOptions_(r randyService, easy bool) *ControlResponse_InstallAgentOptions_ {
	this := &ControlResponse_InstallAgentOptions_{}
	this.InstallAgentOptions = NewPopulatedControlResponse_InstallAgentOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_UninstallAgentOptions_(r randyService, easy bool) *ControlResponse_UninstallAgentOptions_ {
	this := &ControlResponse_UninstallAgentOptions_{}
	this.UninstallAgentOptions = NewPopulatedControlResponse_UninstallAgentOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_UpdateAgentOptions_(r randyService, easy bool) *ControlResponse_UpdateAgentOptions_ {
	this := &ControlResponse_UpdateAgentOptions_{}
	this.UpdateAgentOptions = NewPopulatedControlResponse_UpdateAgentOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_StartAgentOptions_(r randyService, easy bool) *ControlResponse_StartAgentOptions_ {
	this := &ControlResponse_StartAgentOptions_{}
	this.StartAgentOptions = NewPopulatedControlResponse_StartAgentOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_StopAgentOptions_(r randyService, easy bool) *ControlResponse_StopAgentOptions_ {
	this := &ControlResponse_StopAgentOptions_{}
	this.StopAgentOptions = NewPopulatedControlResponse_StopAgentOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_UpdateAgentConfigOptions_(r randyService, easy bool) *ControlResponse_UpdateAgentConfigOptions_ {
	this := &ControlResponse_UpdateAgentConfigOptions_{}
	this.UpdateAgentConfigOptions = NewPopulatedControlResponse_UpdateAgentConfigOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_UpdateSidecarOptions_(r randyService, easy bool) *ControlResponse_UpdateSidecarOptions_ {
	this := &ControlResponse_UpdateSidecarOptions_{}
	this.UpdateSidecarOptions = NewPopulatedControlResponse_UpdateSidecarOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_UpdateSidecarConfigOptions_(r randyService, easy bool) *ControlResponse_UpdateSidecarConfigOptions_ {
	this := &ControlResponse_UpdateSidecarConfigOptions_{}
	this.UpdateSidecarConfigOptions = NewPopulatedControlResponse_UpdateSidecarConfigOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_ExecScriptOptions_(r randyService, easy bool) *ControlResponse_ExecScriptOptions_ {
	this := &ControlResponse_ExecScriptOptions_{}
	this.ExecScriptOptions = NewPopulatedControlResponse_ExecScriptOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_CancelOptions_(r randyService, easy bool) *ControlResponse_CancelOptions_ {
	this := &ControlResponse_CancelOptions_{}
	this.CancelOptions = NewPopulatedControlResponse_CancelOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_ExecRestOptions_(r randyService, easy bool) *ControlResponse_ExecRestOptions_ {
	this := &ControlResponse_ExecRestOptions_{}
	this.ExecRestOptions = NewPopulatedControlResponse_ExecRestOptions(r, easy)
	return this
}
func NewPopulatedControlResponse_InstallAgentOptions(r randyService, easy bool) *ControlResponse_InstallAgentOptions {
	this := &ControlResponse_InstallAgentOptions{}
	v8 := NewPopulatedUuid(r)
	this.AgentId = *v8
	this.ConfigurationPath = string(randStringService(r))
	this.BinaryPath = string(randStringService(r))
	v9 := r.Intn(10)
	this.Parameter = make([]string, v9)
	for i := 0; i < v9; i++ {
		this.Parameter[i] = string(randStringService(r))
	}
	this.Name = string(randStringService(r))
	v10 := r.Intn(10)
	this.InstallParameter = make([]string, v10)
	for i := 0; i < v10; i++ {
		this.InstallParameter[i] = string(randStringService(r))
	}
	this.InstallScript = string(randStringService(r))
	this.Workdir = string(randStringService(r))
	this.HealthShell = string(randStringService(r))
	v11 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.HealthPeriod = *v11
	v12 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.Timeout = *v12
	v13 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.HealthStartPeriod = *v13
	v14 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.HealthTimeout = *v14
	this.HealthRetries = uint64(uint64(r.Uint32()))
	this.RunUser = string(randStringService(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 16)
	}
	return this
}

func NewPopulatedControlResponse_UninstallAgentOptions(r randyService, easy bool) *ControlResponse_UninstallAgentOptions {
	this := &ControlResponse_UninstallAgentOptions{}
	v15 := NewPopulatedUuid(r)
	this.AgentId = *v15
	v16 := r.Intn(10)
	this.Parameter = make([]string, v16)
	for i := 0; i < v16; i++ {
		this.Parameter[i] = string(randStringService(r))
	}
	this.UninstallScript = string(randStringService(r))
	v17 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.Timeout = *v17
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedControlResponse_UpdateAgentOptions(r randyService, easy bool) *ControlResponse_UpdateAgentOptions {
	this := &ControlResponse_UpdateAgentOptions{}
	v18 := NewPopulatedUuid(r)
	this.AgentId = *v18
	v19 := r.Intn(10)
	this.Parameter = make([]string, v19)
	for i := 0; i < v19; i++ {
		this.Parameter[i] = string(randStringService(r))
	}
	this.UpdateScript = string(randStringService(r))
	v20 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.Timeout = *v20
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedControlResponse_StartAgentOptions(r randyService, easy bool) *ControlResponse_StartAgentOptions {
	this := &ControlResponse_StartAgentOptions{}
	v21 := NewPopulatedUuid(r)
	this.AgentId = *v21
	this.CpuLimit = float32(r.Float32())
	if r.Intn(2) == 0 {
		this.CpuLimit *= -1
	}
	this.MemLimit = uint64(uint64(r.Uint32()))
	this.NetLimit = uint64(uint64(r.Uint32()))
	if r.Intn(5) != 0 {
		v22 := r.Intn(10)
		this.Environment = make(map[string]string)
		for i := 0; i < v22; i++ {
			this.Environment[randStringService(r)] = randStringService(r)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 6)
	}
	return this
}

func NewPopulatedControlResponse_StopAgentOptions(r randyService, easy bool) *ControlResponse_StopAgentOptions {
	this := &ControlResponse_StopAgentOptions{}
	v23 := NewPopulatedUuid(r)
	this.AgentId = *v23
	this.StopAgentOptionsType = ControlResponse_StopAgentOptions_StopAgentOptionsType([]int32{0, 1}[r.Intn(2)])
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 3)
	}
	return this
}

func NewPopulatedControlResponse_UpdateAgentConfigOptions(r randyService, easy bool) *ControlResponse_UpdateAgentConfigOptions {
	this := &ControlResponse_UpdateAgentConfigOptions{}
	v24 := NewPopulatedUuid(r)
	this.AgentId = *v24
	this.ConfigContent = string(randStringService(r))
	this.ConfigPath = string(randStringService(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 4)
	}
	return this
}

func NewPopulatedControlResponse_UpdateSidecarOptions(r randyService, easy bool) *ControlResponse_UpdateSidecarOptions {
	this := &ControlResponse_UpdateSidecarOptions{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 1)
	}
	return this
}

func NewPopulatedControlResponse_UpdateSidecarConfigOptions(r randyService, easy bool) *ControlResponse_UpdateSidecarConfigOptions {
	this := &ControlResponse_UpdateSidecarConfigOptions{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 1)
	}
	return this
}

func NewPopulatedControlResponse_ExecScriptOptions(r randyService, easy bool) *ControlResponse_ExecScriptOptions {
	this := &ControlResponse_ExecScriptOptions{}
	v25 := r.Intn(10)
	this.Parameter = make([]string, v25)
	for i := 0; i < v25; i++ {
		this.Parameter[i] = string(randStringService(r))
	}
	this.ExecScript = string(randStringService(r))
	v26 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.Timeout = *v26
	v27 := NewPopulatedUuid(r)
	this.AgentId = *v27
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedControlResponse_CancelOptions(r randyService, easy bool) *ControlResponse_CancelOptions {
	this := &ControlResponse_CancelOptions{}
	v28 := NewPopulatedUuid(r)
	this.AgentId = *v28
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 2)
	}
	return this
}

func NewPopulatedControlResponse_ExecRestOptions(r randyService, easy bool) *ControlResponse_ExecRestOptions {
	this := &ControlResponse_ExecRestOptions{}
	this.Method = string(randStringService(r))
	this.Path = string(randStringService(r))
	this.Query = string(randStringService(r))
	v29 := r.Intn(100)
	this.Body = make([]byte, v29)
	for i := 0; i < v29; i++ {
		this.Body[i] = byte(r.Intn(256))
	}
	v30 := github_com_gogo_protobuf_types.NewPopulatedStdDuration(r, easy)
	this.Timeout = *v30
	v31 := NewPopulatedUuid(r)
	this.AgentId = *v31
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 7)
	}
	return this
}

func NewPopulatedEvent(r randyService, easy bool) *Event {
	this := &Event{}
	v32 := NewPopulatedSidecarRequestHeader(r, easy)
	this.SidecarRequestHeader = *v32
	this.EventType = Event_EventType([]int32{0, 1, 2, 3, 4, 5, 6}[r.Intn(7)])
	oneofNumber_Details := []int32{100, 101, 102, 103, 104, 105, 106}[r.Intn(7)]
	switch oneofNumber_Details {
	case 100:
		this.Details = NewPopulatedEvent_OpProgress(r, easy)
	case 101:
		this.Details = NewPopulatedEvent_AgentError_(r, easy)
	case 102:
		this.Details = NewPopulatedEvent_OsResourceUsages_(r, easy)
	case 103:
		this.Details = NewPopulatedEvent_ProcResourceUsages(r, easy)
	case 104:
		this.Details = NewPopulatedEvent_ExecScriptResponse_(r, easy)
	case 105:
		this.Details = NewPopulatedEvent_AgentHealthCheck_(r, easy)
	case 106:
		this.Details = NewPopulatedEvent_ExecRestResponse_(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 107)
	}
	return this
}

func NewPopulatedEvent_OpProgress(r randyService, easy bool) *Event_OpProgress {
	this := &Event_OpProgress{}
	this.OpProgress = NewPopulatedEvent_OperationProgress(r, easy)
	return this
}
func NewPopulatedEvent_AgentError_(r randyService, easy bool) *Event_AgentError_ {
	this := &Event_AgentError_{}
	this.AgentError = NewPopulatedEvent_AgentError(r, easy)
	return this
}
func NewPopulatedEvent_OsResourceUsages_(r randyService, easy bool) *Event_OsResourceUsages_ {
	this := &Event_OsResourceUsages_{}
	this.OsResourceUsages = NewPopulatedEvent_OsResourceUsages(r, easy)
	return this
}
func NewPopulatedEvent_ProcResourceUsages(r randyService, easy bool) *Event_ProcResourceUsages {
	this := &Event_ProcResourceUsages{}
	this.ProcResourceUsages = NewPopulatedEvent_ProcessResourceUsages(r, easy)
	return this
}
func NewPopulatedEvent_ExecScriptResponse_(r randyService, easy bool) *Event_ExecScriptResponse_ {
	this := &Event_ExecScriptResponse_{}
	this.ExecScriptResponse = NewPopulatedEvent_ExecScriptResponse(r, easy)
	return this
}
func NewPopulatedEvent_AgentHealthCheck_(r randyService, easy bool) *Event_AgentHealthCheck_ {
	this := &Event_AgentHealthCheck_{}
	this.AgentHealthCheck = NewPopulatedEvent_AgentHealthCheck(r, easy)
	return this
}
func NewPopulatedEvent_ExecRestResponse_(r randyService, easy bool) *Event_ExecRestResponse_ {
	this := &Event_ExecRestResponse_{}
	this.ExecRestResponse = NewPopulatedEvent_ExecRestResponse(r, easy)
	return this
}
func NewPopulatedEvent_OperationProgress(r randyService, easy bool) *Event_OperationProgress {
	this := &Event_OperationProgress{}
	this.Seqno = uint32(r.Uint32())
	v33 := NewPopulatedUuid(r)
	this.AgentId = *v33
	this.Progress = float32(r.Float32())
	if r.Intn(2) == 0 {
		this.Progress *= -1
	}
	this.Failed = bool(bool(r.Intn(2) == 0))
	this.Message = string(randStringService(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 6)
	}
	return this
}

func NewPopulatedEvent_AgentError(r randyService, easy bool) *Event_AgentError {
	this := &Event_AgentError{}
	v34 := NewPopulatedUuid(r)
	this.AgentId = *v34
	this.Errstr = string(randStringService(r))
	this.Seqno = uint32(r.Uint32())
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 4)
	}
	return this
}

func NewPopulatedEvent_OsResourceUsages(r randyService, easy bool) *Event_OsResourceUsages {
	this := &Event_OsResourceUsages{}
	this.CpuUsage = float32(r.Float32())
	if r.Intn(2) == 0 {
		this.CpuUsage *= -1
	}
	this.MemUsage = uint64(uint64(r.Uint32()))
	this.SwapUsage = uint64(uint64(r.Uint32()))
	this.Load1 = float32(r.Float32())
	if r.Intn(2) == 0 {
		this.Load1 *= -1
	}
	this.Uptime = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Uptime *= -1
	}
	if r.Intn(5) != 0 {
		v35 := r.Intn(5)
		this.DiskUsage = make([]Event_DiskUsage, v35)
		for i := 0; i < v35; i++ {
			v36 := NewPopulatedEvent_DiskUsage(r, easy)
			this.DiskUsage[i] = *v36
		}
	}
	if r.Intn(5) != 0 {
		v37 := r.Intn(5)
		this.NetStats = make([]Event_NetStat, v37)
		for i := 0; i < v37; i++ {
			v38 := NewPopulatedEvent_NetStat(r, easy)
			this.NetStats[i] = *v38
		}
	}
	this.CpuCores = uint32(r.Uint32())
	this.MemSize = uint64(uint64(r.Uint32()))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 10)
	}
	return this
}

func NewPopulatedEvent_DiskUsage(r randyService, easy bool) *Event_DiskUsage {
	this := &Event_DiskUsage{}
	this.MountPoint = string(randStringService(r))
	this.UsedSpace = uint64(uint64(r.Uint32()))
	this.TotalSpace = uint64(uint64(r.Uint32()))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 4)
	}
	return this
}

func NewPopulatedEvent_NetStat(r randyService, easy bool) *Event_NetStat {
	this := &Event_NetStat{}
	this.IfName = string(randStringService(r))
	v39 := r.Intn(10)
	this.IfIp = make([]string, v39)
	for i := 0; i < v39; i++ {
		this.IfIp[i] = string(randStringService(r))
	}
	this.BytesSent = uint64(uint64(r.Uint32()))
	this.BytesRecv = uint64(uint64(r.Uint32()))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedEvent_ProcessResourceUsages(r randyService, easy bool) *Event_ProcessResourceUsages {
	this := &Event_ProcessResourceUsages{}
	v40 := NewPopulatedUuid(r)
	this.AgentId = *v40
	this.CpuUsage = float32(r.Float32())
	if r.Intn(2) == 0 {
		this.CpuUsage *= -1
	}
	this.Memory = uint64(uint64(r.Uint32()))
	this.Cmd = string(randStringService(r))
	this.BytesSent = uint64(uint64(r.Uint32()))
	this.BytesRecv = uint64(uint64(r.Uint32()))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 7)
	}
	return this
}

func NewPopulatedEvent_ExecScriptResponse(r randyService, easy bool) *Event_ExecScriptResponse {
	this := &Event_ExecScriptResponse{}
	this.Seqno = uint32(r.Uint32())
	this.Failed = bool(bool(r.Intn(2) == 0))
	this.Response = string(randStringService(r))
	v41 := NewPopulatedUuid(r)
	this.AgentId = *v41
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedEvent_AgentHealthCheck(r randyService, easy bool) *Event_AgentHealthCheck {
	this := &Event_AgentHealthCheck{}
	v42 := NewPopulatedUuid(r)
	this.AgentId = *v42
	this.Failed = bool(bool(r.Intn(2) == 0))
	this.Seqno = uint32(r.Uint32())
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 4)
	}
	return this
}

func NewPopulatedEvent_ExecRestResponse(r randyService, easy bool) *Event_ExecRestResponse {
	this := &Event_ExecRestResponse{}
	this.Seqno = uint32(r.Uint32())
	this.Failed = bool(bool(r.Intn(2) == 0))
	v43 := r.Intn(100)
	this.Response = make([]byte, v43)
	for i := 0; i < v43; i++ {
		this.Response[i] = byte(r.Intn(256))
	}
	v44 := NewPopulatedUuid(r)
	this.AgentId = *v44
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 5)
	}
	return this
}

func NewPopulatedShellReport(r randyService, easy bool) *ShellReport {
	this := &ShellReport{}
	v45 := NewPopulatedSidecarRequestHeader(r, easy)
	this.SidecarRequestHeader = *v45
	this.Seqno = uint32(r.Uint32())
	this.Content = string(randStringService(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedService(r, 4)
	}
	return this
}

type randyService interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneService(r randyService) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringService(r randyService) string {
	v46 := r.Intn(100)
	tmps := make([]rune, v46)
	for i := 0; i < v46; i++ {
		tmps[i] = randUTF8RuneService(r)
	}
	return string(tmps)
}
func randUnrecognizedService(r randyService, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldService(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldService(dAtA []byte, r randyService, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateService(dAtA, uint64(key))
		v47 := r.Int63()
		if r.Intn(2) == 0 {
			v47 *= -1
		}
		dAtA = encodeVarintPopulateService(dAtA, uint64(v47))
	case 1:
		dAtA = encodeVarintPopulateService(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateService(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateService(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateService(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateService(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *Msg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Typ)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.JsonBytes)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmptyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SidecarRequestHeader) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Id.Size()
	n += 1 + l + sovService(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Systime)
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SidecarRequestHeader.Size()
	n += 1 + l + sovService(uint64(l))
	l = len(m.OsType)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.OsPlatform)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.OsVersion)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.CpuSerial)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.CpuCores != 0 {
		n += 1 + sovService(uint64(m.CpuCores))
	}
	if m.MemSize != 0 {
		n += 1 + sovService(uint64(m.MemSize))
	}
	if m.SwapSize != 0 {
		n += 1 + sovService(uint64(m.SwapSize))
	}
	l = len(m.Host)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.LocalIp)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.CallBack) > 0 {
		for _, s := range m.CallBack {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SidecarRequestHeader.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovService(uint64(m.Cmd))
	}
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	if m.Options != nil {
		n += m.Options.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_InstallAgentOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstallAgentOptions != nil {
		l = m.InstallAgentOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_UninstallAgentOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UninstallAgentOptions != nil {
		l = m.UninstallAgentOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_UpdateAgentOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpdateAgentOptions != nil {
		l = m.UpdateAgentOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_StartAgentOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StartAgentOptions != nil {
		l = m.StartAgentOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_StopAgentOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StopAgentOptions != nil {
		l = m.StopAgentOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_UpdateAgentConfigOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpdateAgentConfigOptions != nil {
		l = m.UpdateAgentConfigOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_UpdateSidecarOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpdateSidecarOptions != nil {
		l = m.UpdateSidecarOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_UpdateSidecarConfigOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpdateSidecarConfigOptions != nil {
		l = m.UpdateSidecarConfigOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_ExecScriptOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExecScriptOptions != nil {
		l = m.ExecScriptOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_CancelOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CancelOptions != nil {
		l = m.CancelOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_ExecRestOptions_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExecRestOptions != nil {
		l = m.ExecRestOptions.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *ControlResponse_InstallAgentOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	l = len(m.ConfigurationPath)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.BinaryPath)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.Parameter) > 0 {
		for _, s := range m.Parameter {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.InstallParameter) > 0 {
		for _, s := range m.InstallParameter {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	l = len(m.InstallScript)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Workdir)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.HealthShell)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthPeriod)
	n += 1 + l + sovService(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout)
	n += 1 + l + sovService(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthStartPeriod)
	n += 1 + l + sovService(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.HealthTimeout)
	n += 1 + l + sovService(uint64(l))
	if m.HealthRetries != 0 {
		n += 1 + sovService(uint64(m.HealthRetries))
	}
	l = len(m.RunUser)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_UninstallAgentOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if len(m.Parameter) > 0 {
		for _, s := range m.Parameter {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	l = len(m.UninstallScript)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout)
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_UpdateAgentOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if len(m.Parameter) > 0 {
		for _, s := range m.Parameter {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	l = len(m.UpdateScript)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout)
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_StartAgentOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.CpuLimit != 0 {
		n += 5
	}
	if m.MemLimit != 0 {
		n += 1 + sovService(uint64(m.MemLimit))
	}
	if m.NetLimit != 0 {
		n += 1 + sovService(uint64(m.NetLimit))
	}
	if len(m.Environment) > 0 {
		for k, v := range m.Environment {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovService(uint64(len(k))) + 1 + len(v) + sovService(uint64(len(v)))
			n += mapEntrySize + 1 + sovService(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_StopAgentOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.StopAgentOptionsType != 0 {
		n += 1 + sovService(uint64(m.StopAgentOptionsType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_UpdateAgentConfigOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	l = len(m.ConfigContent)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.ConfigPath)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_UpdateSidecarOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_UpdateSidecarConfigOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_ExecScriptOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Parameter) > 0 {
		for _, s := range m.Parameter {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	l = len(m.ExecScript)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout)
	n += 1 + l + sovService(uint64(l))
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_CancelOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ControlResponse_ExecRestOptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Timeout)
	n += 1 + l + sovService(uint64(l))
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SidecarRequestHeader.Size()
	n += 1 + l + sovService(uint64(l))
	if m.EventType != 0 {
		n += 1 + sovService(uint64(m.EventType))
	}
	if m.Details != nil {
		n += m.Details.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_OpProgress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OpProgress != nil {
		l = m.OpProgress.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_AgentError_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AgentError != nil {
		l = m.AgentError.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_OsResourceUsages_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OsResourceUsages != nil {
		l = m.OsResourceUsages.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_ProcResourceUsages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProcResourceUsages != nil {
		l = m.ProcResourceUsages.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_ExecScriptResponse_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExecScriptResponse != nil {
		l = m.ExecScriptResponse.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_AgentHealthCheck_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AgentHealthCheck != nil {
		l = m.AgentHealthCheck.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_ExecRestResponse_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExecRestResponse != nil {
		l = m.ExecRestResponse.Size()
		n += 2 + l + sovService(uint64(l))
	}
	return n
}
func (m *Event_OperationProgress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.Progress != 0 {
		n += 5
	}
	if m.Failed {
		n += 2
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_AgentError) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	l = len(m.Errstr)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_OsResourceUsages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CpuUsage != 0 {
		n += 5
	}
	if m.MemUsage != 0 {
		n += 1 + sovService(uint64(m.MemUsage))
	}
	if m.SwapUsage != 0 {
		n += 1 + sovService(uint64(m.SwapUsage))
	}
	if m.Load1 != 0 {
		n += 5
	}
	if m.Uptime != 0 {
		n += 9
	}
	if len(m.DiskUsage) > 0 {
		for _, e := range m.DiskUsage {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if len(m.NetStats) > 0 {
		for _, e := range m.NetStats {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.CpuCores != 0 {
		n += 1 + sovService(uint64(m.CpuCores))
	}
	if m.MemSize != 0 {
		n += 1 + sovService(uint64(m.MemSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_DiskUsage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MountPoint)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.UsedSpace != 0 {
		n += 1 + sovService(uint64(m.UsedSpace))
	}
	if m.TotalSpace != 0 {
		n += 1 + sovService(uint64(m.TotalSpace))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_NetStat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IfName)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if len(m.IfIp) > 0 {
		for _, s := range m.IfIp {
			l = len(s)
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.BytesSent != 0 {
		n += 1 + sovService(uint64(m.BytesSent))
	}
	if m.BytesRecv != 0 {
		n += 1 + sovService(uint64(m.BytesRecv))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_ProcessResourceUsages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.CpuUsage != 0 {
		n += 5
	}
	if m.Memory != 0 {
		n += 1 + sovService(uint64(m.Memory))
	}
	l = len(m.Cmd)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.BytesSent != 0 {
		n += 1 + sovService(uint64(m.BytesSent))
	}
	if m.BytesRecv != 0 {
		n += 1 + sovService(uint64(m.BytesRecv))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_ExecScriptResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	if m.Failed {
		n += 2
	}
	l = len(m.Response)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_AgentHealthCheck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.Failed {
		n += 2
	}
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Event_ExecRestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	if m.Failed {
		n += 2
	}
	l = len(m.Response)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = m.AgentId.Size()
	n += 1 + l + sovService(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShellReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.SidecarRequestHeader.Size()
	n += 1 + l + sovService(uint64(l))
	if m.Seqno != 0 {
		n += 1 + sovService(uint64(m.Seqno))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *Msg) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Msg{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Index:` + fmt.Sprintf("%v", this.Index) + `,`,
		`Typ:` + fmt.Sprintf("%v", this.Typ) + `,`,
		`JsonBytes:` + fmt.Sprintf("%v", this.JsonBytes) + `,`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *EmptyResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EmptyResponse{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SidecarRequestHeader) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SidecarRequestHeader{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Systime:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Systime), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RegisterRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RegisterRequest{`,
		`SidecarRequestHeader:` + strings.Replace(strings.Replace(this.SidecarRequestHeader.String(), "SidecarRequestHeader", "SidecarRequestHeader", 1), `&`, ``, 1) + `,`,
		`OsType:` + fmt.Sprintf("%v", this.OsType) + `,`,
		`OsPlatform:` + fmt.Sprintf("%v", this.OsPlatform) + `,`,
		`OsVersion:` + fmt.Sprintf("%v", this.OsVersion) + `,`,
		`CpuSerial:` + fmt.Sprintf("%v", this.CpuSerial) + `,`,
		`CpuCores:` + fmt.Sprintf("%v", this.CpuCores) + `,`,
		`MemSize:` + fmt.Sprintf("%v", this.MemSize) + `,`,
		`SwapSize:` + fmt.Sprintf("%v", this.SwapSize) + `,`,
		`Host:` + fmt.Sprintf("%v", this.Host) + `,`,
		`LocalIp:` + fmt.Sprintf("%v", this.LocalIp) + `,`,
		`CallBack:` + fmt.Sprintf("%v", this.CallBack) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RegisterResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RegisterResponse{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlRequest{`,
		`SidecarRequestHeader:` + strings.Replace(strings.Replace(this.SidecarRequestHeader.String(), "SidecarRequestHeader", "SidecarRequestHeader", 1), `&`, ``, 1) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse{`,
		`Cmd:` + fmt.Sprintf("%v", this.Cmd) + `,`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`Options:` + fmt.Sprintf("%v", this.Options) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_InstallAgentOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_InstallAgentOptions_{`,
		`InstallAgentOptions:` + strings.Replace(fmt.Sprintf("%v", this.InstallAgentOptions), "ControlResponse_InstallAgentOptions", "ControlResponse_InstallAgentOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UninstallAgentOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UninstallAgentOptions_{`,
		`UninstallAgentOptions:` + strings.Replace(fmt.Sprintf("%v", this.UninstallAgentOptions), "ControlResponse_UninstallAgentOptions", "ControlResponse_UninstallAgentOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateAgentOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateAgentOptions_{`,
		`UpdateAgentOptions:` + strings.Replace(fmt.Sprintf("%v", this.UpdateAgentOptions), "ControlResponse_UpdateAgentOptions", "ControlResponse_UpdateAgentOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_StartAgentOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_StartAgentOptions_{`,
		`StartAgentOptions:` + strings.Replace(fmt.Sprintf("%v", this.StartAgentOptions), "ControlResponse_StartAgentOptions", "ControlResponse_StartAgentOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_StopAgentOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_StopAgentOptions_{`,
		`StopAgentOptions:` + strings.Replace(fmt.Sprintf("%v", this.StopAgentOptions), "ControlResponse_StopAgentOptions", "ControlResponse_StopAgentOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateAgentConfigOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateAgentConfigOptions_{`,
		`UpdateAgentConfigOptions:` + strings.Replace(fmt.Sprintf("%v", this.UpdateAgentConfigOptions), "ControlResponse_UpdateAgentConfigOptions", "ControlResponse_UpdateAgentConfigOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateSidecarOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateSidecarOptions_{`,
		`UpdateSidecarOptions:` + strings.Replace(fmt.Sprintf("%v", this.UpdateSidecarOptions), "ControlResponse_UpdateSidecarOptions", "ControlResponse_UpdateSidecarOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateSidecarConfigOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateSidecarConfigOptions_{`,
		`UpdateSidecarConfigOptions:` + strings.Replace(fmt.Sprintf("%v", this.UpdateSidecarConfigOptions), "ControlResponse_UpdateSidecarConfigOptions", "ControlResponse_UpdateSidecarConfigOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_ExecScriptOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_ExecScriptOptions_{`,
		`ExecScriptOptions:` + strings.Replace(fmt.Sprintf("%v", this.ExecScriptOptions), "ControlResponse_ExecScriptOptions", "ControlResponse_ExecScriptOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_CancelOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_CancelOptions_{`,
		`CancelOptions:` + strings.Replace(fmt.Sprintf("%v", this.CancelOptions), "ControlResponse_CancelOptions", "ControlResponse_CancelOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_ExecRestOptions_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_ExecRestOptions_{`,
		`ExecRestOptions:` + strings.Replace(fmt.Sprintf("%v", this.ExecRestOptions), "ControlResponse_ExecRestOptions", "ControlResponse_ExecRestOptions", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_InstallAgentOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_InstallAgentOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`ConfigurationPath:` + fmt.Sprintf("%v", this.ConfigurationPath) + `,`,
		`BinaryPath:` + fmt.Sprintf("%v", this.BinaryPath) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`InstallParameter:` + fmt.Sprintf("%v", this.InstallParameter) + `,`,
		`InstallScript:` + fmt.Sprintf("%v", this.InstallScript) + `,`,
		`Workdir:` + fmt.Sprintf("%v", this.Workdir) + `,`,
		`HealthShell:` + fmt.Sprintf("%v", this.HealthShell) + `,`,
		`HealthPeriod:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.HealthPeriod), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`Timeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Timeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`HealthStartPeriod:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.HealthStartPeriod), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`HealthTimeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.HealthTimeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`HealthRetries:` + fmt.Sprintf("%v", this.HealthRetries) + `,`,
		`RunUser:` + fmt.Sprintf("%v", this.RunUser) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UninstallAgentOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UninstallAgentOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`UninstallScript:` + fmt.Sprintf("%v", this.UninstallScript) + `,`,
		`Timeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Timeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateAgentOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateAgentOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`UpdateScript:` + fmt.Sprintf("%v", this.UpdateScript) + `,`,
		`Timeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Timeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_StartAgentOptions) String() string {
	if this == nil {
		return "nil"
	}
	keysForEnvironment := make([]string, 0, len(this.Environment))
	for k, _ := range this.Environment {
		keysForEnvironment = append(keysForEnvironment, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForEnvironment)
	mapStringForEnvironment := "map[string]string{"
	for _, k := range keysForEnvironment {
		mapStringForEnvironment += fmt.Sprintf("%v: %v,", k, this.Environment[k])
	}
	mapStringForEnvironment += "}"
	s := strings.Join([]string{`&ControlResponse_StartAgentOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`CpuLimit:` + fmt.Sprintf("%v", this.CpuLimit) + `,`,
		`MemLimit:` + fmt.Sprintf("%v", this.MemLimit) + `,`,
		`NetLimit:` + fmt.Sprintf("%v", this.NetLimit) + `,`,
		`Environment:` + mapStringForEnvironment + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_StopAgentOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_StopAgentOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`StopAgentOptionsType:` + fmt.Sprintf("%v", this.StopAgentOptionsType) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateAgentConfigOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateAgentConfigOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`ConfigContent:` + fmt.Sprintf("%v", this.ConfigContent) + `,`,
		`ConfigPath:` + fmt.Sprintf("%v", this.ConfigPath) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateSidecarOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateSidecarOptions{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_UpdateSidecarConfigOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_UpdateSidecarConfigOptions{`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_ExecScriptOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_ExecScriptOptions{`,
		`Parameter:` + fmt.Sprintf("%v", this.Parameter) + `,`,
		`ExecScript:` + fmt.Sprintf("%v", this.ExecScript) + `,`,
		`Timeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Timeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_CancelOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_CancelOptions{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControlResponse_ExecRestOptions) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControlResponse_ExecRestOptions{`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`Path:` + fmt.Sprintf("%v", this.Path) + `,`,
		`Query:` + fmt.Sprintf("%v", this.Query) + `,`,
		`Body:` + fmt.Sprintf("%v", this.Body) + `,`,
		`Timeout:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Timeout), "Duration", "types.Duration", 1), `&`, ``, 1) + `,`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event{`,
		`SidecarRequestHeader:` + strings.Replace(strings.Replace(this.SidecarRequestHeader.String(), "SidecarRequestHeader", "SidecarRequestHeader", 1), `&`, ``, 1) + `,`,
		`EventType:` + fmt.Sprintf("%v", this.EventType) + `,`,
		`Details:` + fmt.Sprintf("%v", this.Details) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_OpProgress) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_OpProgress{`,
		`OpProgress:` + strings.Replace(fmt.Sprintf("%v", this.OpProgress), "Event_OperationProgress", "Event_OperationProgress", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_AgentError_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_AgentError_{`,
		`AgentError:` + strings.Replace(fmt.Sprintf("%v", this.AgentError), "Event_AgentError", "Event_AgentError", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_OsResourceUsages_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_OsResourceUsages_{`,
		`OsResourceUsages:` + strings.Replace(fmt.Sprintf("%v", this.OsResourceUsages), "Event_OsResourceUsages", "Event_OsResourceUsages", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ProcResourceUsages) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ProcResourceUsages{`,
		`ProcResourceUsages:` + strings.Replace(fmt.Sprintf("%v", this.ProcResourceUsages), "Event_ProcessResourceUsages", "Event_ProcessResourceUsages", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ExecScriptResponse_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ExecScriptResponse_{`,
		`ExecScriptResponse:` + strings.Replace(fmt.Sprintf("%v", this.ExecScriptResponse), "Event_ExecScriptResponse", "Event_ExecScriptResponse", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_AgentHealthCheck_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_AgentHealthCheck_{`,
		`AgentHealthCheck:` + strings.Replace(fmt.Sprintf("%v", this.AgentHealthCheck), "Event_AgentHealthCheck", "Event_AgentHealthCheck", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ExecRestResponse_) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ExecRestResponse_{`,
		`ExecRestResponse:` + strings.Replace(fmt.Sprintf("%v", this.ExecRestResponse), "Event_ExecRestResponse", "Event_ExecRestResponse", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_OperationProgress) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_OperationProgress{`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`Progress:` + fmt.Sprintf("%v", this.Progress) + `,`,
		`Failed:` + fmt.Sprintf("%v", this.Failed) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_AgentError) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_AgentError{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`Errstr:` + fmt.Sprintf("%v", this.Errstr) + `,`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_OsResourceUsages) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForDiskUsage := "[]Event_DiskUsage{"
	for _, f := range this.DiskUsage {
		repeatedStringForDiskUsage += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForDiskUsage += "}"
	repeatedStringForNetStats := "[]Event_NetStat{"
	for _, f := range this.NetStats {
		repeatedStringForNetStats += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForNetStats += "}"
	s := strings.Join([]string{`&Event_OsResourceUsages{`,
		`CpuUsage:` + fmt.Sprintf("%v", this.CpuUsage) + `,`,
		`MemUsage:` + fmt.Sprintf("%v", this.MemUsage) + `,`,
		`SwapUsage:` + fmt.Sprintf("%v", this.SwapUsage) + `,`,
		`Load1:` + fmt.Sprintf("%v", this.Load1) + `,`,
		`Uptime:` + fmt.Sprintf("%v", this.Uptime) + `,`,
		`DiskUsage:` + repeatedStringForDiskUsage + `,`,
		`NetStats:` + repeatedStringForNetStats + `,`,
		`CpuCores:` + fmt.Sprintf("%v", this.CpuCores) + `,`,
		`MemSize:` + fmt.Sprintf("%v", this.MemSize) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_DiskUsage) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_DiskUsage{`,
		`MountPoint:` + fmt.Sprintf("%v", this.MountPoint) + `,`,
		`UsedSpace:` + fmt.Sprintf("%v", this.UsedSpace) + `,`,
		`TotalSpace:` + fmt.Sprintf("%v", this.TotalSpace) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_NetStat) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_NetStat{`,
		`IfName:` + fmt.Sprintf("%v", this.IfName) + `,`,
		`IfIp:` + fmt.Sprintf("%v", this.IfIp) + `,`,
		`BytesSent:` + fmt.Sprintf("%v", this.BytesSent) + `,`,
		`BytesRecv:` + fmt.Sprintf("%v", this.BytesRecv) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ProcessResourceUsages) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ProcessResourceUsages{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`CpuUsage:` + fmt.Sprintf("%v", this.CpuUsage) + `,`,
		`Memory:` + fmt.Sprintf("%v", this.Memory) + `,`,
		`Cmd:` + fmt.Sprintf("%v", this.Cmd) + `,`,
		`BytesSent:` + fmt.Sprintf("%v", this.BytesSent) + `,`,
		`BytesRecv:` + fmt.Sprintf("%v", this.BytesRecv) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ExecScriptResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ExecScriptResponse{`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`Failed:` + fmt.Sprintf("%v", this.Failed) + `,`,
		`Response:` + fmt.Sprintf("%v", this.Response) + `,`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_AgentHealthCheck) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_AgentHealthCheck{`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`Failed:` + fmt.Sprintf("%v", this.Failed) + `,`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Event_ExecRestResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Event_ExecRestResponse{`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`Failed:` + fmt.Sprintf("%v", this.Failed) + `,`,
		`Response:` + fmt.Sprintf("%v", this.Response) + `,`,
		`AgentId:` + fmt.Sprintf("%v", this.AgentId) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ShellReport) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ShellReport{`,
		`SidecarRequestHeader:` + strings.Replace(strings.Replace(this.SidecarRequestHeader.String(), "SidecarRequestHeader", "SidecarRequestHeader", 1), `&`, ``, 1) + `,`,
		`Seqno:` + fmt.Sprintf("%v", this.Seqno) + `,`,
		`Content:` + fmt.Sprintf("%v", this.Content) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringService(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *Msg) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Msg: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Msg: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Typ", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Typ = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JsonBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JsonBytes = append(m.JsonBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.JsonBytes == nil {
				m.JsonBytes = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = append(m.Key[:0], dAtA[iNdEx:postIndex]...)
			if m.Key == nil {
				m.Key = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmptyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmptyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmptyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SidecarRequestHeader) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SidecarRequestHeader: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SidecarRequestHeader: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Systime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Systime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SidecarRequestHeader", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SidecarRequestHeader.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OsType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsPlatform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OsPlatform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OsVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuSerial", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CpuSerial = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuCores", wireType)
			}
			m.CpuCores = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CpuCores |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemSize", wireType)
			}
			m.MemSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwapSize", wireType)
			}
			m.SwapSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SwapSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Host", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Host = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalIp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallBack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallBack = append(m.CallBack, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SidecarRequestHeader", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SidecarRequestHeader.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControlResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControlResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= ControlResponse_ControlCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallAgentOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_InstallAgentOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_InstallAgentOptions_{v}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UninstallAgentOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_UninstallAgentOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_UninstallAgentOptions_{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAgentOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_UpdateAgentOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_UpdateAgentOptions_{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartAgentOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_StartAgentOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_StartAgentOptions_{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopAgentOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_StopAgentOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_StopAgentOptions_{v}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAgentConfigOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_UpdateAgentConfigOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_UpdateAgentConfigOptions_{v}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateSidecarOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_UpdateSidecarOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_UpdateSidecarOptions_{v}
			iNdEx = postIndex
		case 107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateSidecarConfigOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_UpdateSidecarConfigOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_UpdateSidecarConfigOptions_{v}
			iNdEx = postIndex
		case 108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecScriptOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_ExecScriptOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_ExecScriptOptions_{v}
			iNdEx = postIndex
		case 109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_CancelOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_CancelOptions_{v}
			iNdEx = postIndex
		case 110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecRestOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ControlResponse_ExecRestOptions{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Options = &ControlResponse_ExecRestOptions_{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_InstallAgentOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InstallAgentOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InstallAgentOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigurationPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigurationPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BinaryPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BinaryPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = append(m.Parameter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallParameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallParameter = append(m.InstallParameter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallScript", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallScript = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Workdir", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Workdir = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthShell", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HealthShell = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.HealthPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Timeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthStartPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.HealthStartPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthTimeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.HealthTimeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthRetries", wireType)
			}
			m.HealthRetries = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HealthRetries |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RunUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RunUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_UninstallAgentOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UninstallAgentOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UninstallAgentOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = append(m.Parameter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UninstallScript", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UninstallScript = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Timeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_UpdateAgentOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAgentOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAgentOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = append(m.Parameter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateScript", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateScript = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Timeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_StartAgentOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StartAgentOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StartAgentOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuLimit", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.CpuLimit = float32(math.Float32frombits(v))
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemLimit", wireType)
			}
			m.MemLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemLimit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetLimit", wireType)
			}
			m.NetLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NetLimit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Environment == nil {
				m.Environment = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthService
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthService
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthService
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthService
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipService(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthService
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Environment[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_StopAgentOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StopAgentOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StopAgentOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopAgentOptionsType", wireType)
			}
			m.StopAgentOptionsType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StopAgentOptionsType |= ControlResponse_StopAgentOptions_StopAgentOptionsType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_UpdateAgentConfigOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAgentConfigOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAgentConfigOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_UpdateSidecarOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateSidecarOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateSidecarOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_UpdateSidecarConfigOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateSidecarConfigOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateSidecarConfigOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_ExecScriptOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExecScriptOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExecScriptOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Parameter = append(m.Parameter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecScript", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecScript = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Timeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_CancelOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControlResponse_ExecRestOptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExecRestOptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExecRestOptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = append(m.Body[:0], dAtA[iNdEx:postIndex]...)
			if m.Body == nil {
				m.Body = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Timeout, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Event: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Event: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SidecarRequestHeader", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SidecarRequestHeader.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventType", wireType)
			}
			m.EventType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventType |= Event_EventType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpProgress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_OperationProgress{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_OpProgress{v}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentError", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_AgentError{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_AgentError_{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsResourceUsages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_OsResourceUsages{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_OsResourceUsages_{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcResourceUsages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_ProcessResourceUsages{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_ProcResourceUsages{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecScriptResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_ExecScriptResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_ExecScriptResponse_{v}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentHealthCheck", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_AgentHealthCheck{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_AgentHealthCheck_{v}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecRestResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Event_ExecRestResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Details = &Event_ExecRestResponse_{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_OperationProgress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OperationProgress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OperationProgress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Progress", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Progress = float32(math.Float32frombits(v))
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Failed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Failed = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_AgentError) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AgentError: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AgentError: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Errstr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Errstr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_OsResourceUsages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OsResourceUsages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OsResourceUsages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuUsage", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.CpuUsage = float32(math.Float32frombits(v))
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemUsage", wireType)
			}
			m.MemUsage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemUsage |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwapUsage", wireType)
			}
			m.SwapUsage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SwapUsage |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Load1", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Load1 = float32(math.Float32frombits(v))
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uptime", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Uptime = float64(math.Float64frombits(v))
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiskUsage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiskUsage = append(m.DiskUsage, Event_DiskUsage{})
			if err := m.DiskUsage[len(m.DiskUsage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetStats", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetStats = append(m.NetStats, Event_NetStat{})
			if err := m.NetStats[len(m.NetStats)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuCores", wireType)
			}
			m.CpuCores = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CpuCores |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemSize", wireType)
			}
			m.MemSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_DiskUsage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiskUsage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiskUsage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MountPoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MountPoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsedSpace", wireType)
			}
			m.UsedSpace = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsedSpace |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSpace", wireType)
			}
			m.TotalSpace = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalSpace |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_NetStat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetStat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetStat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IfName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfIp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IfIp = append(m.IfIp, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesSent", wireType)
			}
			m.BytesSent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BytesSent |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesRecv", wireType)
			}
			m.BytesRecv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BytesRecv |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_ProcessResourceUsages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProcessResourceUsages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProcessResourceUsages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuUsage", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.CpuUsage = float32(math.Float32frombits(v))
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
			}
			m.Memory = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Memory |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cmd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesSent", wireType)
			}
			m.BytesSent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BytesSent |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesRecv", wireType)
			}
			m.BytesRecv = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BytesRecv |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_ExecScriptResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExecScriptResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExecScriptResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Failed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Failed = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_AgentHealthCheck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AgentHealthCheck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AgentHealthCheck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Failed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Failed = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Event_ExecRestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExecRestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExecRestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Failed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Failed = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = append(m.Response[:0], dAtA[iNdEx:postIndex]...)
			if m.Response == nil {
				m.Response = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AgentId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShellReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShellReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShellReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SidecarRequestHeader", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SidecarRequestHeader.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seqno", wireType)
			}
			m.Seqno = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seqno |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupService = fmt.Errorf("proto: unexpected end of group")
)
